{
"version":3,
"file":"BasicRobotlegs.js",
"sourceRoot":"file://",
"sources":["C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/bin/html5/haxe/ApplicationMain.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/EventDispatcher.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/DisplayObject.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/InteractiveObject.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/DisplayObjectContainer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Sprite.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/Main.hx","C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/bin/html5/haxe/NMEPreloader.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/HaxeToolkit/haxe/std/js/_std/Xml.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/commands/CommandConfig.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/bundles/mvcs/Command.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/commands/example/ExampleCommand.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/Event.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/model/ModelConfig.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/model/example/ExampleModel.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/services/ServiceConfig.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/services/example/ExampleService.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/view/ViewConfig.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/view/openfl/MainView.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/bundles/mvcs/Mediator.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/view/openfl/MainViewMediator.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/view/openfl/display/SubView.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/ds/BalancedTree.hx","C:/HaxeToolkit/haxe/std/haxe/ds/EnumValueMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/haxe/ds/Vector.hx","C:/HaxeToolkit/haxe/std/haxe/io/Eof.hx","C:/HaxeToolkit/haxe/std/haxe/io/Path.hx","C:/HaxeToolkit/haxe/std/haxe/rtti/Meta.hx","C:/HaxeToolkit/haxe/std/haxe/xml/Fast.hx","C:/HaxeToolkit/haxe/std/haxe/xml/Parser.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/js/Boot.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/_backend/html5/HTML5Application.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/app/Event.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/_backend/html5/HTML5Mouse.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/_backend/html5/HTML5Renderer.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/_backend/html5/HTML5Window.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/app/Module.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/app/Application.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/app/Preloader.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/audio/AudioManager.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/audio/HTML5AudioContext.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/graphics/Image.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/graphics/ImageBuffer.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/graphics/Renderer.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/graphics/utils/ImageCanvasUtil.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/graphics/utils/ImageDataUtil.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/math/Rectangle.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/net/URLLoader.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/net/URLRequest.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/net/URLRequestHeader.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/net/curl/CURLEasy.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/system/System.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/ui/Mouse.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/ui/Window.hx","C:/HaxeToolkit/haxe/lib/lime/2,1,2/lime/utils/ByteArray.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/MovieClip.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/LoaderInfo.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/system/ApplicationDomain.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/UncaughtErrorEvents.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/geom/Matrix.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/Lib.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/Vector.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/AbstractRenderer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/RenderSession.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/canvas/CanvasGraphics.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/canvas/CanvasRenderer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/canvas/CanvasShape.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/canvas/MaskManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/dom/DOMRenderer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/dom/DOMShape.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/GLRenderer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/FastShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/FillShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/shaders/StripShader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/DrawPath.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/FilterManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/FilterTexture.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/geom/Rectangle.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/geom/Point.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/MaskManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/ShaderManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/_internal/renderer/opengl/utils/StencilManager.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Application.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/BitmapData.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Graphics.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Preloader.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Stage.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/display/Stage3D.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/errors/Error.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/errors/ArgumentError.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/TextEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/ErrorEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/FocusEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/IOErrorEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/KeyboardEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/MouseEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/events/TouchEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/media/Sound.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/net/URLRequest.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/InjectionEvent.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/utils/CallProxy.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/Injector.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/ClassProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/ForwardingProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/InjectorUsingProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/LocalOnlyProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/SingletonProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/SoftDependencyProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/dependencyproviders/ValueProvider.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/errors/InjectorError.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/errors/InjectorInterfaceConstructionError.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/errors/InjectorMissingMappingError.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/mapping/InjectionMapping.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/mapping/MappingEvent.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/reflection/ReflectorBase.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/reflection/DescribeTypeRTTIReflector.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/InjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/MethodInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/ConstructorInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/NoParamsConstructorInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/OrderedInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/PostConstructInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/PreDestroyInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/PropertyInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/typedescriptions/TypeDescription.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/utils/TypeDescriptor.hx","C:/HaxeToolkit/haxe/lib/swiftsuspenders/0,0,2-alpha/org/swiftsuspenders/utils/UID.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/bundles/mvcs/MVCSBundle.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/api/CommandPayload.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/CommandExecutor.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/CommandMapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/CommandMapping.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/CommandMappingList.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/CommandTriggerMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/commandCenter/impl/NullCommandTrigger.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/contextView/ContextView.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/contextView/ContextViewExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/contextView/ContextViewListenerConfig.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/contextView/StageSyncExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/directCommandMap/DirectCommandMapExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/directCommandMap/impl/DirectCommandMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/directCommandMap/impl/DirectCommandMapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/enhancedLogging/InjectableLoggerExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/enhancedLogging/TraceLoggingExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/enhancedLogging/impl/LogMessageParser.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/enhancedLogging/impl/LoggerProvider.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/enhancedLogging/impl/TraceLogTarget.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventCommandMap/EventCommandMapExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventCommandMap/impl/EventCommandMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventCommandMap/impl/EventCommandTrigger.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventDispatcher/EventDispatcherExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventDispatcher/impl/EventRelay.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/api/LifecycleEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/eventDispatcher/impl/LifecycleEventRelay.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/localEventMap/LocalEventMapExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/localEventMap/impl/EventMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/localEventMap/impl/EventMapConfig.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/matching/InstanceOfType.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/matching/TypeFilter.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/matching/TypeMatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/matching/TypeMatcherError.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/MediatorMapExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorFactory.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorManager.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorMapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorMapping.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/MediatorViewHandler.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/mediatorMap/impl/NullMediatorUnmapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/ModularityExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/impl/ContextViewBasedExistenceWatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/impl/ModularContextEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/impl/ModuleConnectionConfigurator.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/impl/ModuleConnector.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/modularity/impl/ViewManagerBasedExistenceWatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/StageCrawlerExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/StageObserverExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/ViewManagerExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ContainerBinding.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ContainerBindingEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ContainerRegistry.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ContainerRegistryEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/StageCrawler.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/StageObserver.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ViewManager.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewManager/impl/ViewManagerEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/ViewProcessorMapExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/api/ViewProcessorMapError.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/NullProcessor.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/NullViewProcessorUnmapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewInjectionProcessor.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewProcessorFactory.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewProcessorMap.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewProcessorMapper.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewProcessorMapping.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/viewProcessorMap/impl/ViewProcessorViewHandler.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/vigilance/VigilanceExtension.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/extensions/vigilance/VigilantError.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/api/LifecycleError.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/api/PinEvent.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ApplyHooks.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ClassMatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ConfigManager.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/Context.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ExtensionInstaller.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/GuardsApprove.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/Lifecycle.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/LifecycleTransition.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/LogManager.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/Logger.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/MessageDispatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ObjectMatcher.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/ObjectProcessor.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/Pin.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/RobotlegsInjector.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/impl/SafelyCallBack.hx","C:/HaxeToolkit/haxe/std/Math.hx","C:/_projects/2015/OpenFL/openfl-robotlegs-framework-examples/01-basic-openfl/src/com/imagination/robotlegs/basic/events/AppEvent.hx","C:/HaxeToolkit/haxe/lib/openfl/2,2,7/openfl/net/URLRequestMethod.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/api/LifecycleState.hx","C:/HaxeToolkit/haxe/lib/robotlegs/0,0,2-alpha/robotlegs/bender/framework/api/LogLevel.hx"],
"sourcesContent":["import lime.Assets;\n#if !macro\n\n\nclass ApplicationMain {\n\t\n\t\n\tpublic static var config:lime.app.Config;\n\tpublic static var preloader:openfl.display.Preloader;\n\t\n\t\n\tpublic static function create ():Void {\n\t\t\n\t\tvar app = new openfl.display.Application ();\n\t\tapp.create (config);\n\t\t\n\t\tvar display = new NMEPreloader ();\n\t\t\n\t\tpreloader = new openfl.display.Preloader (display);\n\t\tpreloader.onComplete = init;\n\t\tpreloader.create (config);\n\t\t\n\t\t#if (js && html5)\n\t\tvar urls = [];\n\t\tvar types = [];\n\t\t\n\t\t\n\t\turls.push (\"xml/config.xml\");\n\t\ttypes.push (AssetType.TEXT);\n\t\t\n\t\t\n\t\turls.push (\"xml/_example_config.xml\");\n\t\ttypes.push (AssetType.TEXT);\n\t\t\n\t\t\n\t\t\n\t\tif (config.assetsPrefix != null) {\n\t\t\t\n\t\t\tfor (i in 0...urls.length) {\n\t\t\t\t\n\t\t\t\tif (types[i] != AssetType.FONT) {\n\t\t\t\t\t\n\t\t\t\t\turls[i] = config.assetsPrefix + urls[i];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tpreloader.load (urls, types);\n\t\t#end\n\t\t\n\t\tvar result = app.exec ();\n\t\t\n\t\t#if (sys && !emscripten)\n\t\tSys.exit (result);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function init ():Void {\n\t\t\n\t\tvar loaded = 0;\n\t\tvar total = 0;\n\t\tvar library_onLoad = function (__) {\n\t\t\t\n\t\t\tloaded++;\n\t\t\t\n\t\t\tif (loaded == total) {\n\t\t\t\t\n\t\t\t\tstart ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tpreloader = null;\n\t\t\n\t\t\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function main () {\n\t\t\n\t\tconfig = {\n\t\t\t\n\t\t\tantialiasing: Std.int (0),\n\t\t\tbackground: Std.int (0),\n\t\t\tborderless: false,\n\t\t\tdepthBuffer: false,\n\t\t\tfps: Std.int (60),\n\t\t\tfullscreen: true,\n\t\t\theight: Std.int (0),\n\t\t\torientation: \"\",\n\t\t\tresizable: true,\n\t\t\tstencilBuffer: false,\n\t\t\ttitle: \"BasicRobotlegs\",\n\t\t\tvsync: false,\n\t\t\twidth: Std.int (0),\n\t\t\t\n\t\t}\n\t\t\n\t\t#if js\n\t\t#if (munit || utest)\n\t\tflash.Lib.embed (null, 0, 0, \"000000\");\n\t\t#end\n\t\t#else\n\t\tcreate ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function start ():Void {\n\t\t\n\t\tvar hasMain = false;\n\t\tvar entryPoint = Type.resolveClass (\"com.imagination.robotlegs.basic.Main\");\n\t\t\n\t\tfor (methodName in Type.getClassFields (entryPoint)) {\n\t\t\t\n\t\t\tif (methodName == \"main\") {\n\t\t\t\t\n\t\t\t\thasMain = true;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hasMain) {\n\t\t\t\n\t\t\tReflect.callMethod (entryPoint, Reflect.field (entryPoint, \"main\"), []);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar instance:DocumentClass = Type.createInstance (DocumentClass, []);\n\t\t\t\n\t\t\t/*if (Std.is (instance, openfl.display.DisplayObject)) {\n\t\t\t\t\n\t\t\t\topenfl.Lib.current.addChild (cast instance);\n\t\t\t\t\n\t\t\t}*/\n\t\t\t\n\t\t}\n\t\t\n\t\topenfl.Lib.current.stage.dispatchEvent (new openfl.events.Event (openfl.events.Event.RESIZE, false, false));\n\t\t\n\t}\n\t\n\t\n\t#if neko\n\t@:noCompletion public static function __init__ () {\n\t\t\n\t\tvar loader = new neko.vm.Loader (untyped $loader);\n\t\tloader.addPath (haxe.io.Path.directory (Sys.executablePath ()));\n\t\tloader.addPath (\"./\");\n\t\tloader.addPath (\"@executable_path/\");\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n@:build(DocumentClass.build())\n@:keep class DocumentClass extends com.imagination.robotlegs.basic.Main {}\n\n\n#else\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n\n\nclass DocumentClass {\n\t\n\t\n\tmacro public static function build ():Array<Field> {\n\t\t\n\t\tvar classType = Context.getLocalClass ().get ();\n\t\tvar searchTypes = classType;\n\t\t\n\t\twhile (searchTypes.superClass != null) {\n\t\t\t\n\t\t\tif (searchTypes.pack.length == 2 && searchTypes.pack[1] == \"display\" && searchTypes.name == \"DisplayObject\") {\n\t\t\t\t\n\t\t\t\tvar fields = Context.getBuildFields ();\n\t\t\t\t\n\t\t\t\tvar method = macro {\n\t\t\t\t\t\n\t\t\t\t\topenfl.Lib.current.addChild (this);\n\t\t\t\t\tsuper ();\n\t\t\t\t\tdispatchEvent (new openfl.events.Event (openfl.events.Event.ADDED_TO_STAGE, false, false));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [], expr: method, params: [], ret: macro :Void }), pos: Context.currentPos () });\n\t\t\t\t\n\t\t\t\treturn fields;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsearchTypes = searchTypes.superClass.t.get ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n","package openfl.events; #if !flash #if !lime_legacy\n\n\nimport openfl.events.EventPhase;\nimport openfl.events.IEventDispatcher;\n\n\n/**\n * The EventDispatcher class is the base class for all classes that dispatch\n * events. The EventDispatcher class implements the IEventDispatcher interface\n * and is the base class for the DisplayObject class. The EventDispatcher\n * class allows any object on the display list to be an event target and as\n * such, to use the methods of the IEventDispatcher interface.\n *\n * <p>Event targets are an important part of the Flash<sup>®</sup> Player and\n * Adobe<sup>®</sup> AIR<sup>®</sup> event model. The event target serves as\n * the focal point for how events flow through the display list hierarchy.\n * When an event such as a mouse click or a keypress occurs, Flash Player or\n * the AIR application dispatches an event object into the event flow from the\n * root of the display list. The event object then makes its way through the\n * display list until it reaches the event target, at which point it begins\n * its return trip through the display list. This round-trip journey to the\n * event target is conceptually divided into three phases: the capture phase\n * comprises the journey from the root to the last node before the event\n * target's node, the target phase comprises only the event target node, and\n * the bubbling phase comprises any subsequent nodes encountered on the return\n * trip to the root of the display list.</p>\n *\n * <p>In general, the easiest way for a user-defined class to gain event\n * dispatching capabilities is to extend EventDispatcher. If this is\n * impossible(that is, if the class is already extending another class), you\n * can instead implement the IEventDispatcher interface, create an\n * EventDispatcher member, and write simple hooks to route calls into the\n * aggregated EventDispatcher.</p>\n * \n * @event activate   [broadcast event] Dispatched when the Flash Player or AIR\n *                   application gains operating system focus and becomes\n *                   active. This event is a broadcast event, which means that\n *                   it is dispatched by all EventDispatcher objects with a\n *                   listener registered for this event. For more information\n *                   about broadcast events, see the DisplayObject class.\n * @event deactivate [broadcast event] Dispatched when the Flash Player or AIR\n *                   application operating loses system focus and is becoming\n *                   inactive. This event is a broadcast event, which means\n *                   that it is dispatched by all EventDispatcher objects with\n *                   a listener registered for this event. For more\n *                   information about broadcast events, see the DisplayObject\n *                   class.\n */\n\n@:access(openfl.events.Event)\n\n\nclass EventDispatcher implements IEventDispatcher {\n\t\n\t\n\t@:noCompletion private var __targetDispatcher:IEventDispatcher;\n\t@:noCompletion private var __eventMap:Map<String, Array<Listener>>;\n\t\n\t\n\t/**\n\t * Aggregates an instance of the EventDispatcher class.\n\t *\n\t * <p>The EventDispatcher class is generally used as a base class, which\n\t * means that most developers do not need to use this constructor function.\n\t * However, advanced developers who are implementing the IEventDispatcher\n\t * interface need to use this constructor. If you are unable to extend the\n\t * EventDispatcher class and must instead implement the IEventDispatcher\n\t * interface, use this constructor to aggregate an instance of the\n\t * EventDispatcher class.</p>\n\t * \n\t * @param target The target object for events dispatched to the\n\t *               EventDispatcher object. This parameter is used when the\n\t *               EventDispatcher instance is aggregated by a class that\n\t *               implements IEventDispatcher; it is necessary so that the\n\t *               containing object can be the target for events. Do not use\n\t *               this parameter in simple cases in which a class extends\n\t *               EventDispatcher.\n\t */\n\tpublic function new (target:IEventDispatcher = null):Void {\n\t\t\n\t\tif (target != null) {\n\t\t\t\n\t\t\t__targetDispatcher = target;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Registers an event listener object with an EventDispatcher object so that\n\t * the listener receives notification of an event. You can register event\n\t * listeners on all nodes in the display list for a specific type of event,\n\t * phase, and priority.\n\t *\n\t * <p>After you successfully register an event listener, you cannot change\n\t * its priority through additional calls to <code>addEventListener()</code>.\n\t * To change a listener's priority, you must first call\n\t * <code>removeListener()</code>. Then you can register the listener again\n\t * with the new priority level. </p>\n\t *\n\t * <p>Keep in mind that after the listener is registered, subsequent calls to\n\t * <code>addEventListener()</code> with a different <code>type</code> or\n\t * <code>useCapture</code> value result in the creation of a separate\n\t * listener registration. For example, if you first register a listener with\n\t * <code>useCapture</code> set to <code>true</code>, it listens only during\n\t * the capture phase. If you call <code>addEventListener()</code> again using\n\t * the same listener object, but with <code>useCapture</code> set to\n\t * <code>false</code>, you have two separate listeners: one that listens\n\t * during the capture phase and another that listens during the target and\n\t * bubbling phases. </p>\n\t *\n\t * <p>You cannot register an event listener for only the target phase or the\n\t * bubbling phase. Those phases are coupled during registration because\n\t * bubbling applies only to the ancestors of the target node.</p>\n\t *\n\t * <p>If you no longer need an event listener, remove it by calling\n\t * <code>removeEventListener()</code>, or memory problems could result. Event\n\t * listeners are not automatically removed from memory because the garbage\n\t * collector does not remove the listener as long as the dispatching object\n\t * exists(unless the <code>useWeakReference</code> parameter is set to\n\t * <code>true</code>).</p>\n\t *\n\t * <p>Copying an EventDispatcher instance does not copy the event listeners\n\t * attached to it.(If your newly created node needs an event listener, you\n\t * must attach the listener after creating the node.) However, if you move an\n\t * EventDispatcher instance, the event listeners attached to it move along\n\t * with it.</p>\n\t *\n\t * <p>If the event listener is being registered on a node while an event is\n\t * being processed on this node, the event listener is not triggered during\n\t * the current phase but can be triggered during a later phase in the event\n\t * flow, such as the bubbling phase.</p>\n\t *\n\t * <p>If an event listener is removed from a node while an event is being\n\t * processed on the node, it is still triggered by the current actions. After\n\t * it is removed, the event listener is never invoked again(unless\n\t * registered again for future processing). </p>\n\t * \n\t * @param type             The type of event.\n\t * @param useCapture       Determines whether the listener works in the\n\t *                         capture phase or the target and bubbling phases.\n\t *                         If <code>useCapture</code> is set to\n\t *                         <code>true</code>, the listener processes the\n\t *                         event only during the capture phase and not in the\n\t *                         target or bubbling phase. If\n\t *                         <code>useCapture</code> is <code>false</code>, the\n\t *                         listener processes the event only during the\n\t *                         target or bubbling phase. To listen for the event\n\t *                         in all three phases, call\n\t *                         <code>addEventListener</code> twice, once with\n\t *                         <code>useCapture</code> set to <code>true</code>,\n\t *                         then again with <code>useCapture</code> set to\n\t *                         <code>false</code>.\n\t * @param priority         The priority level of the event listener. The\n\t *                         priority is designated by a signed 32-bit integer.\n\t *                         The higher the number, the higher the priority.\n\t *                         All listeners with priority <i>n</i> are processed\n\t *                         before listeners of priority <i>n</i>-1. If two or\n\t *                         more listeners share the same priority, they are\n\t *                         processed in the order in which they were added.\n\t *                         The default priority is 0.\n\t * @param useWeakReference Determines whether the reference to the listener\n\t *                         is strong or weak. A strong reference(the\n\t *                         default) prevents your listener from being\n\t *                         garbage-collected. A weak reference does not.\n\t *\n\t *                         <p>Class-level member functions are not subject to\n\t *                         garbage collection, so you can set\n\t *                         <code>useWeakReference</code> to <code>true</code>\n\t *                         for class-level member functions without\n\t *                         subjecting them to garbage collection. If you set\n\t *                         <code>useWeakReference</code> to <code>true</code>\n\t *                         for a listener that is a nested inner function,\n\t *                         the function will be garbage-collected and no\n\t *                         longer persistent. If you create references to the\n\t *                         inner function(save it in another variable) then\n\t *                         it is not garbage-collected and stays\n\t *                         persistent.</p>\n\t * @throws ArgumentError The <code>listener</code> specified is not a\n\t *                       function.\n\t */\n\tpublic function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\n\t\t\n\t\tif (__eventMap == null) {\n\t\t\t\n\t\t\t__eventMap = new Map<String, Array<Listener>> ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!__eventMap.exists (type)) {\n\t\t\t\n\t\t\tvar list = new Array<Listener> ();\n\t\t\tlist.push (new Listener (listener, useCapture, priority));\n\t\t\t__eventMap.set (type, list);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar list = __eventMap.get (type);\n\t\t\t\n\t\t\tfor (i in 0...list.length) {\n\t\t\t\t\n\t\t\t\tif (Reflect.compareMethods (list[i].callback, listener)) return;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlist.push (new Listener (listener, useCapture, priority));\n\t\t\tlist.sort (__sortByPriority);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Dispatches an event into the event flow. The event target is the\n\t * EventDispatcher object upon which the <code>dispatchEvent()</code> method\n\t * is called.\n\t * \n\t * @param event The Event object that is dispatched into the event flow. If\n\t *              the event is being redispatched, a clone of the event is\n\t *              created automatically. After an event is dispatched, its\n\t *              <code>target</code> property cannot be changed, so you must\n\t *              create a new copy of the event for redispatching to work.\n\t * @return A value of <code>true</code> if the event was successfully\n\t *         dispatched. A value of <code>false</code> indicates failure or\n\t *         that <code>preventDefault()</code> was called on the event.\n\t * @throws Error The event dispatch recursion limit has been reached.\n\t */\n\tpublic function dispatchEvent (event:Event):Bool {\n\t\t\n\t\tif (__eventMap == null || event == null) return false;\n\t\t\n\t\tvar list = __eventMap.get (event.type);\n\t\t\n\t\tif (list == null) return false;\n\t\t\n\t\tif (event.target == null) {\n\t\t\t\n\t\t\tif (__targetDispatcher != null) {\n\t\t\t\t\n\t\t\t\tevent.target = __targetDispatcher;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tevent.target = this;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tevent.currentTarget = this;\n\t\t\n\t\tif (event.target == event.currentTarget) event.eventPhase = EventPhase.AT_TARGET;\n\t\t\n\t\tvar capture = (event.eventPhase == EventPhase.CAPTURING_PHASE);\n\t\tvar index = 0;\n\t\tvar listener;\n\t\t\n\t\twhile (index < list.length) {\n\t\t\t\n\t\t\tlistener = list[index];\n\t\t\t\n\t\t\tif (listener.useCapture == capture) {\n\t\t\t\t\n\t\t\t\t//listener.callback (event.clone ());\n\t\t\t\tlistener.callback (event);\n\t\t\t\t\n\t\t\t\tif (event.__isCancelledNow) {\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (listener == list[index]) {\n\t\t\t\t\n\t\t\t\tindex++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Checks whether the EventDispatcher object has any listeners registered for\n\t * a specific type of event. This allows you to determine where an\n\t * EventDispatcher object has altered handling of an event type in the event\n\t * flow hierarchy. To determine whether a specific event type actually\n\t * triggers an event listener, use <code>willTrigger()</code>.\n\t *\n\t * <p>The difference between <code>hasEventListener()</code> and\n\t * <code>willTrigger()</code> is that <code>hasEventListener()</code>\n\t * examines only the object to which it belongs, whereas\n\t * <code>willTrigger()</code> examines the entire event flow for the event\n\t * specified by the <code>type</code> parameter. </p>\n\t *\n\t * <p>When <code>hasEventListener()</code> is called from a LoaderInfo\n\t * object, only the listeners that the caller can access are considered.</p>\n\t * \n\t * @param type The type of event.\n\t * @return A value of <code>true</code> if a listener of the specified type\n\t *         is registered; <code>false</code> otherwise.\n\t */\n\tpublic function hasEventListener (type:String):Bool {\n\t\t\n\t\tif (__eventMap == null) return false;\n\t\treturn __eventMap.exists (type);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a listener from the EventDispatcher object. If there is no\n\t * matching listener registered with the EventDispatcher object, a call to\n\t * this method has no effect.\n\t * \n\t * @param type       The type of event.\n\t * @param useCapture Specifies whether the listener was registered for the\n\t *                   capture phase or the target and bubbling phases. If the\n\t *                   listener was registered for both the capture phase and\n\t *                   the target and bubbling phases, two calls to\n\t *                   <code>removeEventListener()</code> are required to\n\t *                   remove both, one call with <code>useCapture()</code> set\n\t *                   to <code>true</code>, and another call with\n\t *                   <code>useCapture()</code> set to <code>false</code>.\n\t */\n\tpublic function removeEventListener (type:String, listener:Dynamic->Void, capture:Bool = false):Void {\n\t\t\n\t\tif (__eventMap == null) return;\n\t\t\n\t\tvar list = __eventMap.get (type);\n\t\t\n\t\tif (list == null) return;\n\t\t\n\t\tfor (i in 0...list.length) {\n\t\t\t\n\t\t\tif (list[i].match (listener, capture)) {\n\t\t\t\t\n\t\t\t\tlist.splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (list.length == 0) {\n\t\t\t\n\t\t\t__eventMap.remove (type);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!__eventMap.iterator ().hasNext ()) {\n\t\t\t\n\t\t\t__eventMap = null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String { \n\t\t\n\t\tvar full = Type.getClassName (Type.getClass (this));\n\t\tvar short = full.split (\".\").pop ();\n\t\t\n\t\treturn untyped \"[object \" + short + \"]\";\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Checks whether an event listener is registered with this EventDispatcher\n\t * object or any of its ancestors for the specified event type. This method\n\t * returns <code>true</code> if an event listener is triggered during any\n\t * phase of the event flow when an event of the specified type is dispatched\n\t * to this EventDispatcher object or any of its descendants.\n\t *\n\t * <p>The difference between the <code>hasEventListener()</code> and the\n\t * <code>willTrigger()</code> methods is that <code>hasEventListener()</code>\n\t * examines only the object to which it belongs, whereas the\n\t * <code>willTrigger()</code> method examines the entire event flow for the\n\t * event specified by the <code>type</code> parameter. </p>\n\t *\n\t * <p>When <code>willTrigger()</code> is called from a LoaderInfo object,\n\t * only the listeners that the caller can access are considered.</p>\n\t * \n\t * @param type The type of event.\n\t * @return A value of <code>true</code> if a listener of the specified type\n\t *         will be triggered; <code>false</code> otherwise.\n\t */\n\tpublic function willTrigger (type:String):Bool {\n\t\t\n\t\treturn hasEventListener (type);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __sortByPriority (l1:Listener, l2:Listener):Int {\n\t\t\n\t\treturn l1.priority == l2.priority ? 0 : (l1.priority > l2.priority ? -1 : 1);\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate class Listener {\n\t\n\t\n\tpublic var callback:Dynamic->Void;\n\tpublic var priority:Int;\n\tpublic var useCapture:Bool;\n\t\n\t\n\tpublic function new (callback:Dynamic->Void, useCapture:Bool, priority:Int) {\n\t\t\n\t\tthis.callback = callback;\n\t\tthis.useCapture = useCapture;\n\t\tthis.priority = priority;\n\t\t\n\t}\n\t\n\t\n\tpublic function match (callback:Dynamic->Void, useCapture:Bool) {\n\t\t\n\t\treturn (Reflect.compareMethods (this.callback, callback) && this.useCapture == useCapture);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef EventDispatcher = openfl._v2.events.EventDispatcher;\n#end\n#else\ntypedef EventDispatcher = flash.events.EventDispatcher;\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Stage;\nimport openfl.errors.TypeError;\nimport openfl.events.Event;\nimport openfl.events.EventPhase;\nimport openfl.events.EventDispatcher;\nimport openfl.filters.BitmapFilter;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.geom.Transform;\nimport openfl.Lib;\n\n#if js\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.CSSStyleDeclaration;\nimport js.html.Element;\n#end\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in openfl. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToStage     Dispatched when a display object is added to the on\n *                         stage display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromStage Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Stage\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Stage.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\n\n@:access(openfl.events.Event)\n@:access(openfl.display.Stage)\n\n\nclass DisplayObject extends EventDispatcher implements IBitmapDrawable {\n\t\n\t\n\t@:noCompletion private static var __instanceCount = 0;\n\t@:noCompletion private static var __worldRenderDirty = 0;\n\t@:noCompletion private static var __worldTransformDirty = 0;\n\t\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic var alpha (get, set):Float;\n\t\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic var blendMode:BlendMode;\n\t\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display \n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic var cacheAsBitmap:Bool;\n\t\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The openfl.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The openfl.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t * \n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n\tpublic var filters (get, set):Array<BitmapFilter>;\n\t\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic var height (get, set):Float;\n\t\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic var loaderInfo:LoaderInfo;\n\t\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic var mask (get, set):DisplayObject;\n\t\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic var mouseX (get, null):Float;\n\t\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic var mouseY (get, null):Float;\n\t\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t * \n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic var name (get, set):String;\n\t\n\t/**\n\t * Specifies whether the display object is opaque with a certain background\n\t * color. A transparent bitmap contains alpha channel data and is drawn\n\t * transparently. An opaque bitmap has no alpha channel(and renders faster\n\t * than a transparent bitmap). If the bitmap is opaque, you specify its own\n\t * background color to use.\n\t *\n\t * <p>If set to a number value, the surface is opaque(not transparent) with\n\t * the RGB background color that the number specifies. If set to\n\t * <code>null</code>(the default value), the display object has a\n\t * transparent background.</p>\n\t *\n\t * <p>The <code>opaqueBackground</code> property is intended mainly for use\n\t * with the <code>cacheAsBitmap</code> property, for rendering optimization.\n\t * For display objects in which the <code>cacheAsBitmap</code> property is\n\t * set to true, setting <code>opaqueBackground</code> can improve rendering\n\t * performance.</p>\n\t *\n\t * <p>The opaque background region is <i>not</i> matched when calling the\n\t * <code>hitTestPoint()</code> method with the <code>shapeFlag</code>\n\t * parameter set to <code>true</code>.</p>\n\t *\n\t * <p>The opaque background region does not respond to mouse events.</p>\n\t */\n\tpublic var opaqueBackground:Null <Int>;\n\t\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t * \n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic var parent (default, null):DisplayObjectContainer;\n\t\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Stage object is the Stage object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic var root (get, null):DisplayObject;\n\t\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic var rotation (get, set):Float;\n\t\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t * \n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic var scale9Grid:Rectangle;\n\t\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic var scaleX (get, set):Float;\n\t\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic var scaleY (get, set):Float;\n\t\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic var scrollRect (get, set):Rectangle;\n\t\n\t/**\n\t * The Stage of the display object. A Flash runtime application has only one\n\t * Stage object. For example, you can create and load multiple display\n\t * objects into the display list, and the <code>stage</code> property of each\n\t * display object refers to the same Stage object(even if the display object\n\t * belongs to a loaded SWF file).\n\t *\n\t * <p>If a display object is not added to the display list, its\n\t * <code>stage</code> property is set to <code>null</code>.</p>\n\t */\n\tpublic var stage (default, null):Stage;\n\t\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> var myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic var transform (get, set):Transform;\n\t\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic var visible (get, set):Bool;\n\t\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic var width (get, set):Float;\n\t\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic var x (get, set):Float;\n\t\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic var y (get, set):Float;\n\t\n\t@:dox(hide) @:noCompletion public var __worldTransform:Matrix;\n\t\n\t@:noCompletion private var __alpha:Float;\n\t@:noCompletion private var __filters:Array<BitmapFilter>;\n\t@:noCompletion private var __graphics:Graphics;\n\t@:noCompletion private var __interactive:Bool;\n\t@:noCompletion private var __isMask:Bool;\n\t@:noCompletion private var __mask:DisplayObject;\n\t@:noCompletion private var __name:String;\n\t@:noCompletion private var __renderable:Bool;\n\t@:noCompletion private var __renderDirty:Bool;\n\t@:noCompletion private var __rotation:Float;\n\t@:noCompletion private var __rotationCache:Float;\n\t@:noCompletion private var __rotationCosine:Float;\n\t@:noCompletion private var __rotationSine:Float;\n\t@:noCompletion private var __scaleX:Float;\n\t@:noCompletion private var __scaleY:Float;\n\t@:noCompletion private var __scrollRect:Rectangle;\n\t@:noCompletion private var __transform:Transform;\n\t@:noCompletion private var __transformDirty:Bool;\n\t@:noCompletion private var __visible:Bool;\n\t@:noCompletion private var __worldAlpha:Float;\n\t@:noCompletion private var __worldAlphaChanged:Bool;\n\t@:noCompletion private var __worldClip:Rectangle;\n\t@:noCompletion private var __worldClipChanged:Bool;\n\t@:noCompletion private var __worldTransformCache:Matrix;\n\t@:noCompletion private var __worldTransformChanged:Bool;\n\t@:noCompletion private var __worldVisible:Bool;\n\t@:noCompletion private var __worldVisibleChanged:Bool;\n\t@:noCompletion private var __worldZ:Int;\n\t@:noCompletion private var __x:Float;\n\t@:noCompletion private var __y:Float;\n\t\n\t#if js\n\t@:noCompletion private var __canvas:CanvasElement;\n\t@:noCompletion private var __context:CanvasRenderingContext2D;\n\t@:noCompletion private var __style:CSSStyleDeclaration;\n\t#end\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__alpha = 1;\n\t\t__rotation = 0;\n\t\t__scaleX = 1;\n\t\t__scaleY = 1;\n\t\t__visible = true;\n\t\t__x = 0;\n\t\t__y = 0;\n\t\t\n\t\t__worldAlpha = 1;\n\t\t__worldTransform = new Matrix ();\n\t\t__rotationCache = 0;\n\t\t__rotationSine = 0;\n\t\t__rotationCosine = 1;\n\t\t\n\t\t#if dom\n\t\t__worldVisible = true;\n\t\t#end\n\t\t\n\t\tname = \"instance\" + (++__instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic override function dispatchEvent (event:Event):Bool {\n\t\t\n\t\tif (event.type == Event.ADDED_TO_STAGE){\n\t\t\tif (parent != null && parent != this) {\n\t\t\t\tparent.__targetDispatcher = this;\n\t\t\t\tparent.dispatchEvent(event);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\n\t\t}\n\t\t\n\t\tvar result = super.dispatchEvent (event);\n\t\t\n\t\tif (event.__isCancelled) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (event.bubbles && parent != null && parent != this) {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\n\t\t\tparent.dispatchEvent (event);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\t\n\t\t\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t * \n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic function getBounds (targetCoordinateSpace:DisplayObject):Rectangle {\n\t\t\n\t\tvar matrix = __getTransform ();\n\t\t\n\t\tif (targetCoordinateSpace != null) {\n\t\t\t\n\t\t\tmatrix = matrix.clone ();\n\t\t\tmatrix.concat (targetCoordinateSpace.__worldTransform.clone ().invert ());\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getBounds (bounds, matrix);\n\t\t\n\t\treturn bounds;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Stage coordinates, or Stage coordinates to local\n\t * coordinates, respectively.</p>\n\t * \n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic function getRect (targetCoordinateSpace:DisplayObject):Rectangle {\n\t\t\n\t\t// should not account for stroke widths, but is that possible?\n\t\treturn getBounds (targetCoordinateSpace);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Converts the <code>point</code> object from the Stage(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Stage.</p>\n\t * \n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic function globalToLocal (pos:Point):Point {\n\t\t\n\t\treturn __getTransform ().clone ().invert ().transformPoint (pos);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t * \n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic function hitTestObject (obj:DisplayObject):Bool {\n\t\t\n\t\tif (obj != null && obj.parent != null && parent != null) {\n\t\t\t\n\t\t\tvar currentBounds = getBounds (this);\n\t\t\tvar targetBounds = obj.getBounds (this);\n\t\t\t\n\t\t\treturn currentBounds.intersects (targetBounds);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Stage, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Stage).\n\t * \n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool {\n\t\t\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tvar currentBounds = getBounds (this);\n\t\t\treturn currentBounds.containsPoint (new Point (x, y));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Stage(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Stage(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Stage instead of the origin of the display object.</p>\n\t * \n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Stage.\n\t */\n\tpublic function localToGlobal (point:Point):Point {\n\t\t\n\t\treturn __getTransform ().transformPoint (point);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __broadcast (event:Event, notifyChilden:Bool):Bool {\n\t\t\n\t\tif (__eventMap != null && hasEventListener (event.type)) {\n\t\t\t\n\t\t\tvar result = super.dispatchEvent (event);\n\t\t\t\n\t\t\tif (event.__isCancelled) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __getInteractive (stack:Array<DisplayObject>):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __getLocalBounds (rect:Rectangle):Void {\n\t\t\n\t\t__getTransform ();\n\t\t__getBounds (rect, new Matrix ());\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __getTransform ():Matrix {\n\t\t\n\t\tif (__transformDirty || __worldTransformDirty > 0) {\n\t\t\t\n\t\t\tvar list = [];\n\t\t\tvar current = this;\n\t\t\tvar transformDirty = __transformDirty;\n\t\t\t\n\t\t\tif (parent == null) {\n\t\t\t\t\n\t\t\t\tif (transformDirty) __update (true, false);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (current.parent != null) {\n\t\t\t\t\t\n\t\t\t\t\tlist.push (current);\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t\t\n\t\t\t\t\tif (current.__transformDirty) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttransformDirty = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (transformDirty) {\n\t\t\t\t\n\t\t\t\tvar i = list.length;\n\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tlist[i].__update (true, false);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __worldTransform;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderMask (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __setStageReference (stage:Stage):Void {\n\t\t\n\t\tif (this.stage != stage) {\n\t\t\t\n\t\t\tif (this.stage != null) {\n\t\t\t\t\n\t\t\t\tdispatchEvent (new Event (Event.REMOVED_FROM_STAGE, false, false));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.stage = stage;\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tdispatchEvent (new Event (Event.ADDED_TO_STAGE, false, false));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __setRenderDirty ():Void {\n\t\t\n\t\tif (!__renderDirty) {\n\t\t\t\n\t\t\t__renderDirty = true;\n\t\t\t__worldRenderDirty++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __setTransformDirty ():Void {\n\t\t\n\t\tif (!__transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = true;\n\t\t\t__worldTransformDirty++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __update (transformOnly:Bool, updateChildren:Bool):Void {\n\t\t\n\t\t__renderable = (visible && scaleX != 0 && scaleY != 0 && !__isMask);\n\t\t//if (!__renderable && !__isMask) return;\n\t\t\n\t\tif (rotation != __rotationCache) {\n\t\t\t\n\t\t\t__rotationCache = rotation;\n\t\t\tvar radians = rotation * (Math.PI / 180);\n\t\t\t__rotationSine = Math.sin (radians);\n\t\t\t__rotationCosine = Math.cos (radians);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tvar parentTransform = parent.__worldTransform;\n\t\t\t\n\t\t\tvar a00 = __rotationCosine * scaleX;\n\t\t\tvar a01 = __rotationSine * scaleX;\n\t\t\tvar a10 = -__rotationSine * scaleY;\n\t\t\tvar a11 = __rotationCosine * scaleY;\n\t\t\tvar b00 = parentTransform.a;\n\t\t\tvar b01 = parentTransform.b;\n\t\t\tvar b10 = parentTransform.c;\n\t\t\tvar b11 = parentTransform.d;\n\t\t\t\n\t\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\n\t\t\t\n\t\t\t__worldTransform.a = a00 * b00 + a01 * b10;\n\t\t\t__worldTransform.b = a00 * b01 + a01 * b11;\n\t\t\t__worldTransform.c = a10 * b00 + a11 * b10;\n\t\t\t__worldTransform.d = a10 * b01 + a11 * b11;\n\t\t\t\n\t\t\tif (scrollRect == null) {\n\t\t\t\t\n\t\t\t\t__worldTransform.tx = x * b00 + y * b10 + parentTransform.tx;\n\t\t\t\t__worldTransform.ty = x * b01 + y * b11 + parentTransform.ty;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__worldTransform.tx = (x - scrollRect.x) * b00 + (y - scrollRect.y) * b10 + parentTransform.tx;\n\t\t\t\t__worldTransform.ty = (x - scrollRect.x) * b01 + (y - scrollRect.y) * b11 + parentTransform.ty;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__worldTransform.a = __rotationCosine * scaleX;\n\t\t\t__worldTransform.c = -__rotationSine * scaleY;\n\t\t\t__worldTransform.b = __rotationSine * scaleX;\n\t\t\t__worldTransform.d = __rotationCosine * scaleY;\n\t\t\t\n\t\t\tif (scrollRect == null) {\n\t\t\t\t\n\t\t\t\t__worldTransform.tx = x;\n\t\t\t\t__worldTransform.ty = y;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__worldTransform.tx = y - scrollRect.x;\n\t\t\t\t__worldTransform.ty = y - scrollRect.y;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (updateChildren && __transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = false;\n\t\t\t__worldTransformDirty--;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!transformOnly) {\n\t\t\t\n\t\t\t#if dom\n\t\t\t__worldTransformChanged = !__worldTransform.equals (__worldTransformCache);\n\t\t\t__worldTransformCache = __worldTransform.clone ();\n\t\t\t\n\t\t\tvar worldClip:Rectangle = null;\n\t\t\t#end\n\t\t\t\n\t\t\tif (parent != null) {\n\t\t\t\t\n\t\t\t\t#if !dom\n\t\t\t\t\n\t\t\t\t__worldAlpha = alpha * parent.__worldAlpha;\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tvar worldVisible = (parent.__worldVisible && visible);\n\t\t\t\t__worldVisibleChanged = (__worldVisible != worldVisible);\n\t\t\t\t__worldVisible = worldVisible;\n\t\t\t\t\n\t\t\t\tvar worldAlpha = alpha * parent.__worldAlpha;\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != worldAlpha);\n\t\t\t\t__worldAlpha = worldAlpha;\n\t\t\t\t\n\t\t\t\tif (parent.__worldClip != null) {\n\t\t\t\t\t\n\t\t\t\t\tworldClip = parent.__worldClip.clone ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (scrollRect != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar bounds = scrollRect.clone ();\n\t\t\t\t\tbounds = bounds.transform (__worldTransform);\n\t\t\t\t\t\n\t\t\t\t\tif (worldClip != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbounds.__contract (worldClip.x - scrollRect.x, worldClip.y - scrollRect.y, worldClip.width, worldClip.height);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tworldClip = bounds;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__worldAlpha = alpha;\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\t\n\t\t\t\t__worldVisibleChanged = (__worldVisible != visible);\n\t\t\t\t__worldVisible = visible;\n\t\t\t\t\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != alpha);\n\t\t\t\t\n\t\t\t\tif (scrollRect != null) {\n\t\t\t\t\t\n\t\t\t\t\tworldClip = scrollRect.clone ().transform (__worldTransform);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if dom\n\t\t\t__worldClipChanged = ((worldClip == null && __worldClip != null) || (worldClip != null && !worldClip.equals (__worldClip)));\n\t\t\t__worldClip = worldClip;\n\t\t\t#end\n\t\t\t\n\t\t\tif (updateChildren && __renderDirty) {\n\t\t\t\t\n\t\t\t\t__renderDirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\t__renderable = (visible && scaleX != 0 && scaleY != 0 && !__isMask);\n\t\tif (!__renderable && !__isMask) return;\n\t\t__worldAlpha = alpha;\n\t\t\n\t\tif (__transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = false;\n\t\t\t__worldTransformDirty--;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_alpha ():Float {\n\t\t\n\t\treturn __alpha;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_alpha (value:Float):Float {\n\t\t\n\t\tif (value != __alpha) __setRenderDirty ();\n\t\treturn __alpha = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_filters ():Array<BitmapFilter> {\n\t\t\n\t\tif (__filters == null) {\n\t\t\t\n\t\t\treturn new Array ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __filters.copy ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_filters (value:Array<BitmapFilter>):Array<BitmapFilter> {\n\t\t\n\t\t// set\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_height ():Float {\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\treturn bounds.height * scaleY;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_height (value:Float):Float {\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\tif (value != bounds.height) {\n\t\t\t\n\t\t\tscaleY = value / bounds.height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tscaleY = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_mask ():DisplayObject {\n\t\t\n\t\treturn __mask;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_mask (value:DisplayObject):DisplayObject {\n\t\t\n\t\tif (value != __mask) __setRenderDirty ();\n\t\tif (__mask != null) __mask.__isMask = false;\n\t\tif (value != null) value.__isMask = true;\n\t\treturn __mask = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_mouseX ():Float {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn globalToLocal (new Point (stage.__mouseX, 0)).x;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_mouseY ():Float {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn globalToLocal (new Point (0, stage.__mouseY)).y;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_name ():String {\n\t\t\n\t\treturn __name;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_name (value:String):String {\n\t\t\n\t\treturn __name = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_root ():DisplayObject {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn Lib.current;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_rotation ():Float {\n\t\t\n\t\treturn __rotation;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_rotation (value:Float):Float {\n\t\t\n\t\tif (value != __rotation) __setTransformDirty ();\n\t\treturn __rotation = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_scaleX ():Float {\n\t\t\n\t\treturn __scaleX;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_scaleX (value:Float):Float {\n\t\t\n\t\tif (value != __scaleX) __setTransformDirty ();\n\t\treturn __scaleX = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_scaleY ():Float {\n\t\t\n\t\treturn __scaleY;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_scaleY (value:Float):Float {\n\t\t\n\t\tif (__scaleY != value) __setTransformDirty ();\n\t\treturn __scaleY = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_scrollRect ():Rectangle {\n\t\t\n\t\treturn __scrollRect;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_scrollRect (value:Rectangle):Rectangle {\n\t\t\n\t\tif (value != __scrollRect) {\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t#if dom __setRenderDirty (); #end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __scrollRect = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_transform ():Transform {\n\t\t\n\t\tif (__transform == null) {\n\t\t\t\n\t\t\t__transform = new Transform (this);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __transform;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_transform (value:Transform):Transform {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tthrow new TypeError (\"Parameter transform must be non-null.\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__transform == null) {\n\t\t\t\n\t\t\t__transform = new Transform (this);\n\t\t\t\n\t\t}\n\t\t\n\t\t__setTransformDirty ();\n\t\t__transform.matrix = value.matrix.clone ();\n\t\t__transform.colorTransform = new ColorTransform (value.colorTransform.redMultiplier, value.colorTransform.greenMultiplier, value.colorTransform.blueMultiplier, value.colorTransform.alphaMultiplier, value.colorTransform.redOffset, value.colorTransform.greenOffset, value.colorTransform.blueOffset, value.colorTransform.alphaOffset);\n\t\t\n\t\treturn __transform;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_visible ():Bool {\n\t\t\n\t\treturn __visible;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_visible (value:Bool):Bool {\n\t\t\n\t\tif (value != __visible) __setRenderDirty ();\n\t\treturn __visible = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_width ():Float {\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\treturn bounds.width * scaleX;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_width (value:Float):Float {\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\tif (value != bounds.width) {\n\t\t\t\n\t\t\tscaleX = value / bounds.width;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tscaleX = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_x ():Float {\n\t\t\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_x (value:Float):Float {\n\t\t\n\t\tif (value != __x) __setTransformDirty ();\n\t\treturn __x = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_y ():Float {\n\t\t\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_y (value:Float):Float {\n\t\t\n\t\tif (value != __y) __setTransformDirty ();\n\t\treturn __y = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef DisplayObject = openfl._v2.display.DisplayObject;\n#end\n#else\ntypedef DisplayObject = flash.display.DisplayObject;\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl.geom.Rectangle;\n\n\n/**\n * The InteractiveObject class is the abstract base class for all display\n * objects with which the user can interact, using the mouse, keyboard, or\n * other user input device.\n *\n * <p>You cannot instantiate the InteractiveObject class directly. A call to\n * the <code>new InteractiveObject()</code> constructor throws an\n * <code>ArgumentError</code> exception.</p>\n *\n * <p>The InteractiveObject class itself does not include any APIs for\n * rendering content onscreen. To create a custom subclass of the\n * InteractiveObject class, extend one of the subclasses that do have APIs for\n * rendering content onscreen, such as the Sprite, SimpleButton, TextField, or\n * MovieClip classes.</p>\n * \n * @event clear                  Dispatched when the user selects 'Clear'(or\n *                               'Delete') from the text context menu. This\n *                               event is dispatched to the object that\n *                               currently has focus. If the object that\n *                               currently has focus is a TextField, the\n *                               default behavior of this event is to cause\n *                               any currently selected text in the text field\n *                               to be deleted.\n * @event click                  Dispatched when a user presses and releases\n *                               the main button of the user's pointing device\n *                               over the same InteractiveObject. For a click\n *                               event to occur, it must always follow this\n *                               series of events in the order of occurrence:\n *                               mouseDown event, then mouseUp. The target\n *                               object must be identical for both of these\n *                               events; otherwise the <code>click</code>\n *                               event does not occur. Any number of other\n *                               mouse events can occur at any time between\n *                               the <code>mouseDown</code> or\n *                               <code>mouseUp</code> events; the\n *                               <code>click</code> event still occurs.\n * @event contextMenu            Dispatched when a user gesture triggers the\n *                               context menu associated with this interactive\n *                               object in an AIR application.\n * @event copy                   Dispatched when the user activates the\n *                               platform-specific accelerator key combination\n *                               for a copy operation or selects 'Copy' from\n *                               the text context menu. This event is\n *                               dispatched to the object that currently has\n *                               focus. If the object that currently has focus\n *                               is a TextField, the default behavior of this\n *                               event is to cause any currently selected text\n *                               in the text field to be copied to the\n *                               clipboard.\n * @event cut                    Dispatched when the user activates the\n *                               platform-specific accelerator key combination\n *                               for a cut operation or selects 'Cut' from the\n *                               text context menu. This event is dispatched\n *                               to the object that currently has focus. If\n *                               the object that currently has focus is a\n *                               TextField, the default behavior of this event\n *                               is to cause any currently selected text in\n *                               the text field to be cut to the clipboard.\n * @event doubleClick            Dispatched when a user presses and releases\n *                               the main button of a pointing device twice in\n *                               rapid succession over the same\n *                               InteractiveObject when that object's\n *                               <code>doubleClickEnabled</code> flag is set\n *                               to <code>true</code>. For a\n *                               <code>doubleClick</code> event to occur, it\n *                               must immediately follow the following series\n *                               of events: <code>mouseDown</code>,\n *                               <code>mouseUp</code>, <code>click</code>,\n *                               <code>mouseDown</code>, <code>mouseUp</code>.\n *                               All of these events must share the same\n *                               target as the <code>doubleClick</code> event.\n *                               The second click, represented by the second\n *                               <code>mouseDown</code> and\n *                               <code>mouseUp</code> events, must occur\n *                               within a specific period of time after the\n *                               <code>click</code> event. The allowable\n *                               length of this period varies by operating\n *                               system and can often be configured by the\n *                               user. If the target is a selectable text\n *                               field, the word under the pointer is selected\n *                               as the default behavior. If the target\n *                               InteractiveObject does not have its\n *                               <code>doubleClickEnabled</code> flag set to\n *                               <code>true</code> it receives two\n *                               <code>click</code> events.\n *\n *                               <p>The <code>doubleClickEnabled</code>\n *                               property defaults to <code>false</code>. </p>\n *\n *                               <p>The double-click text selection behavior\n *                               of a TextField object is not related to the\n *                               <code>doubleClick</code> event. Use\n *                               <code>TextField.doubleClickEnabled</code> to\n *                               control TextField selections.</p>\n * @event focusIn                Dispatched <i>after</i> a display object\n *                               gains focus. This situation happens when a\n *                               user highlights the object with a pointing\n *                               device or keyboard navigation. The recipient\n *                               of such focus is called the target object of\n *                               this event, while the corresponding\n *                               InteractiveObject instance that lost focus\n *                               because of this change is called the related\n *                               object. A reference to the related object is\n *                               stored in the receiving object's\n *                               <code>relatedObject</code> property. The\n *                               <code>shiftKey</code> property is not used.\n *                               This event follows the dispatch of the\n *                               previous object's <code>focusOut</code>\n *                               event.\n * @event focusOut               Dispatched <i>after</i> a display object\n *                               loses focus. This happens when a user\n *                               highlights a different object with a pointing\n *                               device or keyboard navigation. The object\n *                               that loses focus is called the target object\n *                               of this event, while the corresponding\n *                               InteractiveObject instance that receives\n *                               focus is called the related object. A\n *                               reference to the related object is stored in\n *                               the target object's\n *                               <code>relatedObject</code> property. The\n *                               <code>shiftKey</code> property is not used.\n *                               This event precedes the dispatch of the\n *                               <code>focusIn</code> event by the related\n *                               object.\n * @event gesturePan             Dispatched when the user moves a point of\n *                               contact over the InteractiveObject instance\n *                               on a touch-enabled device(such as moving a\n *                               finger from left to right over a display\n *                               object on a mobile phone or tablet with a\n *                               touch screen). Some devices might also\n *                               interpret this contact as a\n *                               <code>mouseOver</code> event and as a\n *                               <code>touchOver</code> event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>mouseOver</code> event or a\n *                               <code>touchOver</code> event or a\n *                               <code>gesturePan</code> event, or all if the\n *                               current environment supports it. Choose how\n *                               you want to handle the user interaction. Use\n *                               the openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>gesturePan</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event gesturePressAndTap     Dispatched when the user creates a point of\n *                               contact with an InteractiveObject instance,\n *                               then taps on a touch-enabled device(such as\n *                               placing several fingers over a display object\n *                               to open a menu and then taps one finger to\n *                               select a menu item on a mobile phone or\n *                               tablet with a touch screen). Some devices\n *                               might also interpret this contact as a\n *                               combination of several mouse events, as well.\n *\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, and then provides\n *                               a secondary tap, the InteractiveObject\n *                               instance can dispatch a\n *                               <code>mouseOver</code> event and a\n *                               <code>click</code> event(among others) as\n *                               well as the <code>gesturePressAndTap</code>\n *                               event, or all if the current environment\n *                               supports it. Choose how you want to handle\n *                               the user interaction. Use the\n *                               openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>gesturePressAndTap</code> event, you\n *                               can design your event handler to respond to\n *                               the specific needs of a touch-enabled\n *                               environment and provide users with a richer\n *                               touch-enabled experience. You can also handle\n *                               both events, separately, to provide a\n *                               different response for a touch event than a\n *                               mouse event.</p>\n *\n *                               <p>When handling the properties of the event\n *                               object, note that the <code>localX</code> and\n *                               <code>localY</code> properties are set to the\n *                               primary point of contact(the \"push\"). The\n *                               <code>offsetX</code> and <code>offsetY</code>\n *                               properties are the distance to the secondary\n *                               point of contact(the \"tap\").</p>\n * @event gestureRotate          Dispatched when the user performs a rotation\n *                               gesture at a point of contact with an\n *                               InteractiveObject instance(such as touching\n *                               two fingers and rotating them over a display\n *                               object on a mobile phone or tablet with a\n *                               touch screen). Two-finger rotation is a\n *                               common rotation gesture, but each device and\n *                               operating system can have its own\n *                               requirements to indicate rotation. Some\n *                               devices might also interpret this contact as\n *                               a combination of several mouse events, as\n *                               well.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>mouseOver</code> event and a\n *                               <code>click</code> event(among others), in\n *                               addition to the <code>gestureRotate</code>\n *                               event, or all if the current environment\n *                               supports it. Choose how you want to handle\n *                               the user interaction. Use the\n *                               openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>gestureRotate</code> event, you can\n *                               design your event handler to respond to the\n *                               specific needs of a touch-enabled environment\n *                               and provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p>When handling the properties of the event\n *                               object, note that the <code>localX</code> and\n *                               <code>localY</code> properties are set to the\n *                               primary point of contact. The\n *                               <code>offsetX</code> and <code>offsetY</code>\n *                               properties are the distance to the point of\n *                               contact where the rotation gesture is\n *                               complete.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event gestureSwipe           Dispatched when the user performs a swipe\n *                               gesture at a point of contact with an\n *                               InteractiveObject instance(such as touching\n *                               three fingers to a screen and then moving\n *                               them in parallel over a display object on a\n *                               mobile phone or tablet with a touch screen).\n *                               Moving several fingers in parallel is a\n *                               common swipe gesture, but each device and\n *                               operating system can have its own\n *                               requirements for a swipe. Some devices might\n *                               also interpret this contact as a combination\n *                               of several mouse events, as well.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, and then moves the\n *                               fingers together, the InteractiveObject\n *                               instance can dispatch a <code>rollOver</code>\n *                               event and a <code>rollOut</code> event(among\n *                               others), in addition to the\n *                               <code>gestureSwipe</code> event, or all if\n *                               the current environment supports it. Choose\n *                               how you want to handle the user interaction.\n *                               If you choose to handle the\n *                               <code>rollOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>gestureSwipe</code> event, you can\n *                               design your event handler to respond to the\n *                               specific needs of a touch-enabled environment\n *                               and provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p>When handling the properties of the event\n *                               object, note that the <code>localX</code> and\n *                               <code>localY</code> properties are set to the\n *                               primary point of contact. The\n *                               <code>offsetX</code> and <code>offsetY</code>\n *                               properties are the distance to the point of\n *                               contact where the swipe gesture is\n *                               complete.</p>\n *\n *                               <p><b>Note:</b> While some devices using the\n *                               Mac OS operating system can interpret a\n *                               four-finger swipe, this API only supports a\n *                               three-finger swipe.</p>\n * @event gestureTwoFingerTap    Dispatched when the user presses two points\n *                               of contact over the same InteractiveObject\n *                               instance on a touch-enabled device(such as\n *                               presses and releases two fingers over a\n *                               display object on a mobile phone or tablet\n *                               with a touch screen). Some devices might also\n *                               interpret this contact as a\n *                               <code>doubleClick</code> event.\n *\n *                               <p>Specifically, if a user taps two fingers\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>doubleClick</code> event or a\n *                               <code>gestureTwoFingerTap</code> event, or\n *                               both if the current environment supports it.\n *                               Choose how you want to handle the user\n *                               interaction. Use the openfl.ui.Multitouch\n *                               class to manage touch event handling(enable\n *                               touch gesture event handling, simple touch\n *                               point event handling, or disable touch events\n *                               so only mouse events are dispatched). If you\n *                               choose to handle the <code>doubleClick</code>\n *                               event, then the same event handler will run\n *                               on a touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>gestureTwoFingerTap</code> event, you\n *                               can design your event handler to respond to\n *                               the specific needs of a touch-enabled\n *                               environment and provide users with a richer\n *                               touch-enabled experience. You can also handle\n *                               both events, separately, to provide a\n *                               different response for a touch event than a\n *                               mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event gestureZoom            Dispatched when the user performs a zoom\n *                               gesture at a point of contact with an\n *                               InteractiveObject instance(such as touching\n *                               two fingers to a screen and then quickly\n *                               spreading the fingers apart over a display\n *                               object on a mobile phone or tablet with a\n *                               touch screen). Moving fingers apart is a\n *                               common zoom gesture, but each device and\n *                               operating system can have its own\n *                               requirements to indicate zoom. Some devices\n *                               might also interpret this contact as a\n *                               combination of several mouse events, as well.\n *\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, and then moves the\n *                               fingers apart, the InteractiveObject instance\n *                               can dispatch a <code>mouseOver</code> event\n *                               and a <code>click</code> event(among\n *                               others), in addition to the\n *                               <code>gestureZoom</code> event, or all if the\n *                               current environment supports it. Choose how\n *                               you want to handle the user interaction. Use\n *                               the openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>gestureZoom</code> event, you can\n *                               design your event handler to respond to the\n *                               specific needs of a touch-enabled environment\n *                               and provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p>When handling the properties of the event\n *                               object, note that the <code>localX</code> and\n *                               <code>localY</code> properties are set to the\n *                               primary point of contact. The\n *                               <code>offsetX</code> and <code>offsetY</code>\n *                               properties are the distance to the point of\n *                               contact where the zoom gesture is\n *                               complete.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event imeStartComposition    This event is dispatched to any client app\n *                               that supports inline input with an IME\n * @event keyDown                Dispatched when the user presses a key.\n *                               Mappings between keys and specific characters\n *                               vary by device and operating system. This\n *                               event type is generated after such a mapping\n *                               occurs but before the processing of an input\n *                               method editor(IME). IMEs are used to enter\n *                               characters, such as Chinese ideographs, that\n *                               the standard QWERTY keyboard is ill-equipped\n *                               to produce. This event occurs before the\n *                               <code>keyUp</code> event.\n *\n *                               <p>In AIR, canceling this event prevents the\n *                               character from being entered into a text\n *                               field.</p>\n * @event keyFocusChange         Dispatched when the user attempts to change\n *                               focus by using keyboard navigation. The\n *                               default behavior of this event is to change\n *                               the focus and dispatch the corresponding\n *                               <code>focusIn</code> and\n *                               <code>focusOut</code> events.\n *\n *                               <p>This event is dispatched to the object\n *                               that currently has focus. The related object\n *                               for this event is the InteractiveObject\n *                               instance that receives focus if you do not\n *                               prevent the default behavior. You can prevent\n *                               the change in focus by calling the\n *                               <code>preventDefault()</code> method in an\n *                               event listener that is properly registered\n *                               with the target object. Focus changes and\n *                               <code>focusIn</code> and\n *                               <code>focusOut</code> events are dispatched\n *                               by default.</p>\n * @event keyUp                  Dispatched when the user releases a key.\n *                               Mappings between keys and specific characters\n *                               vary by device and operating system. This\n *                               event type is generated after such a mapping\n *                               occurs but before the processing of an input\n *                               method editor(IME). IMEs are used to enter\n *                               characters, such as Chinese ideographs, that\n *                               the standard QWERTY keyboard is ill-equipped\n *                               to produce. This event occurs after a\n *                               <code>keyDown</code> event and has the\n *                               following characteristics:\n * @event middleClick            Dispatched when a user presses and releases\n *                               the middle button of the user's pointing\n *                               device over the same InteractiveObject. For a\n *                               <code>middleClick</code> event to occur, it\n *                               must always follow this series of events in\n *                               the order of occurrence:\n *                               <code>middleMouseDown</code> event, then\n *                               <code>middleMouseUp</code>. The target object\n *                               must be identical for both of these events;\n *                               otherwise the <code>middleClick</code> event\n *                               does not occur. Any number of other mouse\n *                               events can occur at any time between the\n *                               <code>middleMouseDown</code> or\n *                               <code>middleMouseUp</code> events; the\n *                               <code>middleClick</code> event still occurs.\n * @event middleMouseDown        Dispatched when a user presses the middle\n *                               pointing device button over an\n *                               InteractiveObject instance.\n * @event middleMouseUp          Dispatched when a user releases the pointing\n *                               device button over an InteractiveObject\n *                               instance.\n * @event mouseDown              Dispatched when a user presses the pointing\n *                               device button over an InteractiveObject\n *                               instance. If the target is a SimpleButton\n *                               instance, the SimpleButton instance displays\n *                               the <code>downState</code> display object as\n *                               the default behavior. If the target is a\n *                               selectable text field, the text field begins\n *                               selection as the default behavior.\n * @event mouseFocusChange       Dispatched when the user attempts to change\n *                               focus by using a pointer device. The default\n *                               behavior of this event is to change the focus\n *                               and dispatch the corresponding\n *                               <code>focusIn</code> and\n *                               <code>focusOut</code> events.\n *\n *                               <p>This event is dispatched to the object\n *                               that currently has focus. The related object\n *                               for this event is the InteractiveObject\n *                               instance that receives focus if you do not\n *                               prevent the default behavior. You can prevent\n *                               the change in focus by calling\n *                               <code>preventDefault()</code> in an event\n *                               listener that is properly registered with the\n *                               target object. The <code>shiftKey</code>\n *                               property is not used. Focus changes and\n *                               <code>focusIn</code> and\n *                               <code>focusOut</code> events are dispatched\n *                               by default.</p>\n * @event mouseMove              Dispatched when a user moves the pointing\n *                               device while it is over an InteractiveObject.\n *                               If the target is a text field that the user\n *                               is selecting, the selection is updated as the\n *                               default behavior.\n * @event mouseOut               Dispatched when the user moves a pointing\n *                               device away from an InteractiveObject\n *                               instance. The event target is the object\n *                               previously under the pointing device. The\n *                               <code>relatedObject</code> is the object the\n *                               pointing device has moved to. If the target\n *                               is a SimpleButton instance, the button\n *                               displays the <code>upState</code> display\n *                               object as the default behavior.\n *\n *                               <p>The <code>mouseOut</code> event is\n *                               dispatched each time the mouse leaves the\n *                               area of any child object of the display\n *                               object container, even if the mouse remains\n *                               over another child object of the display\n *                               object container. This is different behavior\n *                               than the purpose of the <code>rollOut</code>\n *                               event, which is to simplify the coding of\n *                               rollover behaviors for display object\n *                               containers with children. When the mouse\n *                               leaves the area of a display object or the\n *                               area of any of its children to go to an\n *                               object that is not one of its children, the\n *                               display object dispatches the\n *                               <code>rollOut</code> event.The\n *                               <code>rollOut</code> events are dispatched\n *                               consecutively up the parent chain of the\n *                               object, starting with the object and ending\n *                               with the highest parent that is neither the\n *                               root nor an ancestor of the\n *                               <code>relatedObject</code>.</p>\n * @event mouseOver              Dispatched when the user moves a pointing\n *                               device over an InteractiveObject instance.\n *                               The <code>relatedObject</code> is the object\n *                               that was previously under the pointing\n *                               device. If the target is a SimpleButton\n *                               instance, the object displays the\n *                               <code>overState</code> or\n *                               <code>upState</code> display object,\n *                               depending on whether the mouse button is\n *                               down, as the default behavior.\n *\n *                               <p>The <code>mouseOver</code> event is\n *                               dispatched each time the mouse enters the\n *                               area of any child object of the display\n *                               object container, even if the mouse was\n *                               already over another child object of the\n *                               display object container. This is different\n *                               behavior than the purpose of the\n *                               <code>rollOver</code> event, which is to\n *                               simplify the coding of rollout behaviors for\n *                               display object containers with children. When\n *                               the mouse enters the area of a display object\n *                               or the area of any of its children from an\n *                               object that is not one of its children, the\n *                               display object dispatches the\n *                               <code>rollOver</code> event. The\n *                               <code>rollOver</code> events are dispatched\n *                               consecutively down the parent chain of the\n *                               object, starting with the highest parent that\n *                               is neither the root nor an ancestor of the\n *                               <code>relatedObject</code> and ending with\n *                               the object.</p>\n * @event mouseUp                Dispatched when a user releases the pointing\n *                               device button over an InteractiveObject\n *                               instance. If the target is a SimpleButton\n *                               instance, the object displays the\n *                               <code>upState</code> display object. If the\n *                               target is a selectable text field, the text\n *                               field ends selection as the default behavior.\n * @event mouseWheel             Dispatched when a mouse wheel is spun over an\n *                               InteractiveObject instance. If the target is\n *                               a text field, the text scrolls as the default\n *                               behavior. Only available on Microsoft Windows\n *                               operating systems.\n * @event nativeDragComplete     Dispatched by the drag initiator\n *                               InteractiveObject when the user releases the\n *                               drag gesture.\n *\n *                               <p>The event's dropAction property indicates\n *                               the action set by the drag target object; a\n *                               value of \"none\"\n *                              (<code>DragActions.NONE</code>) indicates\n *                               that the drop was canceled or was not\n *                               accepted.</p>\n *\n *                               <p>The <code>nativeDragComplete</code> event\n *                               handler is a convenient place to update the\n *                               state of the initiating display object, for\n *                               example, by removing an item from a list(on\n *                               a drag action of \"move\"), or by changing the\n *                               visual properties.</p>\n * @event nativeDragDrop         Dispatched by the target InteractiveObject\n *                               when a dragged object is dropped on it and\n *                               the drop has been accepted with a call to\n *                               DragManager.acceptDragDrop().\n *\n *                               <p>Access the dropped data using the event\n *                               object <code>clipboard</code> property.</p>\n *\n *                               <p>The handler for this event should set the\n *                               <code>DragManager.dropAction</code> property\n *                               to provide feedback to the initiator object\n *                               about which drag action was taken. If no\n *                               value is set, the DragManager will select a\n *                               default value from the list of allowed\n *                               actions.</p>\n * @event nativeDragEnter        Dispatched by an InteractiveObject when a\n *                               drag gesture enters its boundary.\n *\n *                               <p>Handle either the\n *                               <code>nativeDragEnter</code> or\n *                               <code>nativeDragOver</code> events to allow\n *                               the display object to become the drop\n *                               target.</p>\n *\n *                               <p>To determine whether the dispatching\n *                               display object can accept the drop, check the\n *                               suitability of the data in\n *                               <code>clipboard</code> property of the event\n *                               object, and the allowed drag actions in the\n *                               <code>allowedActions</code> property.</p>\n * @event nativeDragExit         Dispatched by an InteractiveObject when a\n *                               drag gesture leaves its boundary.\n * @event nativeDragOver         Dispatched by an InteractiveObject\n *                               continually while a drag gesture remains\n *                               within its boundary.\n *\n *                               <p><code>nativeDragOver</code> events are\n *                               dispatched whenever the mouse is moved. On\n *                               Windows and Mac, they are also dispatched on\n *                               a short timer interval even when the mouse\n *                               has not moved.</p>\n *\n *                               <p>Handle either the\n *                               <code>nativeDragOver</code> or\n *                               <code>nativeDragEnter</code> events to allow\n *                               the display object to become the drop\n *                               target.</p>\n *\n *                               <p>To determine whether the dispatching\n *                               display object can accept the drop, check the\n *                               suitability of the data in\n *                               <code>clipboard</code> property of the event\n *                               object, and the allowed drag actions in the\n *                               <code>allowedActions</code> property.</p>\n * @event nativeDragStart        Dispatched at the beginning of a drag\n *                               operation by the InteractiveObject that is\n *                               specified as the drag initiator in the\n *                               DragManager.doDrag() call.\n * @event nativeDragUpdate       Dispatched during a drag operation by the\n *                               InteractiveObject that is specified as the\n *                               drag initiator in the DragManager.doDrag()\n *                               call.\n *\n *                               <p><code>nativeDragUpdate</code> events are\n *                               not dispatched on Linux.</p>\n * @event paste                  Dispatched when the user activates the\n *                               platform-specific accelerator key combination\n *                               for a paste operation or selects 'Paste' from\n *                               the text context menu. This event is\n *                               dispatched to the object that currently has\n *                               focus. If the object that currently has focus\n *                               is a TextField, the default behavior of this\n *                               event is to cause the contents of the\n *                               clipboard to be pasted into the text field at\n *                               the current insertion point replacing any\n *                               currently selected text in the text field.\n * @event rightClick             Dispatched when a user presses and releases\n *                               the right button of the user's pointing\n *                               device over the same InteractiveObject. For a\n *                               <code>rightClick</code> event to occur, it\n *                               must always follow this series of events in\n *                               the order of occurrence:\n *                               <code>rightMouseDown</code> event, then\n *                               <code>rightMouseUp</code>. The target object\n *                               must be identical for both of these events;\n *                               otherwise the <code>rightClick</code> event\n *                               does not occur. Any number of other mouse\n *                               events can occur at any time between the\n *                               <code>rightMouseDown</code> or\n *                               <code>rightMouseUp</code> events; the\n *                               <code>rightClick</code> event still occurs.\n * @event rightMouseDown         Dispatched when a user presses the pointing\n *                               device button over an InteractiveObject\n *                               instance.\n * @event rightMouseUp           Dispatched when a user releases the pointing\n *                               device button over an InteractiveObject\n *                               instance.\n * @event rollOut                Dispatched when the user moves a pointing\n *                               device away from an InteractiveObject\n *                               instance. The event target is the object\n *                               previously under the pointing device or a\n *                               parent of that object. The\n *                               <code>relatedObject</code> is the object that\n *                               the pointing device has moved to. The\n *                               <code>rollOut</code> events are dispatched\n *                               consecutively up the parent chain of the\n *                               object, starting with the object and ending\n *                               with the highest parent that is neither the\n *                               root nor an ancestor of the\n *                               <code>relatedObject</code>.\n *\n *                               <p>The purpose of the <code>rollOut</code>\n *                               event is to simplify the coding of rollover\n *                               behaviors for display object containers with\n *                               children. When the mouse leaves the area of a\n *                               display object or the area of any of its\n *                               children to go to an object that is not one\n *                               of its children, the display object\n *                               dispatches the <code>rollOut</code> event.\n *                               This is different behavior than that of the\n *                               <code>mouseOut</code> event, which is\n *                               dispatched each time the mouse leaves the\n *                               area of any child object of the display\n *                               object container, even if the mouse remains\n *                               over another child object of the display\n *                               object container.</p>\n * @event rollOver               Dispatched when the user moves a pointing\n *                               device over an InteractiveObject instance.\n *                               The event target is the object under the\n *                               pointing device or a parent of that object.\n *                               The <code>relatedObject</code> is the object\n *                               that was previously under the pointing\n *                               device. The <code>rollOver</code> events are\n *                               dispatched consecutively down the parent\n *                               chain of the object, starting with the\n *                               highest parent that is neither the root nor\n *                               an ancestor of the <code>relatedObject</code>\n *                               and ending with the object.\n *\n *                               <p>The purpose of the <code>rollOver</code>\n *                               event is to simplify the coding of rollout\n *                               behaviors for display object containers with\n *                               children. When the mouse enters the area of a\n *                               display object or the area of any of its\n *                               children from an object that is not one of\n *                               its children, the display object dispatches\n *                               the <code>rollOver</code> event. This is\n *                               different behavior than that of the\n *                               <code>mouseOver</code> event, which is\n *                               dispatched each time the mouse enters the\n *                               area of any child object of the display\n *                               object container, even if the mouse was\n *                               already over another child object of the\n *                               display object container. </p>\n * @event selectAll              Dispatched when the user activates the\n *                               platform-specific accelerator key combination\n *                               for a select all operation or selects 'Select\n *                               All' from the text context menu. This event\n *                               is dispatched to the object that currently\n *                               has focus. If the object that currently has\n *                               focus is a TextField, the default behavior of\n *                               this event is to cause all the contents of\n *                               the text field to be selected.\n * @event softKeyboardActivate   Dispatched immediately after the soft\n *                               keyboard is raised.\n * @event softKeyboardActivating Dispatched immediately before the soft\n *                               keyboard is raised.\n * @event softKeyboardDeactivate Dispatched immediately after the soft\n *                               keyboard is lowered.\n * @event tabChildrenChange      Dispatched when the value of the object's\n *                               <code>tabChildren</code> flag changes.\n * @event tabEnabledChange       Dispatched when the object's\n *                               <code>tabEnabled</code> flag changes.\n * @event tabIndexChange         Dispatched when the value of the object's\n *                               <code>tabIndex</code> property changes.\n * @event textInput              Dispatched when a user enters one or more\n *                               characters of text. Various text input\n *                               methods can generate this event, including\n *                               standard keyboards, input method editors\n *                              (IMEs), voice or speech recognition systems,\n *                               and even the act of pasting plain text with\n *                               no formatting or style information.\n * @event touchBegin             Dispatched when the user first contacts a\n *                               touch-enabled device(such as touches a\n *                               finger to a mobile phone or tablet with a\n *                               touch screen). Some devices might also\n *                               interpret this contact as a\n *                               <code>mouseDown</code> event.\n *\n *                               <p>Specifically, if a user touches a finger\n *                               to a touch screen, the InteractiveObject\n *                               instance can dispatch a\n *                               <code>mouseDown</code> event or a\n *                               <code>touchBegin</code> event, or both if the\n *                               current environment supports it. Choose how\n *                               you want to handle the user interaction. Use\n *                               the openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseDown</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>touchBegin</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchEnd               Dispatched when the user removes contact with\n *                               a touch-enabled device(such as lifts a\n *                               finger off a mobile phone or tablet with a\n *                               touch screen). Some devices might also\n *                               interpret this contact as a\n *                               <code>mouseUp</code> event.\n *\n *                               <p>Specifically, if a user lifts a finger\n *                               from a touch screen, the InteractiveObject\n *                               instance can dispatch a <code>mouseUp</code>\n *                               event or a <code>touchEnd</code> event, or\n *                               both if the current environment supports it.\n *                               Choose how you want to handle the user\n *                               interaction. Use the openfl.ui.Multitouch\n *                               class to manage touch event handling(enable\n *                               touch gesture event handling, simple touch\n *                               point event handling, or disable touch events\n *                               so only mouse events are dispatched). If you\n *                               choose to handle the <code>mouseUp</code>\n *                               event, then the same event handler will run\n *                               on a touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>touchEnd</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchMove              Dispatched when the user moves the point of\n *                               contact with a touch-enabled device(such as\n *                               drags a finger across a mobile phone or\n *                               tablet with a touch screen). Some devices\n *                               might also interpret this contact as a\n *                               <code>mouseMove</code> event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               across a touch screen, the InteractiveObject\n *                               instance can dispatch a\n *                               <code>mouseMove</code> event or a\n *                               <code>touchMove</code> event, or both if the\n *                               current environment supports it. Choose how\n *                               you want to handle the user interaction. Use\n *                               the openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseMove</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>touchMove</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchOut               Dispatched when the user moves the point of\n *                               contact away from InteractiveObject instance\n *                               on a touch-enabled device(such as drags a\n *                               finger from one display object to another on\n *                               a mobile phone or tablet with a touch\n *                               screen). Some devices might also interpret\n *                               this contact as a <code>mouseOut</code>\n *                               event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               across a touch screen, the InteractiveObject\n *                               instance can dispatch a <code>mouseOut</code>\n *                               event or a <code>touchOut</code> event, or\n *                               both if the current environment supports it.\n *                               Choose how you want to handle the user\n *                               interaction. Use the openfl.ui.Multitouch\n *                               class to manage touch event handling(enable\n *                               touch gesture event handling, simple touch\n *                               point event handling, or disable touch events\n *                               so only mouse events are dispatched). If you\n *                               choose to handle the <code>mouseOut</code>\n *                               event, then the same event handler will run\n *                               on a touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>touchOut</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchOver              Dispatched when the user moves the point of\n *                               contact over an InteractiveObject instance on\n *                               a touch-enabled device(such as drags a\n *                               finger from a point outside a display object\n *                               to a point over a display object on a mobile\n *                               phone or tablet with a touch screen). Some\n *                               devices might also interpret this contact as\n *                               a <code>mouseOver</code> event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>mouseOver</code> event or a\n *                               <code>touchOver</code> event, or both if the\n *                               current environment supports it. Choose how\n *                               you want to handle the user interaction. Use\n *                               the openfl.ui.Multitouch class to manage touch\n *                               event handling(enable touch gesture event\n *                               handling, simple touch point event handling,\n *                               or disable touch events so only mouse events\n *                               are dispatched). If you choose to handle the\n *                               <code>mouseOver</code> event, then the same\n *                               event handler will run on a touch-enabled\n *                               device and a mouse enabled device. However,\n *                               if you choose to handle the\n *                               <code>touchOver</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchRollOut           Dispatched when the user moves the point of\n *                               contact away from an InteractiveObject\n *                               instance on a touch-enabled device(such as\n *                               drags a finger from over a display object to\n *                               a point outside the display object on a\n *                               mobile phone or tablet with a touch screen).\n *                               Some devices might also interpret this\n *                               contact as a <code>rollOut</code> event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>rollOut</code> event or a\n *                               <code>touchRollOut</code> event, or both if\n *                               the current environment supports it. Choose\n *                               how you want to handle the user interaction.\n *                               Use the openfl.ui.Multitouch class to manage\n *                               touch event handling(enable touch gesture\n *                               event handling, simple touch point event\n *                               handling, or disable touch events so only\n *                               mouse events are dispatched). If you choose\n *                               to handle the <code>rollOut</code> event,\n *                               then the same event handler will run on a\n *                               touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>touchRollOut</code> event, you can\n *                               design your event handler to respond to the\n *                               specific needs of a touch-enabled environment\n *                               and provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchRollOver          Dispatched when the user moves the point of\n *                               contact over an InteractiveObject instance on\n *                               a touch-enabled device(such as drags a\n *                               finger from a point outside a display object\n *                               to a point over a display object on a mobile\n *                               phone or tablet with a touch screen). Some\n *                               devices might also interpret this contact as\n *                               a <code>rollOver</code> event.\n *\n *                               <p>Specifically, if a user moves a finger\n *                               over an InteractiveObject, the\n *                               InteractiveObject instance can dispatch a\n *                               <code>rollOver</code> event or a\n *                               <code>touchRollOver</code> event, or both if\n *                               the current environment supports it. Choose\n *                               how you want to handle the user interaction.\n *                               Use the openfl.ui.Multitouch class to manage\n *                               touch event handling(enable touch gesture\n *                               event handling, simple touch point event\n *                               handling, or disable touch events so only\n *                               mouse events are dispatched). If you choose\n *                               to handle the <code>rollOver</code> event,\n *                               then the same event handler will run on a\n *                               touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>touchRollOver</code> event, you can\n *                               design your event handler to respond to the\n *                               specific needs of a touch-enabled environment\n *                               and provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n * @event touchTap               Dispatched when the user lifts the point of\n *                               contact over the same InteractiveObject\n *                               instance on which the contact was initiated\n *                               on a touch-enabled device(such as presses\n *                               and releases a finger from a single point\n *                               over a display object on a mobile phone or\n *                               tablet with a touch screen). Some devices\n *                               might also interpret this contact as a\n *                               <code>click</code> event.\n *\n *                               <p>Specifically, if a user taps a finger over\n *                               an InteractiveObject, the InteractiveObject\n *                               instance can dispatch a <code>click</code>\n *                               event or a <code>touchTap</code> event, or\n *                               both if the current environment supports it.\n *                               Choose how you want to handle the user\n *                               interaction. Use the openfl.ui.Multitouch\n *                               class to manage touch event handling(enable\n *                               touch gesture event handling, simple touch\n *                               point event handling, or disable touch events\n *                               so only mouse events are dispatched). If you\n *                               choose to handle the <code>click</code>\n *                               event, then the same event handler will run\n *                               on a touch-enabled device and a mouse enabled\n *                               device. However, if you choose to handle the\n *                               <code>touchTap</code> event, you can design\n *                               your event handler to respond to the specific\n *                               needs of a touch-enabled environment and\n *                               provide users with a richer touch-enabled\n *                               experience. You can also handle both events,\n *                               separately, to provide a different response\n *                               for a touch event than a mouse event.</p>\n *\n *                               <p><b>Note:</b> See the Multitouch class for\n *                               environment compatibility information.</p>\n */\nclass InteractiveObject extends DisplayObject {\n\t\n\t\n\t/**\n\t * Specifies whether the object receives <code>doubleClick</code> events. The\n\t * default value is <code>false</code>, which means that by default an\n\t * InteractiveObject instance does not receive <code>doubleClick</code>\n\t * events. If the <code>doubleClickEnabled</code> property is set to\n\t * <code>true</code>, the instance receives <code>doubleClick</code> events\n\t * within its bounds. The <code>mouseEnabled</code> property of the\n\t * InteractiveObject instance must also be set to <code>true</code> for the\n\t * object to receive <code>doubleClick</code> events.\n\t *\n\t * <p>No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to add an event listener for the\n\t * <code>doubleClick</code> event.</p>\n\t */\n\tpublic var doubleClickEnabled:Bool;\n\t\n\tpublic var focusRect:Dynamic;\n\t\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>openfl.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic var mouseEnabled:Bool;\n\t\n\t/**\n\t * Specifies whether a virtual keyboard(an on-screen, software keyboard)\n\t * should display when this InteractiveObject instance receives focus.\n\t *\n\t * <p>By default, the value is <code>false</code> and focusing an\n\t * InteractiveObject instance does not raise a soft keyboard. If the\n\t * <code>needsSoftKeyboard</code> property is set to <code>true</code>, the\n\t * runtime raises a soft keyboard when the InteractiveObject instance is\n\t * ready to accept user input. An InteractiveObject instance is ready to\n\t * accept user input after a programmatic call to set the Stage\n\t * <code>focus</code> property or a user interaction, such as a \"tap.\" If the\n\t * client system has a hardware keyboard available or does not support\n\t * virtual keyboards, then the soft keyboard is not raised.</p>\n\t *\n\t * <p>The InteractiveObject instance dispatches\n\t * <code>softKeyboardActivating</code>, <code>softKeyboardActivate</code>,\n\t * and <code>softKeyboardDeactivate</code> events when the soft keyboard\n\t * raises and lowers.</p>\n\t *\n\t * <p><b>Note:</b> This property is not supported in AIR applications on\n\t * iOS.</p>\n\t */\n\tpublic var needsSoftKeyboard:Bool;\n\t\n\tpublic var softKeyboardInputAreaOfInterest:Rectangle;\n\tpublic var tabEnabled:Bool;\n\tpublic var tabIndex:Int;\n\t\n\t\n\t/**\n\t * Calling the <code>new InteractiveObject()</code> constructor throws an\n\t * <code>ArgumentError</code> exception. You can, however, call constructors\n\t * for the following subclasses of InteractiveObject:\n\t * <ul>\n\t *   <li><code>new SimpleButton()</code></li>\n\t *   <li><code>new TextField()</code></li>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tdoubleClickEnabled = false;\n\t\tmouseEnabled = true;\n\t\tneedsSoftKeyboard = false;\n\t\ttabEnabled = true;\n\t\ttabIndex = -1;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Raises a virtual keyboard.\n\t *\n\t * <p>Calling this method focuses the InteractiveObject instance and raises\n\t * the soft keyboard, if necessary. The <code>needsSoftKeyboard</code> must\n\t * also be <code>true</code>. A keyboard is not raised if a hardware keyboard\n\t * is available, or if the client system does not support virtual\n\t * keyboards.</p>\n\t *\n\t * <p><b>Note:</b> This method is not supported in AIR applications on\n\t * iOS.</p>\n\t * \n\t * @return A value of <code>true</code> means that the soft keyboard request\n\t *         was granted; <code>false</code> means that the soft keyboard was\n\t *         not raised.\n\t */\n\tpublic function requestSoftKeyboard ():Bool {\n\t\t\n\t\topenfl.Lib.notImplemented (\"InteractiveObject.requestSoftKeyboard\");\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __getInteractive (stack:Array<DisplayObject>):Void {\n\t\t\n\t\tstack.push (this);\n\t\t\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tparent.__getInteractive (stack);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef InteractiveObject = openfl._v2.display.InteractiveObject;\n#end\n#else\ntypedef InteractiveObject = flash.display.InteractiveObject;\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Stage;\nimport openfl.errors.RangeError;\nimport openfl.events.Event;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\n\n@:access(openfl.events.Event)\n\n\nclass DisplayObjectContainer extends InteractiveObject {\n\t\n\t\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic var mouseChildren:Bool;\n\t\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic var numChildren (get, null):Int;\n\t\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t * \n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic var tabChildren:Bool;\n\t\n\t@:noCompletion private var __children:Array<DisplayObject>;\n\t@:noCompletion private var __removedChildren:Array<DisplayObject>;\n\t\n\t\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tmouseChildren = true;\n\t\t\n\t\t__children = new Array<DisplayObject> ();\n\t\t__removedChildren = new Array<DisplayObject> ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t * \n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic function addChild (child:DisplayObject):DisplayObject {\n\t\t\n\t\tif (child != null) {\n\t\t\t\n\t\t\tif (child.parent != null) {\n\t\t\t\t\n\t\t\t\tchild.parent.removeChild (child);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__children.push (child);\n\t\t\tchild.parent = this;\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tchild.__setStageReference (stage);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchild.__setTransformDirty ();\n\t\t\tchild.__setRenderDirty ();\n\t\t\t\n\t\t\tvar event = new Event (Event.ADDED, true);\n\t\t\tevent.target = child;\n\t\t\tchild.dispatchEvent (event);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn child;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t * \n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic function addChildAt (child:DisplayObject, index:Int):DisplayObject {\n\t\t\n\t\tif (index > __children.length || index < 0) {\n\t\t\t\n\t\t\tthrow \"Invalid index position \" + index;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (child.parent == this) {\n\t\t\t\n\t\t\t__children.remove (child);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (child.parent != null) {\n\t\t\t\t\n\t\t\t\tchild.parent.removeChild (child);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchild.parent = this;\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tchild.__setStageReference (stage);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchild.__setTransformDirty ();\n\t\t\tchild.__setRenderDirty ();\n\t\t\t\n\t\t\tvar event = new Event (Event.ADDED, true);\n\t\t\tevent.target = child;\n\t\t\tchild.dispatchEvent (event);\n\t\t\t\n\t\t}\n\t\t\n\t\t__children.insert (index, child);\n\t\t\n\t\treturn child;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Indicates whether the security restrictions would cause any display\n\t * objects to be omitted from the list returned by calling the\n\t * <code>DisplayObjectContainer.getObjectsUnderPoint()</code> method with the\n\t * specified <code>point</code> point. By default, content from one domain\n\t * cannot access objects from another domain unless they are permitted to do\n\t * so with a call to the <code>Security.allowDomain()</code> method. For more\n\t * information, related to security, see the Flash Player Developer Center\n\t * Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t * \n\t * @param point The point under which to look.\n\t * @return <code>true</code> if the point contains child display objects with\n\t *         security restrictions.\n\t */\n\tpublic function areInaccessibleObjectsUnderPoint (point:Point):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t * \n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic function contains (child:DisplayObject):Bool {\n\t\t\n\t\t#if (haxe_ver > 3.100)\n\t\t\n\t\treturn __children.indexOf (child) > -1;\n\t\t\n\t\t#else\n\t\t\n\t\tfor (i in __children) {\n\t\t\t\n\t\t\tif (i == child) return true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t * \n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which you do not have access. You can avoid this\n\t *                       situation by having the child movie call\n\t *                       <code>Security.allowDomain()</code>.\n\t */\n\tpublic function getChildAt (index:Int):DisplayObject {\n\t\t\n\t\tif (index >= 0 && index < __children.length) {\n\t\t\t\n\t\t\treturn __children[index];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t * \n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which you do not have access. You can avoid this\n\t *                       situation by having the child movie call the\n\t *                       <code>Security.allowDomain()</code> method.\n\t */\n\tpublic function getChildByName (name:String):DisplayObject {\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.name == name) return child;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t * \n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic function getChildIndex (child:DisplayObject):Int {\n\t\t\n\t\tfor (i in 0...__children.length) {\n\t\t\t\n\t\t\tif (__children[i] == child) return i;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t * \n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic function getObjectsUnderPoint (point:Point):Array<DisplayObject> {\n\t\t\n\t\tpoint = localToGlobal (point);\n\t\tvar stack = new Array<DisplayObject> ();\n\t\t__hitTest (point.x, point.y, false, stack, false);\n\t\tstack.reverse ();\n\t\treturn stack;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t * \n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic function removeChild (child:DisplayObject):DisplayObject {\n\t\t\n\t\tif (child != null && child.parent == this) {\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tchild.__setStageReference (null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchild.parent = null;\n\t\t\t__children.remove (child);\n\t\t\t__removedChildren.push (child);\n\t\t\tchild.__setTransformDirty ();\n\t\t\tchild.__setRenderDirty ();\n\t\t\tchild.dispatchEvent (new Event (Event.REMOVED, true));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn child;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t * \n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic function removeChildAt (index:Int):DisplayObject {\n\t\t\n\t\tif (index >= 0 && index < __children.length) {\n\t\t\t\n\t\t\treturn removeChild (__children[index]);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function removeChildren (beginIndex:Int = 0, endIndex:Int = 0x7FFFFFFF):Void {\n\t\t\n\t\tif (endIndex == 0x7FFFFFFF) { \n\t\t\t\n\t\t\tendIndex = __children.length - 1;\n\t\t\t\n\t\t\tif (endIndex < 0) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (beginIndex > __children.length - 1) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else if (endIndex < beginIndex || beginIndex < 0 || endIndex > __children.length) {\n\t\t\t\n\t\t\tthrow new RangeError (\"The supplied index is out of bounds.\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar numRemovals = endIndex - beginIndex;\n\t\twhile (numRemovals >= 0) {\n\t\t\t\n\t\t\tremoveChildAt (beginIndex);\n\t\t\tnumRemovals--;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t * \n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic function setChildIndex (child:DisplayObject, index:Int) {\n\t\t\n\t\tif (index >= 0 && index <= __children.length && child.parent == this) {\n\t\t\t\n\t\t\t__children.remove (child);\n\t\t\t__children.insert (index, child);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Swaps the z-order(front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t * \n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic function swapChildren (child1:DisplayObject, child2:DisplayObject):Void {\n\t\t\n\t\tif (child1.parent == this && child2.parent == this) {\n\t\t\t\n\t\t\t#if (haxe_ver > 3.100)\n\t\t\t\n\t\t\tvar index1 = __children.indexOf (child1);\n\t\t\tvar index2 = __children.indexOf (child2);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar index1 = -1;\n\t\t\tvar index2 = -1;\n\t\t\t\n\t\t\tfor (i in 0...__children.length) {\n\t\t\t\t\n\t\t\t\tif (__children[i] == child1) {\n\t\t\t\t\t\n\t\t\t\t\tindex1 = i;\n\t\t\t\t\t\n\t\t\t\t} else if (__children[i] == child2) {\n\t\t\t\t\t\n\t\t\t\t\tindex2 = i;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\t__children[index1] = child2;\n\t\t\t__children[index2] = child1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t * \n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic function swapChildrenAt (child1:Int, child2:Int):Void {\n\t\t\n\t\tvar swap:DisplayObject = __children[child1];\n\t\t__children[child1] = __children[child2];\n\t\t__children[child2] = swap;\n\t\tswap = null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __broadcast (event:Event, notifyChilden:Bool):Bool {\n\t\t\n\t\tif (event.target == null) {\n\t\t\t\n\t\t\tevent.target = this;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (notifyChilden) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__broadcast (event, true);\n\t\t\t\t\n\t\t\t\tif (event.__isCancelled) {\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn super.__broadcast (event, notifyChilden);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__children.length == 0) return;\n\t\t\n\t\tvar matrixCache = null;\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\tmatrixCache = __worldTransform;\n\t\t\t__worldTransform = matrix;\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (!child.__renderable) continue;\n\t\t\tchild.__getBounds (rect, null);\n\t\t\t\n\t\t}\n\t\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__worldTransform = matrixCache;\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool):Bool {\n\t\t\n\t\tif (!visible || (interactiveOnly && !mouseEnabled)) return false;\n\t\t\n\t\tvar i = __children.length;\n\t\t\n\t\tif (interactiveOnly) {\n\t\t\t\n\t\t\tif (stack == null || !mouseChildren) {\n\t\t\t\t\n\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, null, true)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (stack != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstack.push (this);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (stack != null) {\n\t\t\t\t\n\t\t\t\tvar length = stack.length;\n\t\t\t\t\n\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, stack, interactiveOnly)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstack.insert (length, this);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\twhile (--i >= 0) {\n\t\t\t\t\n\t\t\t\t__children[i].__hitTest (x, y, shapeFlag, stack, false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0) return;\n\t\t\n\t\tif (scrollRect != null) {\n\t\t\t\n\t\t\t//renderSession.maskManager.pushRect (scrollRect, __worldTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__mask != null) {\n\t\t\t\n\t\t\trenderSession.maskManager.pushMask (__mask);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__renderCanvas (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren = [];\n\t\t\n\t\tif (__mask != null) {\n\t\t\t\n\t\t\trenderSession.maskManager.popMask ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (scrollRect != null) {\n\t\t\t\n\t\t\t//renderSession.maskManager.popMask ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t//if (!__renderable) return;\n\t\t\n\t\tif (__mask != null) {\n\t\t\t\n\t\t\trenderSession.maskManager.pushMask (__mask);\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: scrollRect\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__renderDOM (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__renderDOM (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren = [];\n\t\t\n\t\tif (__mask != null) {\n\t\t\t\n\t\t\trenderSession.maskManager.popMask ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0) return;\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__renderGL (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren = [];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __renderMask (renderSession:RenderSession):Void {\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\trenderSession.context.rect (0, 0, bounds.width, bounds.height);\n\t\t\n\t\t/*for (child in __children) {\n\t\t\t\n\t\t\tchild.__renderMask (renderSession);\n\t\t\t\n\t\t}*/\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __setStageReference (stage:Stage):Void {\n\t\t\n\t\tif (this.stage != stage) {\n\t\t\t\n\t\t\tif (this.stage != null) {\n\t\t\t\t\n\t\t\t\tdispatchEvent (new Event (Event.REMOVED_FROM_STAGE, false, false));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.stage = stage;\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tdispatchEvent (new Event (Event.ADDED_TO_STAGE, false, false));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__children != null) {\n\t\t\t\t\n\t\t\t\tfor (child in __children) {\n\t\t\t\t\t\n\t\t\t\t\tchild.__setStageReference (stage);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __update (transformOnly:Bool, updateChildren:Bool):Void {\n\t\t\n\t\tsuper.__update (transformOnly, updateChildren);\n\t\t\n\t\tif (!__renderable #if dom && !__worldAlphaChanged && !__worldClipChanged && !__worldTransformChanged && !__worldVisibleChanged #end) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t//if (!__renderable) return;\n\t\t\n\t\tif (updateChildren) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__update (transformOnly, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public override function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\tsuper.__updateChildren (transformOnly);\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__update (transformOnly, true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_numChildren ():Int {\n\t\t\n\t\treturn __children.length;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef DisplayObjectContainer = openfl._v2.display.DisplayObjectContainer;\n#end\n#else\ntypedef DisplayObjectContainer = flash.display.DisplayObjectContainer;\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.canvas.CanvasShape;\nimport openfl._internal.renderer.dom.DOMShape;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n\n/**\n * The Sprite class is a basic display list building block: a display list\n * node that can display graphics and can also contain children.\n *\n * <p>A Sprite object is similar to a movie clip, but does not have a\n * timeline. Sprite is an appropriate base class for objects that do not\n * require timelines. For example, Sprite would be a logical base class for\n * user interface(UI) components that typically do not use the timeline.</p>\n *\n * <p>The Sprite class is new in ActionScript 3.0. It provides an alternative\n * to the functionality of the MovieClip class, which retains all the\n * functionality of previous ActionScript releases to provide backward\n * compatibility.</p>\n */\n\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Stage)\n\n\nclass Sprite extends DisplayObjectContainer {\n\t\n\t\n\t/**\n\t * Specifies the button mode of this sprite. If <code>true</code>, this\n\t * sprite behaves as a button, which means that it triggers the display of\n\t * the hand cursor when the pointer passes over the sprite and can receive a\n\t * <code>click</code> event if the enter or space keys are pressed when the\n\t * sprite has focus. You can suppress the display of the hand cursor by\n\t * setting the <code>useHandCursor</code> property to <code>false</code>, in\n\t * which case the pointer is displayed.\n\t *\n\t * <p>Although it is better to use the SimpleButton class to create buttons,\n\t * you can use the <code>buttonMode</code> property to give a sprite some\n\t * button-like functionality. To include a sprite in the tab order, set the\n\t * <code>tabEnabled</code> property(inherited from the InteractiveObject\n\t * class and <code>false</code> by default) to <code>true</code>.\n\t * Additionally, consider whether you want the children of your sprite to be\n\t * user input enabled. Most buttons do not enable user input interactivity\n\t * for their child objects because it confuses the event flow. To disable\n\t * user input interactivity for all child objects, you must set the\n\t * <code>mouseChildren</code> property(inherited from the\n\t * DisplayObjectContainer class) to <code>false</code>.</p>\n\t *\n\t * <p>If you use the <code>buttonMode</code> property with the MovieClip\n\t * class(which is a subclass of the Sprite class), your button might have\n\t * some added functionality. If you include frames labeled _up, _over, and\n\t * _down, Flash Player provides automatic state changes(functionality\n\t * similar to that provided in previous versions of ActionScript for movie\n\t * clips used as buttons). These automatic state changes are not available\n\t * for sprites, which have no timeline, and thus no frames to label. </p>\n\t */\n\tpublic var buttonMode:Bool;\n\t\n\t/**\n\t * Specifies the Graphics object that belongs to this sprite where vector\n\t * drawing commands can occur.\n\t */\n\tpublic var graphics (get, null):Graphics;\n\t\n\t/**\n\t * A Boolean value that indicates whether the pointing hand(hand cursor)\n\t * appears when the pointer rolls over a sprite in which the\n\t * <code>buttonMode</code> property is set to <code>true</code>. The default\n\t * value of the <code>useHandCursor</code> property is <code>true</code>. If\n\t * <code>useHandCursor</code> is set to <code>true</code>, the pointing hand\n\t * used for buttons appears when the pointer rolls over a button sprite. If\n\t * <code>useHandCursor</code> is <code>false</code>, the arrow pointer is\n\t * used instead.\n\t *\n\t * <p>You can change the <code>useHandCursor</code> property at any time; the\n\t * modified sprite immediately takes on the new cursor appearance. </p>\n\t *\n\t * <p><b>Note:</b> In Flex or Flash Builder, if your sprite has child\n\t * sprites, you might want to set the <code>mouseChildren</code> property to\n\t * <code>false</code>. For example, if you want a hand cursor to appear over\n\t * a Flex <mx:Label> control, set the <code>useHandCursor</code> and\n\t * <code>buttonMode</code> properties to <code>true</code>, and the\n\t * <code>mouseChildren</code> property to <code>false</code>.</p>\n\t */\n\tpublic var useHandCursor:Bool;\n\t\n\t\n\t/**\n\t * Creates a new Sprite instance. After you create the Sprite instance, call\n\t * the <code>DisplayObjectContainer.addChild()</code> or\n\t * <code>DisplayObjectContainer.addChildAt()</code> method to add the Sprite\n\t * to a parent DisplayObjectContainer.\n\t */\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tbuttonMode = false;\n\t\tuseHandCursor = true;\n\t\tloaderInfo = LoaderInfo.create (null);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Lets the user drag the specified sprite. The sprite remains draggable\n\t * until explicitly stopped through a call to the\n\t * <code>Sprite.stopDrag()</code> method, or until another sprite is made\n\t * draggable. Only one sprite is draggable at a time.\n\t *\n\t * <p>Three-dimensional display objects follow the pointer and\n\t * <code>Sprite.startDrag()</code> moves the object within the\n\t * three-dimensional plane defined by the display object. Or, if the display\n\t * object is a two-dimensional object and the child of a three-dimensional\n\t * object, the two-dimensional object moves within the three dimensional\n\t * plane defined by the three-dimensional parent object.</p>\n\t * \n\t * @param lockCenter Specifies whether the draggable sprite is locked to the\n\t *                   center of the pointer position(<code>true</code>), or\n\t *                   locked to the point where the user first clicked the\n\t *                   sprite(<code>false</code>).\n\t * @param bounds     Value relative to the coordinates of the Sprite's parent\n\t *                   that specify a constraint rectangle for the Sprite.\n\t */\n\tpublic function startDrag (lockCenter:Bool = false, bounds:Rectangle = null):Void {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\tstage.__startDrag (this, lockCenter, bounds);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Ends the <code>startDrag()</code> method. A sprite that was made draggable\n\t * with the <code>startDrag()</code> method remains draggable until a\n\t * <code>stopDrag()</code> method is added, or until another sprite becomes\n\t * draggable. Only one sprite is draggable at a time.\n\t * \n\t */\n\tpublic function stopDrag ():Void {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\tstage.__stopDrag (this);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tsuper.__getBounds (rect, matrix);\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\t__graphics.__getBounds (rect, matrix != null ? matrix : __worldTransform);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool):Bool {\n\t\t\n\t\tif (!visible || (interactiveOnly && !mouseEnabled)) return false;\n\t\t\n\t\tvar length = 0;\n\t\t\n\t\tif (stack != null) {\n\t\t\t\n\t\t\tlength = stack.length;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (super.__hitTest (x, y, shapeFlag, stack, interactiveOnly)) {\n\t\t\t\n\t\t\treturn interactiveOnly;\n\t\t\t\n\t\t} else if (__graphics != null && __graphics.__hitTest (x, y, shapeFlag, __getTransform ())) {\n\t\t\t\n\t\t\tif (stack != null) {\n\t\t\t\t\n\t\t\t\tstack.push (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\tCanvasShape.render (this, renderSession);\n\t\t\n\t\tsuper.__renderCanvas (renderSession);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\tDOMShape.render (this, renderSession);\n\t\t\n\t\tsuper.__renderDOM (renderSession);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0) return;\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tGraphicsRenderer.render (this, renderSession);\n\t\t\t//__graphics.__render (renderSession);\n\t\t\t\n\t\t\t/*if (__graphics.__canvas != null) {\n\t\t\t\t\n\t\t\t\t\n\t\t\t}*/\n\t\t\t\n\t\t}\n\t\t\n\t\tsuper.__renderGL (renderSession);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function __renderMask (renderSession:RenderSession):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tCanvasGraphics.renderMask (__graphics, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.__renderMask (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_graphics ():Graphics {\n\t\t\n\t\tif (__graphics == null) {\n\t\t\t\n\t\t\t__graphics = new Graphics ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __graphics;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Sprite = openfl._v2.display.Sprite;\n#end\n#else\ntypedef Sprite = flash.display.Sprite;\n#end","package com.imagination.robotlegs.basic;\n\nimport openfl.display.Sprite;\nimport robotlegs.bender.bundles.mvcs.MVCSBundle;\n\nimport com.imagination.robotlegs.basic.commands.CommandConfig;\nimport com.imagination.robotlegs.basic.model.ModelConfig;\nimport com.imagination.robotlegs.basic.services.ServiceConfig;\nimport com.imagination.robotlegs.basic.view.ViewConfig;\n\nimport robotlegs.bender.extensions.contextView.ContextView;\nimport robotlegs.bender.framework.api.IContext;\nimport robotlegs.bender.framework.impl.Context;\n\n/**\n * ...\n * @author P.J.Shand\n */\n\nclass Main extends Sprite \n{\n\tprivate var _context:IContext;\n\t\n\tpublic function new() \n\t{\n\t\tsuper();\n\t\t\n\t\t_context = new Context()\n\t\t\t.install(MVCSBundle)\n\t\t\t.configure([CommandConfig, ModelConfig, ServiceConfig, ViewConfig])\n\t\t\t.configure(new ContextView(this));\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : Dynamic;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = untyped __new__(\"RegExp\",r,opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","package;\n\n\nimport openfl.display.Sprite;\nimport openfl.events.Event;\n\n\nclass NMEPreloader extends Sprite {\n\t\n\t\n\tprivate var outline:Sprite;\n\tprivate var progress:Sprite;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tvar backgroundColor = getBackgroundColor ();\n\t\tvar r = backgroundColor >> 16 & 0xFF;\n\t\tvar g = backgroundColor >> 8  & 0xFF;\n\t\tvar b = backgroundColor & 0xFF;\n\t\tvar perceivedLuminosity = (0.299 * r + 0.587 * g + 0.114 * b);\n\t\tvar color = 0x000000;\n\t\t\n\t\tif (perceivedLuminosity < 70) {\n\t\t\t\n\t\t\tcolor = 0xFFFFFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x = 30;\n\t\tvar height = 7;\n\t\tvar y = getHeight () / 2 - height / 2;\n\t\tvar width = getWidth () - x * 2;\n\t\t\n\t\tvar padding = 2;\n\t\t\n\t\toutline = new Sprite ();\n\t\toutline.graphics.beginFill (color, 0.07);\n\t\toutline.graphics.drawRect (0, 0, width, height);\n\t\toutline.x = x;\n\t\toutline.y = y;\n\t\taddChild (outline);\n\t\t\n\t\tprogress = new Sprite ();\n\t\tprogress.graphics.beginFill (color, 0.35);\n\t\tprogress.graphics.drawRect (0, 0, width - padding * 2, height - padding * 2);\n\t\tprogress.x = x + padding;\n\t\tprogress.y = y + padding;\n\t\tprogress.scaleX = 0;\n\t\taddChild (progress);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBackgroundColor ():Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getHeight ():Float {\n\t\t\n\t\tvar height = 0;\n\t\t\n\t\tif (height > 0) {\n\t\t\t\n\t\t\treturn height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn flash.Lib.current.stage.stageHeight;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getWidth ():Float {\n\t\t\n\t\tvar width = 0;\n\t\t\n\t\tif (width > 0) {\n\t\t\t\n\t\t\treturn width;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn flash.Lib.current.stage.stageWidth;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onInit () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onLoaded () {\n\t\t\n\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\n\t}\n\t\n\t\n\tpublic function onUpdate (bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tvar percentLoaded = bytesLoaded / bytesTotal;\n\t\t\n\t\tif (percentLoaded > 1) {\n\t\t\t\n\t\t\tpercentLoaded = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\tprogress.scaleX = percentLoaded;\n\t\t\n\t}\n\t\n\t\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic untyped {\n\t\treturn try o[field] catch( e : Dynamic ) null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : Dynamic, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String = \"\";\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic function new() {}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cs\n@:keep\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"encodeURIComponent\"](s);\n\t\t#elseif flash\n\t\t\treturn _global[\"escape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.EscapeUriString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String untyped {\n\t\t#if flash9\n\t\t\treturn __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif flash\n\t\t\treturn _global[\"unescape\"](s);\n\t\t#elseif neko\n\t\t\treturn new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn cs.system.Uri.UnescapeDataString(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash9\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`.\n\n\t\tThis method is faster than String.charCodeAt() on most platforms.\n\t\tHowever, unlike String.charCodeAt(), the result is unspecified if\n\t\t`index` is negative or exceeds `s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int untyped {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn s.cca(index);\n\t\t#elseif flash9\n\t\treturn s.cca(index);\n\t\t#elseif flash\n\t\treturn s[\"cca\"](index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(untyped s[index], Int) : -1;\n\t\t#elseif js\n\t\t\t#if mt\n\t\treturn (untyped s).cca(index);\n\t\t\t#else\n\t\treturn (untyped s).charCodeAt(index);\n\t\t\t#end\n\t\t#else\n\t\treturn s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash9 || cpp)\n\t\treturn c == 0;\n\t\t#elseif flash8\n\t\treturn c <= 0; // fast NaN\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static function getClass<T>( o : T ) : Class<T> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum XmlType {\n}\n\n@:coreApi class Xml {\n\n\tpublic static var Element(default,null) : XmlType;\n\tpublic static var PCData(default,null) : XmlType;\n\tpublic static var CData(default,null) : XmlType;\n\tpublic static var Comment(default,null) : XmlType;\n\tpublic static var DocType(default,null) : XmlType;\n\tpublic static var ProcessingInstruction(default,null) : XmlType;\n\tpublic static var Document(default,null) : XmlType;\n\n\tpublic var nodeType(default,null) : XmlType;\n\tpublic var nodeName(get,set) : String;\n\tpublic var nodeValue(get,set) : String;\n\tpublic var parent(get,null) : Xml;\n\n\tvar _nodeName : String;\n\tvar _nodeValue : String;\n\tvar _attributes : haxe.ds.StringMap<String>;\n\tvar _children : Array<Xml>;\n\tvar _parent : Xml;\n\n\tpublic static function parse( str : String ) : Xml {\n\t\treturn haxe.xml.Parser.parse(str);\n\t}\n\n\tprivate function new() : Void {\n\t}\n\n\tpublic static function createElement( name : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Element;\n\t\tr._children = new Array();\n\t\tr._attributes = new haxe.ds.StringMap();\n\t\tr.set_nodeName( name );\n\t\treturn r;\n\t}\n\n\tpublic static function createPCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.PCData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createCData( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.CData;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createComment( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Comment;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocType( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.DocType;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createProcessingInstruction( data : String ) : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.ProcessingInstruction;\n\t\tr.set_nodeValue( data );\n\t\treturn r;\n\t}\n\n\tpublic static function createDocument() : Xml {\n\t\tvar r = new Xml();\n\t\tr.nodeType = Xml.Document;\n\t\tr._children = new Array();\n\t\treturn r;\n\t}\n\n\tprivate function get_nodeName() : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName;\n\t}\n\n\tprivate function set_nodeName( n : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeName = n;\n\t}\n\n\tprivate function get_nodeValue() : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue;\n\t}\n\n\tprivate function set_nodeValue( v : String ) : String {\n\t\tif( nodeType == Xml.Element || nodeType == Xml.Document )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _nodeValue = v;\n\t}\n\n\tprivate function get_parent() : Xml {\n\t\treturn _parent;\n\t}\n\n\tpublic function get( att : String ) : String {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.get( att );\n\t}\n\n\tpublic function set( att : String, value : String ) : Void {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.set( att, value );\n\t}\n\n\tpublic function remove( att : String ) : Void{\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\t_attributes.remove( att );\n\t}\n\n\tpublic function exists( att : String ) : Bool {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.exists( att );\n\t}\n\n\tpublic function attributes() : Iterator<String> {\n\t\tif( nodeType != Xml.Element )\n\t\t\tthrow \"bad nodeType\";\n\t\treturn _attributes.keys();\n\t}\n\n\tpublic function iterator() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function(){\n\t\t\t\treturn __this__.cur < __this__.x.length;\n\t\t\t},\n\t\t\tnext : function(){\n\t\t\t\treturn __this__.x[__this__.cur++];\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elements() : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tif( __this__.x[k].nodeType == Xml.Element )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk += 1;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk += 1;\n\t\t\t\t\tif( n.nodeType == Xml.Element ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function elementsNamed( name : String ) : Iterator<Xml> {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn untyped {\n\t\t\tcur: 0,\n\t\t\tx: this._children,\n\t\t\thasNext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk++;\n\t\t\t\t}\n\t\t\t\t__this__.cur = k;\n\t\t\t\treturn k < l;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\tvar k = __this__.cur;\n\t\t\t\tvar l = __this__.x.length;\n\t\t\t\twhile( k < l ) {\n\t\t\t\t\tvar n = __this__.x[k];\n\t\t\t\t\tk++;\n\t\t\t\t\tif( n.nodeType == Xml.Element && n._nodeName == name ) {\n\t\t\t\t\t\t__this__.cur = k;\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function firstChild() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\treturn _children[0];\n\t}\n\n\tpublic function firstElement() : Xml {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar cur = 0;\n\t\tvar l = _children.length;\n\t\twhile( cur < l ) {\n\t\t\tvar n = _children[cur];\n\t\t\tif( n.nodeType == Xml.Element )\n\t\t\t\treturn n;\n\t\t\tcur++;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic function addChild( x : Xml ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.push( x );\n\t}\n\n\tpublic function removeChild( x : Xml ) : Bool {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tvar b = _children.remove( x );\n\t\tif( b )\n\t\t\tx._parent = null;\n\t\treturn b;\n\t}\n\n\tpublic function insertChild( x : Xml, pos : Int ) : Void {\n\t\tif( _children == null ) throw \"bad nodetype\";\n\t\tif( x._parent != null ) x._parent._children.remove(x);\n\t\tx._parent = this;\n\t\t_children.insert( pos, x );\n\t}\n\n\tpublic function toString() : String {\n\t\tif( nodeType == Xml.PCData )\n\t\t\treturn StringTools.htmlEscape(_nodeValue);\n\t\tif( nodeType == Xml.CData )\n\t\t\treturn \"<![CDATA[\"+_nodeValue+\"]]>\";\n\t\tif( nodeType == Xml.Comment )\n\t\t\treturn \"<!--\"+_nodeValue+\"-->\";\n\t\tif( nodeType == Xml.DocType )\n\t\t\treturn \"<!DOCTYPE \"+_nodeValue+\">\";\n\t\tif( nodeType == Xml.ProcessingInstruction )\n\t\t\treturn \"<?\"+_nodeValue+\"?>\";\n\t\tvar s = new StringBuf();\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"<\");\n\t\t\ts.add(_nodeName);\n\t\t\tfor( k in _attributes.keys() ){\n\t\t\t\ts.add(\" \");\n\t\t\t\ts.add(k);\n\t\t\t\ts.add(\"=\\\"\");\n\t\t\t\ts.add(_attributes.get(k));\n\t\t\t\ts.add(\"\\\"\");\n\t\t\t}\n\t\t\tif( _children.length == 0 ) {\n\t\t\t\ts.add(\"/>\");\n\t\t\t\treturn s.toString();\n\t\t\t}\n\t\t\ts.add(\">\");\n\t\t}\n\n\t\tfor( x in iterator() )\n\t\t\ts.add(x.toString());\n\n\t\tif( nodeType == Xml.Element ) {\n\t\t\ts.add(\"</\");\n\t\t\ts.add(_nodeName);\n\t\t\ts.add(\">\");\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\tXml.Element = \"element\";\n\t\tXml.PCData = \"pcdata\";\n\t\tXml.CData = \"cdata\";\n\t\tXml.Comment = \"comment\";\n\t\tXml.DocType = \"doctype\";\n\t\tXml.ProcessingInstruction = \"processingInstruction\";\n\t\tXml.Document = \"document\";\n\t}\n\n}\n","package com.imagination.robotlegs.basic.commands;\r\n\r\nimport com.imagination.robotlegs.basic.events.AppEvent;\r\nimport robotlegs.bender.extensions.eventCommandMap.api.IEventCommandMap;\r\nimport robotlegs.bender.framework.api.IConfig;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport com.imagination.robotlegs.basic.commands.example.ExampleCommand;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass CommandConfig implements IConfig \r\n{\r\n\t@inject public var commandMap:IEventCommandMap;\r\n\t@inject public var injector:IInjector;\r\n\t\r\n\tpublic function new() { }\r\n\t\r\n\tpublic function configure():Void\r\n\t{\r\n\t\t//commandMap.map(ExampleSignal).toCommand(ExampleCommand);\r\n\t\tcommandMap.map(AppEvent.SETUP_COMPLETE).toCommand(ExampleCommand);\r\n\t\t\r\n\t\t// Only if not already mapped to a command\r\n\t\t//injector.map(ExampleSignal).asSingleton();\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.bundles.mvcs;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommand;\r\n\r\n/**\r\n * Abstract command implementation\r\n *\r\n * <p>Please note: you do not have to extend this class.\r\n * Any class with an execute method can be used.</p>\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass Command implements ICommand\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function execute():Void\r\n\t{\r\n\t}\r\n}\r\n","package com.imagination.robotlegs.basic.commands.example;\r\n\r\nimport robotlegs.bender.bundles.mvcs.Command;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ExampleCommand extends Command \r\n{\r\n\t//@inject public var model:Model;\r\n\t\r\n\tpublic function new() { }\r\n\t\r\n\toverride public function execute():Void\r\n\t{\r\n\t\t\r\n\t}\r\n}","package openfl.events; #if !flash #if !lime_legacy\n\n\nimport openfl.display.InteractiveObject;\n\n\n/**\n * The Event class is used as the base class for the creation of Event\n * objects, which are passed as parameters to event listeners when an event\n * occurs.\n *\n * <p>The properties of the Event class carry basic information about an\n * event, such as the event's type or whether the event's default behavior can\n * be canceled. For many events, such as the events represented by the Event\n * class constants, this basic information is sufficient. Other events,\n * however, may require more detailed information. Events associated with a\n * mouse click, for example, need to include additional information about the\n * location of the click event and whether any keys were pressed during the\n * click event. You can pass such additional information to event listeners by\n * extending the Event class, which is what the MouseEvent class does.\n * ActionScript 3.0 API defines several Event subclasses for common events\n * that require additional information. Events associated with each of the\n * Event subclasses are described in the documentation for each class.</p>\n *\n * <p>The methods of the Event class can be used in event listener functions\n * to affect the behavior of the event object. Some events have an associated\n * default behavior. For example, the <code>doubleClick</code> event has an\n * associated default behavior that highlights the word under the mouse\n * pointer at the time of the event. Your event listener can cancel this\n * behavior by calling the <code>preventDefault()</code> method. You can also\n * make the current event listener the last one to process an event by calling\n * the <code>stopPropagation()</code> or\n * <code>stopImmediatePropagation()</code> method.</p>\n *\n * <p>Other sources of information include:</p>\n *\n * <ul>\n *   <li>A useful description about the timing of events, code execution, and\n * rendering at runtime in Ted Patrick's blog entry: <a\n * href=\"http://www.onflex.org/ted/2005/07/flash-player-mental-model-elastic.php\"\n * scope=\"external\">Flash Player Mental Model - The Elastic\n * Racetrack</a>.</li>\n *   <li>A blog entry by Johannes Tacskovics about the timing of frame events,\n * such as ENTER_FRAME, EXIT_FRAME: <a\n * href=\"http://blog.johannest.com/2009/06/15/the-movieclip-life-cycle-revisited-from-event-added-to-event-removed_from_stage/\"\n * scope=\"external\">The MovieClip Lifecycle</a>.</li>\n *   <li>An article by Trevor McCauley about the order of ActionScript\n * operations: <a\n * href=\"http://www.senocular.com/flash/tutorials/orderofoperations/\"\n * scope=\"external\">Order of Operations in ActionScript</a>.</li>\n *   <li>A blog entry by Matt Przybylski on creating custom events: <a\n * href=\"http://evolve.reintroducing.com/2007/10/23/as3/as3-custom-events/\"\n * scope=\"external\">AS3: Custom Events</a>.</li>\n * </ul>\n * \n */\nclass Event {\n\t\n\t\n\t/**\n\t * The <code>ACTIVATE</code> constant defines the value of the\n\t * <code>type</code> property of an <code>activate</code> event object.\n\t *\n\t * <p><b>Note:</b> This event has neither a \"capture phase\" nor a \"bubble\n\t * phase\", which means that event listeners must be added directly to any\n\t * potential targets, whether the target is on the display list or not.</p>\n\t *\n\t * <p>AIR for TV devices never automatically dispatch this event. You can,\n\t * however, dispatch it manually.</p>\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ACTIVATE = \"activate\";\n\t\n\t/**\n\t * The <code>Event.ADDED</code> constant defines the value of the\n\t * <code>type</code> property of an <code>added</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ADDED = \"added\";\n\t\n\t/**\n\t * The <code>Event.ADDED_TO_STAGE</code> constant defines the value of the\n\t * <code>type</code> property of an <code>addedToStage</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ADDED_TO_STAGE = \"addedToStage\";\n\t\n\t/**\n\t * The <code>Event.CANCEL</code> constant defines the value of the\n\t * <code>type</code> property of a <code>cancel</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var CANCEL = \"cancel\";\n\t\n\t/**\n\t * The <code>Event.CHANGE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>change</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var CHANGE = \"change\";\n\t\n\t/**\n\t * The <code>Event.CLOSE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>close</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var CLOSE = \"close\";\n\t\n\t/**\n\t * The <code>Event.COMPLETE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>complete</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var COMPLETE = \"complete\";\n\t\n\t/**\n\t * The <code>Event.CONNECT</code> constant defines the value of the\n\t * <code>type</code> property of a <code>connect</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var CONNECT = \"connect\";\n\tpublic static var CONTEXT3D_CREATE = \"context3DCreate\";\n\t\n\t/**\n\t * The <code>Event.DEACTIVATE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>deactivate</code> event object.\n\t *\n\t * <p><b>Note:</b> This event has neither a \"capture phase\" nor a \"bubble\n\t * phase\", which means that event listeners must be added directly to any\n\t * potential targets, whether the target is on the display list or not.</p>\n\t *\n\t * <p>AIR for TV devices never automatically dispatch this event. You can,\n\t * however, dispatch it manually.</p>\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var DEACTIVATE = \"deactivate\";\n\t\n\t/**\n\t * The <code>Event.ENTER_FRAME</code> constant defines the value of the\n\t * <code>type</code> property of an <code>enterFrame</code> event object.\n\t *\n\t * <p><b>Note:</b> This event has neither a \"capture phase\" nor a \"bubble\n\t * phase\", which means that event listeners must be added directly to any\n\t * potential targets, whether the target is on the display list or not.</p>\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ENTER_FRAME = \"enterFrame\";\n\t\n\t/**\n\t * The <code>Event.ID3</code> constant defines the value of the\n\t * <code>type</code> property of an <code>id3</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ID3 = \"id3\";\n\t\n\t/**\n\t * The <code>Event.INIT</code> constant defines the value of the\n\t * <code>type</code> property of an <code>init</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var INIT = \"init\";\n\t\n\t/**\n\t * The <code>Event.MOUSE_LEAVE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>mouseLeave</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_LEAVE = \"mouseLeave\";\n\t\n\t/**\n\t * The <code>Event.OPEN</code> constant defines the value of the\n\t * <code>type</code> property of an <code>open</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var OPEN = \"open\";\n\t\n\t/**\n\t * The <code>Event.REMOVED</code> constant defines the value of the\n\t * <code>type</code> property of a <code>removed</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var REMOVED = \"removed\";\n\t\n\t/**\n\t * The <code>Event.REMOVED_FROM_STAGE</code> constant defines the value of\n\t * the <code>type</code> property of a <code>removedFromStage</code> event\n\t * object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var REMOVED_FROM_STAGE = \"removedFromStage\";\n\t\n\t/**\n\t * The <code>Event.RENDER</code> constant defines the value of the\n\t * <code>type</code> property of a <code>render</code> event object.\n\t *\n\t * <p><b>Note:</b> This event has neither a \"capture phase\" nor a \"bubble\n\t * phase\", which means that event listeners must be added directly to any\n\t * potential targets, whether the target is on the display list or not.</p>\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var RENDER = \"render\";\n\t\n\t/**\n\t * The <code>Event.RESIZE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>resize</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var RESIZE = \"resize\";\n\t\n\t/**\n\t * The <code>Event.SCROLL</code> constant defines the value of the\n\t * <code>type</code> property of a <code>scroll</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var SCROLL = \"scroll\";\n\t\n\t/**\n\t * The <code>Event.SELECT</code> constant defines the value of the\n\t * <code>type</code> property of a <code>select</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var SELECT = \"select\";\n\t\n\t/**\n\t * The <code>Event.SOUND_COMPLETE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>soundComplete</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var SOUND_COMPLETE = \"soundComplete\";\n\t\n\t/**\n\t * The <code>Event.TAB_CHILDREN_CHANGE</code> constant defines the value of\n\t * the <code>type</code> property of a <code>tabChildrenChange</code> event\n\t * object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var TAB_CHILDREN_CHANGE = \"tabChildrenChange\";\n\t\n\t/**\n\t * The <code>Event.TAB_ENABLED_CHANGE</code> constant defines the value of\n\t * the <code>type</code> property of a <code>tabEnabledChange</code> event\n\t * object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var TAB_ENABLED_CHANGE = \"tabEnabledChange\";\n\t\n\t/**\n\t * The <code>Event.TAB_INDEX_CHANGE</code> constant defines the value of the\n\t * <code>type</code> property of a <code>tabIndexChange</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var TAB_INDEX_CHANGE = \"tabIndexChange\";\n\t\n\t/**\n\t * The <code>Event.UNLOAD</code> constant defines the value of the\n\t * <code>type</code> property of an <code>unload</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var UNLOAD = \"unload\";\n\t\n\t\n\t/**\n\t * Indicates whether an event is a bubbling event. If the event can bubble,\n\t * this value is <code>true</code>; otherwise it is <code>false</code>.\n\t *\n\t * <p>When an event occurs, it moves through the three phases of the event\n\t * flow: the capture phase, which flows from the top of the display list\n\t * hierarchy to the node just before the target node; the target phase, which\n\t * comprises the target node; and the bubbling phase, which flows from the\n\t * node subsequent to the target node back up the display list hierarchy.</p>\n\t *\n\t * <p>Some events, such as the <code>activate</code> and <code>unload</code>\n\t * events, do not have a bubbling phase. The <code>bubbles</code> property\n\t * has a value of <code>false</code> for events that do not have a bubbling\n\t * phase.</p>\n\t */\n\tpublic var bubbles (default, null):Bool;\n\t\n\t/**\n\t * Indicates whether the behavior associated with the event can be prevented.\n\t * If the behavior can be canceled, this value is <code>true</code>;\n\t * otherwise it is <code>false</code>.\n\t */\n\tpublic var cancelable (default, null):Bool;\n\t\n\t/**\n\t * The object that is actively processing the Event object with an event\n\t * listener. For example, if a user clicks an OK button, the current target\n\t * could be the node containing that button or one of its ancestors that has\n\t * registered an event listener for that event.\n\t */\n\tpublic var currentTarget:Dynamic;\n\t\n\t/**\n\t * The current phase in the event flow. This property can contain the\n\t * following numeric values:\n\t * <ul>\n\t *   <li> The capture phase(<code>EventPhase.CAPTURING_PHASE</code>).</li>\n\t *   <li> The target phase(<code>EventPhase.AT_TARGET</code>).</li>\n\t *   <li> The bubbling phase(<code>EventPhase.BUBBLING_PHASE</code>).</li>\n\t * </ul>\n\t */\n\tpublic var eventPhase (default, null):EventPhase;\n\t\n\t/**\n\t * The event target. This property contains the target node. For example, if\n\t * a user clicks an OK button, the target node is the display list node\n\t * containing that button.\n\t */\n\tpublic var target:Dynamic;\n\t\n\t/**\n\t * The type of event. The type is case-sensitive.\n\t */\n\tpublic var type (default, null):String;\n\t\n\t@:noCompletion private var __isCancelled:Bool;\n\t@:noCompletion private var __isCancelledNow:Bool;\n\t\n\t\n\t/**\n\t * Creates an Event object to pass as a parameter to event listeners.\n\t * \n\t * @param type       The type of the event, accessible as\n\t *                   <code>Event.type</code>.\n\t * @param bubbles    Determines whether the Event object participates in the\n\t *                   bubbling stage of the event flow. The default value is\n\t *                   <code>false</code>.\n\t * @param cancelable Determines whether the Event object can be canceled. The\n\t *                   default values is <code>false</code>.\n\t */\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {\n\t\t\n\t\tthis.type = type;\n\t\tthis.bubbles = bubbles;\n\t\tthis.cancelable = cancelable;\n\t\teventPhase = EventPhase.CAPTURING_PHASE;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Duplicates an instance of an Event subclass.\n\t *\n\t * <p>Returns a new Event object that is a copy of the original instance of\n\t * the Event object. You do not normally call <code>clone()</code>; the\n\t * EventDispatcher class calls it automatically when you redispatch an\n\t * event - that is, when you call <code>dispatchEvent(event)</code> from a\n\t * handler that is handling <code>event</code>.</p>\n\t *\n\t * <p>The new Event object includes all the properties of the original.</p>\n\t *\n\t * <p>When creating your own custom Event class, you must override the\n\t * inherited <code>Event.clone()</code> method in order for it to duplicate\n\t * the properties of your custom class. If you do not set all the properties\n\t * that you add in your event subclass, those properties will not have the\n\t * correct values when listeners handle the redispatched event.</p>\n\t *\n\t * <p>In this example, <code>PingEvent</code> is a subclass of\n\t * <code>Event</code> and therefore implements its own version of\n\t * <code>clone()</code>.</p>\n\t * \n\t * @return A new Event object that is identical to the original.\n\t */\n\tpublic function clone ():Event {\n\t\t\n\t\tvar event = new Event (type, bubbles, cancelable);\n\t\tevent.eventPhase = eventPhase;\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Checks whether the <code>preventDefault()</code> method has been called on\n\t * the event. If the <code>preventDefault()</code> method has been called,\n\t * returns <code>true</code>; otherwise, returns <code>false</code>.\n\t * \n\t * @return If <code>preventDefault()</code> has been called, returns\n\t *         <code>true</code>; otherwise, returns <code>false</code>.\n\t */\n\tpublic function isDefaultPrevented ():Bool {\n\t\t\n\t\treturn (__isCancelled || __isCancelledNow);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Prevents processing of any event listeners in the current node and any\n\t * subsequent nodes in the event flow. This method takes effect immediately,\n\t * and it affects event listeners in the current node. In contrast, the\n\t * <code>stopPropagation()</code> method doesn't take effect until all the\n\t * event listeners in the current node finish processing.\n\t *\n\t * <p><b>Note: </b> This method does not cancel the behavior associated with\n\t * this event; see <code>preventDefault()</code> for that functionality.</p>\n\t * \n\t */\n\tpublic function stopImmediatePropagation ():Void {\n\t\t\n\t\t__isCancelled = true;\n\t\t__isCancelledNow = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Prevents processing of any event listeners in nodes subsequent to the\n\t * current node in the event flow. This method does not affect any event\n\t * listeners in the current node(<code>currentTarget</code>). In contrast,\n\t * the <code>stopImmediatePropagation()</code> method prevents processing of\n\t * event listeners in both the current node and subsequent nodes. Additional\n\t * calls to this method have no effect. This method can be called in any\n\t * phase of the event flow.\n\t *\n\t * <p><b>Note: </b> This method does not cancel the behavior associated with\n\t * this event; see <code>preventDefault()</code> for that functionality.</p>\n\t * \n\t */\n\tpublic function stopPropagation ():Void {\n\t\t\n\t\t__isCancelled = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a string containing all the properties of the Event object. The\n\t * string is in the following format:\n\t *\n\t * <p><code>[Event type=<i>value</i> bubbles=<i>value</i>\n\t * cancelable=<i>value</i>]</code></p>\n\t * \n\t * @return A string containing all the properties of the Event object.\n\t */\n\tpublic function toString ():String {\n\t\t\n\t\treturn \"[Event type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Event = openfl._v2.events.Event;\n#end\n#else\ntypedef Event = flash.events.Event;\n#end","package com.imagination.robotlegs.basic.model;\r\n\r\nimport com.imagination.robotlegs.basic.model.example.ExampleModel;\r\nimport robotlegs.bender.framework.api.IConfig;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ModelConfig implements IConfig \r\n{\r\n\t@inject public var injector:IInjector;\r\n\t\r\n\tpublic function new() { }\r\n\t\r\n\tpublic function configure():Void\r\n\t{\r\n\t\tinjector.map(ExampleModel).asSingleton();\r\n\t}\r\n}","package com.imagination.robotlegs.basic.model.example;\r\n\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\n\t\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ExampleModel \r\n{\r\n\tprivate var _value:Int;\r\n\tpublic var change = new EventDispatcher();\r\n\tpublic var value(get, set):Int;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function get_value():Int \r\n\t{\r\n\t\treturn _value;\r\n\t}\r\n\t\r\n\tpublic function set_value(value:Int):Int \r\n\t{\r\n\t\tif (_value == value) return value;\r\n\t\t_value = value;\r\n\t\tchange.dispatchEvent(new Event(Event.CHANGE));\r\n\t\treturn value;\r\n\t}\r\n}","package com.imagination.robotlegs.basic.services;\r\n\r\nimport com.imagination.robotlegs.basic.services.example.ExampleService;\r\nimport robotlegs.bender.framework.api.IConfig;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ServiceConfig implements IConfig \r\n{\r\n\t@inject public var injector:IInjector;\r\n\t\r\n\tpublic function new() { }\r\n\t\r\n\tpublic function configure():Void\r\n\t{\r\n\t\tinjector.map(ExampleService).asSingleton();\r\n\t}\r\n}","package com.imagination.robotlegs.basic.services.example;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ExampleService \r\n{\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n}","package com.imagination.robotlegs.basic.view;\r\n\r\nimport robotlegs.bender.extensions.contextView.ContextView;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;\r\nimport robotlegs.bender.extensions.eventCommandMap.api.IEventCommandMap;\r\nimport robotlegs.bender.framework.api.IConfig;\r\nimport robotlegs.bender.framework.api.IContext;\r\n\r\nimport com.imagination.robotlegs.basic.view.openfl.MainView;\r\nimport com.imagination.robotlegs.basic.view.openfl.MainViewMediator;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass ViewConfig implements IConfig \r\n{\r\n\t@inject public var context:IContext;\r\n\t@inject public var mediatorMap:IMediatorMap;\r\n\t@inject public var contextView:ContextView;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function configure():Void\r\n\t{\r\n\t\tcontext.afterInitializing(init);\r\n\t}\r\n\t\r\n\tprivate function init():Void\r\n\t{\r\n\t\tmapMediators();\r\n\t\tinitView();\r\n\t}\r\n\t\r\n\tprivate function mapMediators():Void \r\n\t{\r\n\t\tmediatorMap.map(MainView).toMediator(MainViewMediator);\r\n\t}\r\n\t\r\n\tprivate function initView():Void \r\n\t{\r\n\t\tcontextView.view.addChild(new MainView());\r\n\t}\r\n}","package com.imagination.robotlegs.basic.view.openfl;\r\n\r\nimport com.imagination.robotlegs.basic.view.openfl.display.SubView;\r\nimport openfl.display.Sprite;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass MainView extends Sprite\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\ttrace(\"MainView\");\r\n\t}\r\n\t\r\n\tpublic function initialize() \r\n\t{\r\n\t\tvar subView:SubView = new SubView();\r\n\t\taddChild(subView);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.bundles.mvcs;\r\n\r\nimport openfl.events.Event;\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.localEventMap.api.IEventMap;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediator;\r\n\r\n/**\r\n * Classic Robotlegs mediator implementation\r\n *\r\n * <p>Override initialize and destroy to hook into the mediator lifecycle.</p>\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass Mediator implements IMediator\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t@inject public var eventMap:IEventMap;\r\n\r\n\t@inject public var eventDispatcher:IEventDispatcher;\r\n\r\n\tprivate var _viewComponent:Dynamic;\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function set_viewComponent(view:Dynamic):Void\r\n\t{\r\n\t\t_viewComponent = view;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function initialize():Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * Runs after the mediator has been destroyed.\r\n\t * Cleans up listeners mapped through the local EventMap.\r\n\t */\r\n\tpublic function postDestroy():Void\r\n\t{\r\n\t\teventMap.unmapListeners();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* private Functions                                                        */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function addViewListener(eventString:String, listener:Dynamic, eventClass:Class<Dynamic> = null):Void\r\n\t{\r\n\t\teventMap.mapListener(cast(_viewComponent, IEventDispatcher), eventString, listener, eventClass);\r\n\t}\r\n\r\n\tprivate function addContextListener(eventString:String, listener:Dynamic, eventClass:Class<Dynamic> = null):Void\r\n\t{\r\n\t\teventMap.mapListener(eventDispatcher, eventString, listener, eventClass);\r\n\t}\r\n\r\n\tprivate function removeViewListener(eventString:String, listener:Dynamic, eventClass:Class<Dynamic> = null):Void\r\n\t{\r\n\t\teventMap.unmapListener(cast(_viewComponent, IEventDispatcher), eventString, listener, eventClass);\r\n\t}\r\n\r\n\tprivate function removeContextListener(eventString:String, listener:Dynamic, eventClass:Class<Dynamic> = null):Void\r\n\t{\r\n\t\teventMap.unmapListener(eventDispatcher, eventString, listener, eventClass);\r\n\t}\r\n\r\n\tprivate function dispatch(event:Event):Void\r\n\t{\r\n\t\tif (eventDispatcher.hasEventListener(event.type))\r\n\t\t\teventDispatcher.dispatchEvent(event);\r\n\t}\r\n}","package com.imagination.robotlegs.basic.view.openfl;\r\n\r\nimport com.imagination.robotlegs.basic.events.AppEvent;\r\nimport com.imagination.robotlegs.basic.services.example.ExampleService;\r\nimport openfl.events.Event;\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.bundles.mvcs.Mediator;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass MainViewMediator extends Mediator\r\n{\r\n\t@inject public var view:MainView;\r\n\t@inject public var exampleService:ExampleService;\r\n\t@inject public var dispatcher:IEventDispatcher;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\toverride public function initialize():Void\r\n\t{\r\n\t\tview.initialize();\r\n\t\ttrace(\"MainViewMediator\");\r\n\t\tdispatcher.dispatchEvent(new Event(AppEvent.INIT));\r\n\t}\r\n}","package com.imagination.robotlegs.basic.view.openfl.display;\r\n\r\nimport openfl.display.Sprite;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\n@:rtti\r\n@:keepSub\r\nclass SubView extends Sprite\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function initialize() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n}","package haxe;\n#if (macro || (!neko && !cpp))\n\n\n// Original haxe.Timer class\n\n/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash9\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif flash\n\t\t\tvar me = this;\n\t\t\tid = untyped _global[\"setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash9\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif flash\n\t\t\t\tuntyped _global[\"clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n\n\n#else\n\n\n#if (lime && !lime_legacy)\nimport lime.system.System;\n#end\n\n\nclass Timer {\n\t\n\t\n\tprivate static var sRunningTimers:Array <Timer> = [];\n\t\n\tprivate var mTime:Float;\n\tprivate var mFireAt:Float;\n\tprivate var mRunning:Bool;\n\t\n\t\n\tpublic function new (time:Float) {\n\t\t\n\t\tmTime = time;\n\t\tsRunningTimers.push (this);\n\t\tmFireAt = getMS () + mTime;\n\t\tmRunning = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function delay (f:Void -> Void, time:Int) {\n\t\t\n\t\tvar t = new Timer (time);\n\t\t\n\t\tt.run = function () {\n\t\t\t\n\t\t\tt.stop ();\n\t\t\tf ();\n\t\t\t\n\t\t};\n\t\t\n\t\treturn t;\n\t\t\n\t}\n\t\n\t\n\tprivate static function getMS ():Float {\n\t\t\n\t\treturn stamp () * 1000.0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function measure<T> (f:Void -> T, ?pos:PosInfos):T {\n\t\t\n\t\tvar t0 = stamp ();\n\t\tvar r = f ();\n\t\tLog.trace ((stamp () - t0) + \"s\", pos);\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tdynamic public function run () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function stamp ():Float {\n\t\t\n\t\t#if lime_legacy\n\t\treturn lime_time_stamp ();\n\t\t#else\n\t\treturn System.getTimer () / 1000;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tif (mRunning) {\n\t\t\t\n\t\t\tmRunning = false;\n\t\t\t\n\t\t\tfor (i in 0...sRunningTimers.length) {\n\t\t\t\t\n\t\t\t\tif (sRunningTimers[i] == this) {\n\t\t\t\t\t\n\t\t\t\t\tsRunningTimers[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t#if lime_legacy\n\t@:noCompletion private function __check (inTime:Float) {\n\t\t\n\t\tif (inTime >= mFireAt) {\n\t\t\t\n\t\t\tmFireAt += mTime;\n\t\t\trun ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public static function __checkTimers () {\n\t\t\n\t\tvar now = getMS ();\n\t\tvar foundNull = false;\n\t\tvar timer;\n\t\t\n\t\tfor (i in 0...sRunningTimers.length) {\n\t\t\t\n\t\t\ttimer = sRunningTimers[i];\n\t\t\t\n\t\t\tif (timer != null) {\n\t\t\t\t\n\t\t\t\ttimer.__check (now);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfoundNull = (foundNull || sRunningTimers[i] == null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (foundNull) {\n\t\t\t\n\t\t\tsRunningTimers = sRunningTimers.filter (function (val) { return val != null; });\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public static function __nextWake (limit:Float):Float {\n\t\t\n\t\tvar now = lime_time_stamp () * 1000.0;\n\t\tvar sleep;\n\t\t\n\t\tfor (timer in sRunningTimers) {\n\t\t\t\n\t\t\tif (timer == null)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\tsleep = timer.mFireAt - now;\n\t\t\t\n\t\t\tif (sleep < limit) {\n\t\t\t\t\n\t\t\t\tlimit = sleep;\n\t\t\t\t\n\t\t\t\tif (limit < 0) {\n\t\t\t\t\t\n\t\t\t\t\treturn 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn limit * 0.001;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if lime_legacy\n\tstatic var lime_time_stamp = flash.Lib.load (\"lime\", \"lime_time_stamp\", 0);\n\t#end\n\t\n\t\n}\n\n\n#end","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tBalancedTree allows key-value mapping with arbitrary keys, as long as they\n\tcan be ordered. By default, `Reflect.compare` is used in the `compare`\n\tmethod, which can be overridden in subclasses.\n\n\tOperations have a logarithmic average and worst-case cost.\n\n\tIteration over keys and values, using `keys` and `iterator` respectively,\n\tare in-order.\n**/\nclass BalancedTree<K,V> {\n\tvar root:TreeNode<K,V>;\n\n\t/**\n\t\tCreates a new BalancedTree, which is initially empty.\n\t**/\n\tpublic function new() { }\n\n\t/**\n\t\tBinds `key` to `value`.\n\n\t\tIf `key` is already bound to a value, that binding disappears.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function set(key:K, value:V) {\n\t\troot = setLoop(key, value, root);\n\t}\n\n\t/**\n\t\tReturns the value `key` is bound to.\n\n\t\tIf `key` is not bound to any value, `null` is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function get(key:K):Null<V> {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return node.value;\n\t\t\tif (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tRemoves the current binding of `key`.\n\n\t\tIf `key` has no binding, `this` BalancedTree is unchanged and false is\n\t\treturned.\n\n\t\tOtherwise the binding of `key` is removed and true is returned.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function remove(key:K) {\n\t\ttry {\n\t\t\troot = removeLoop(key, root);\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e:String) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t\tTells if `key` is bound to a value.\n\n\t\tThis method returns true even if `key` is bound to null.\n\n\t\tIf `key` is null, the result is unspecified.\n\t**/\n\tpublic function exists(key:K) {\n\t\tvar node = root;\n\t\twhile (node != null) {\n\t\t\tvar c = compare(key, node.key);\n\t\t\tif (c == 0) return true;\n\t\t\telse if (c < 0) node = node.left;\n\t\t\telse node = node.right;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tIterates over the bound values of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function iterator():Iterator<V> {\n\t\tvar ret = [];\n\t\titeratorLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\t/**\n\t\tIterates over the keys of `this` BalancedTree.\n\n\t\tThis operation is performed in-order.\n\t**/\n\tpublic function keys():Iterator<K> {\n\t\tvar ret = [];\n\t\tkeysLoop(root, ret);\n\t\treturn ret.iterator();\n\t}\n\n\tfunction setLoop(k:K, v:V, node:TreeNode<K,V>) {\n\t\tif (node == null) return new TreeNode<K,V>(null, k, v, null);\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) new TreeNode<K,V>(node.left, k, v, node.right, node.get_height());\n\t\telse if (c < 0) {\n\t\t\tvar nl = setLoop(k, v, node.left);\n\t\t\tbalance(nl, node.key, node.value, node.right);\n\t\t} else {\n\t\t\tvar nr = setLoop(k, v, node.right);\n\t\t\tbalance(node.left, node.key, node.value, nr);\n\t\t}\n\t}\n\n\tfunction removeLoop(k:K, node:TreeNode<K,V>) {\n\t\tif (node == null) throw \"Not_found\";\n\t\tvar c = compare(k, node.key);\n\t\treturn if (c == 0) merge(node.left, node.right);\n\t\telse if (c < 0) balance(removeLoop(k, node.left), node.key, node.value, node.right);\n\t\telse balance(node.left, node.key, node.value, removeLoop(k, node.right));\n\t}\n\n\tfunction iteratorLoop(node:TreeNode<K,V>, acc:Array<V>) {\n\t\tif (node != null) {\n\t\t\titeratorLoop(node.left, acc);\n\t\t\tacc.push(node.value);\n\t\t\titeratorLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction keysLoop(node:TreeNode<K,V>, acc:Array<K>) {\n\t\tif (node != null) {\n\t\t\tkeysLoop(node.left, acc);\n\t\t\tacc.push(node.key);\n\t\t\tkeysLoop(node.right, acc);\n\t\t}\n\t}\n\n\tfunction merge(t1, t2) {\n\t\tif (t1 == null) return t2;\n\t\tif (t2 == null) return t1;\n\t\tvar t = minBinding(t2);\n\t\treturn balance(t1, t.key, t.value, removeMinBinding(t2));\n\t}\n\n\tfunction minBinding(t:TreeNode<K,V>) {\n\t\treturn if (t == null) throw \"Not_found\";\n\t\telse if (t.left == null) t;\n\t\telse minBinding(t.left);\n\t}\n\n\tfunction removeMinBinding(t:TreeNode<K,V>) {\n\t\treturn if (t.left == null) t.right;\n\t\telse balance(removeMinBinding(t.left), t.key, t.value, t.right);\n\t}\n\n\tfunction balance(l:TreeNode<K,V>, k:K, v:V, r:TreeNode<K,V>):TreeNode<K,V> {\n\t\tvar hl = l.get_height();\n\t\tvar hr = r.get_height();\n\t\treturn if (hl > hr + 2) {\n\t\t\tif (l.left.get_height() >= l.right.get_height()) new TreeNode<K,V>(l.left, l.key, l.value, new TreeNode<K,V>(l.right, k, v, r));\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l.left,l.key, l.value, l.right.left), l.right.key, l.right.value, new TreeNode<K,V>(l.right.right, k, v, r));\n\t\t} else if (hr > hl + 2) {\n\t\t\tif (r.right.get_height() > r.left.get_height()) new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left), r.key, r.value, r.right);\n\t\t\telse new TreeNode<K,V>(new TreeNode<K,V>(l, k, v, r.left.left), r.left.key, r.left.value, new TreeNode<K,V>(r.left.right, r.key, r.value, r.right));\n\t\t} else {\n\t\t\tnew TreeNode<K,V>(l, k, v, r, (hl > hr ? hl : hr) + 1);\n\t\t}\n\t}\n\n\tfunction compare(k1:K, k2:K) {\n\t\treturn Reflect.compare(k1, k2);\n\t}\n\n\tpublic function toString() {\n\t\treturn '{${root.toString()}}';\n\t}\n}\n\nclass TreeNode<K,V> {\n\tpublic var left : TreeNode<K,V>;\n\tpublic var right : TreeNode<K,V>;\n\tpublic var key : K;\n\tpublic var value : V;\n\t#if as3\n\tpublic\n\t#end\n\tvar _height : Int;\n\n\tpublic function new(l, k, v, r, h = -1) {\n\t\tleft = l;\n\t\tkey = k;\n\t\tvalue = v;\n\t\tright = r;\n\t\tif (h == -1)\n\t\t\t_height = (left.get_height() > right.get_height() ? left.get_height() : right.get_height()) + 1;\n\t\telse\n\t\t\t_height = h;\n\t}\n\n\t@:extern public inline function get_height() return this == null ? 0 : _height;\n\n\tpublic function toString() {\n\t\treturn (left == null ? \"\" : left.toString() + \", \") + '$key=$value' + (right == null ? \"\" : \", \" +right.toString());\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tEnumValueMap allows mapping of enum value keys to arbitrary values.\n\n\tKeys are compared by value and recursively over their parameters. If any\n\tparameter is not an enum value, `Reflect.compare` is used to compare them.\n**/\nclass EnumValueMap<K:EnumValue, V> extends haxe.ds.BalancedTree<K, V> implements Map.IMap<K,V> {\n\n\toverride function compare(k1:EnumValue, k2:EnumValue):Int {\n\t\tvar d = k1.getIndex() - k2.getIndex();\n\t\tif (d != 0) return d;\n\t\tvar p1 = k1.getParameters();\n\t\tvar p2 = k2.getParameters();\n\t\tif (p1.length == 0 && p2.length == 0) return 0;\n\t\treturn compareArgs(p1, p2);\n\t}\n\n\tfunction compareArgs(a1:Array<Dynamic>, a2:Array<Dynamic>):Int {\n\t\tvar ld = a1.length - a2.length;\n\t\tif (ld != 0) return ld;\n\t\tfor (i in 0...a1.length) {\n\t\t\tvar d = compareArg(a1[i], a2[i]);\n\t\t\tif (d != 0) return d;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction compareArg(v1:Dynamic, v2:Dynamic):Int {\n\t\treturn if (Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {\n\t\t\tcompare(v1, v2);\n\t\t} else if (Std.is(v1, Array) && Std.is(v2, Array)) {\n\t\t\tcompareArgs(v1, v2);\n\t\t} else {\n\t\t\tReflect.compare(v1, v2);\n\t\t}\n\t}\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements Map.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class StringMap<T> implements Map.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : String, value : T ) : Void {\n\t\tuntyped h[\"$\"+key] = value;\n\t}\n\n\tpublic function get( key : String ) : Null<T> {\n\t\treturn untyped h[\"$\"+key];\n\t}\n\n\tpublic function exists( key : String ) : Bool {\n\t\treturn untyped h.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tkey = \"$\"+key;\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[\"$\"+i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\nprivate typedef VectorData<T> = #if flash10\n\tflash.Vector<T>\n#elseif neko\n\tneko.NativeArray<T>\n#elseif cs\n\tcs.NativeArray<T>\n#elseif java\n\tjava.NativeArray<T>\n#else\n\tArray<T>\n#end\n\n/**\n\tA Vector is a storage of fixed size. It can be faster than Array on some\n\ttargets, and is never slower.\n**/\nabstract Vector<T>(VectorData<T>) {\n\t/**\n\t\tCreates a new Vector of length `length`.\n\n\t\tInitially `this` Vector contains `length` neutral elements:\n\n\t\t- always null on dynamic targets\n\t\t- 0, 0.0 or false for Int, Float and Bool respectively on static targets\n\t\t- null for other types on static targets\n\n\t\tIf `length` is less than or equal to 0, the result is unspecified.\n\t**/\n\tpublic inline function new(length:Int) {\n\t\t#if flash9\n\t\t\tthis = new flash.Vector<T>(length, true);\n\t\t#elseif neko\n\t\t\tthis = untyped __dollar__amake(length);\n\t\t#elseif js\n\t\t\tthis = untyped __new__(Array, length);\n\t\t#elseif cs\n\t\t\tthis = new cs.NativeArray(length);\n\t\t#elseif java\n\t\t\tthis = new java.NativeArray(length);\n\t\t#elseif cpp\n\t\t\tthis = untyped (new Array<T>()).__SetSizeExact(length);\n\t\t#else\n\t\t\tthis = [];\n\t\t\tuntyped this.length = length;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the value at index `index`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:arrayAccess public inline function get(index:Int):Null<T> {\n\t\t#if cpp\n\t\treturn this.unsafeGet(index);\n\t\t#else\n\t\treturn this[index];\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the value at index `index` to `val`.\n\n\t\tIf `index` is negative or exceeds `this.length`, the result is\n\t\tunspecified.\n\t**/\n\t@:arrayAccess public inline function set(index:Int, val:T):T {\n\t\t#if cpp\n\t\treturn this.unsafeSet(index,val);\n\t\t#else\n\t\treturn this[index] = val;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the length of `this` Vector.\n\t**/\n\tpublic var length(get, never):Int;\n\n\tinline function get_length():Int {\n\t\t#if neko\n\t\t\treturn untyped __dollar__asize(this);\n\t\t#elseif cs\n\t\t\treturn this.Length;\n\t\t#elseif java\n\t\t\treturn this.length;\n\t\t#else\n\t\t\treturn untyped this.length;\n\t\t#end\n\t}\n\n\t/**\n\t\tCopies `length` of elements from `src` Vector, beginning at `srcPos` to\n\t\t`dest` Vector, beginning at `destPos`\n\n\t\tThe results are unspecified if `length` results in out-of-bounds access,\n\t\tor if `src` or `dest` are null\n\t**/\n\tpublic static #if (cs || java || neko || cpp) inline #end function blit<T>(src:Vector<T>, srcPos:Int, dest:Vector<T>, destPos:Int, len:Int):Void\n\t{\n\t\t#if neko\n\t\t\tuntyped __dollar__ablit(dest,destPos,src,srcPos,len);\n\t\t#elseif java\n\t\t\tjava.lang.System.arraycopy(src, srcPos, dest, destPos, len);\n\t\t#elseif cs\n\t\t\tcs.system.Array.Copy(cast src, srcPos,cast dest, destPos, len);\n\t\t#elseif cpp\n\t\t\tdest.toData().blit(destPos,src.toData(), srcPos,len);\n\t\t#else\n\t\t\tfor (i in 0...len)\n\t\t\t{\n\t\t\t\tdest[destPos + i] = src[srcPos + i];\n\t\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tCreates a new Array, copy the content from the Vector to it, and returns it.\n\t**/\n\tpublic #if (flash || cpp) inline #end function toArray():Array<T> {\n\t\t#if cpp\n\t\t\treturn this.copy();\n\t\t#else\n\t\t\tvar a = new Array();\n\t\t\tvar len = length;\n\t\t\t#if (neko)\n\t\t\t// prealloc good size\n\t\t\tif( len > 0 ) a[len - 1] = get(0);\n\t\t\t#end\n\t\t\tfor( i in 0...len )\n\t\t\t\ta[i] = get(i);\n\t\t\treturn a;\n\t\t#end\n\t}\n\n\t/**\n\t\tExtracts the data of `this` Vector.\n\n\t\tThis returns the internal representation type.\n\t**/\n\tpublic inline function toData():VectorData<T>\n\t\treturn cast this;\n\n\t/**\n\t\tInitializes a new Vector from `data`.\n\n\t\tSince `data` is the internal representation of Vector, this is a no-op.\n\n\t\tIf `data` is null, the corresponding Vector is also `null`.\n\t**/\n\tstatic public inline function fromData<T>(data:VectorData<T>):Vector<T>\n\t\treturn cast data;\n\n\t/**\n\t\tCreates a new Vector by copying the elements of `array`.\n\n\t\tThis always creates a copy, even on platforms where the internal\n\t\trepresentation is Array.\n\n\t\tThe elements are not copied and retain their identity, so\n\t\t`a[i] == Vector.fromArrayCopy(a).get(i)` is true for any valid i.\n\n\t\tIf `array` is null, the result is unspecified.\n\t**/\n\t#if as3 @:extern #end\n\tstatic public inline function fromArrayCopy<T>(array:Array<T>):Vector<T> {\n\t\t// TODO: Optimize this for flash (and others?)\n\t\tvar vec = new Vector<T>(array.length);\n\t\tfor (i in 0...array.length)\n\t\t\tvec.set(i, array[i]);\n\t\treturn vec;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the [Input].\n**/\nclass Eof {\n\tpublic function new() {\n\t}\n\t@:keep function toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis class provides a convenient way of working with paths. It supports the\n\tcommon path formats:\n\n\t- directory1/directory2/filename.extension\n\t- directory1\\directory2\\filename.excention\n**/\nclass Path {\n\n\t/**\n\t\tThe directory.\n\n\t\tThis is the leading part of the path that is not part of the file name\n\t\tand the extension.\n\n\t\tDoes not end with a `/` or `\\` separator.\n\n\t\tIf the path has no directory, the value is null.\n\t**/\n\tpublic var dir : String;\n\n\t/**\n\t\tThe file name.\n\n\t\tThis is the part of the part between the directory and the extension.\n\n\t\tIf there is no file name, e.g. for \".htaccess\" or \"/dir/\", the value\n\t\tis the empty String \"\".\n\t**/\n\tpublic var file : String;\n\n\t/**\n\t\tThe file extension.\n\n\t\tIt is separated from the file name by a dot. This dot is not part of\n\t\tthe extension.\n\n\t\tIf the path has no extension, the value is null.\n\t**/\n\tpublic var ext : String;\n\n\t/**\n\t\tTrue if the last directory separator is a backslash, false otherwise.\n\t**/\n\tpublic var backslash : Bool;\n\n\t/**\n\t\tCreates a new Path instance by parsing `path`.\n\n\t\tPath information can be retrieved by accessing the dir, file and ext\n\t\tproperties.\n\t**/\n\tpublic function new( path : String ) {\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\tif( c1 < c2 ) {\n\t\t\tdir = path.substr(0,c2);\n\t\t\tpath = path.substr(c2+1);\n\t\t\tbackslash = true;\n\t\t} else if( c2 < c1 ) {\n\t\t\tdir = path.substr(0,c1);\n\t\t\tpath = path.substr(c1+1);\n\t\t} else\n\t\t\tdir = null;\n\t\tvar cp = path.lastIndexOf(\".\");\n\t\tif( cp != -1 ) {\n\t\t\text = path.substr(cp+1);\n\t\t\tfile = path.substr(0,cp);\n\t\t} else {\n\t\t\text = null;\n\t\t\tfile = path;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` path.\n\n\t\tIf `this.backslash` is true, backslash is used as directory separator,\n\t\totherwise slash is used. This only affects the separator between\n\t\t`this.dir` and `this.file`.\n\n\t\tIf `this.directory` or `this.extension` is null, their representation\n\t\tis the empty String \"\".\n\t**/\n\tpublic function toString() {\n\t\treturn (if( dir == null ) \"\" else dir + if( backslash ) \"\\\\\" else \"/\") + file + (if( ext == null ) \"\" else \".\" + ext);\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the file extension.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutExtension( path : String ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the directory.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutDirectory( path ) {\n\t\tvar s = new Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the directory of `path`.\n\n\t\tIf the directory is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function directory( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.dir == null )\n\t\t\treturn \"\";\n\t\treturn s.dir;\n\t}\n\n\t/**\n\t\tReturns the extension of `path`.\n\n\t\tIf the extension is null, the empty String \"\" is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function extension( path ) {\n\t\tvar s = new Path(path);\n\t\tif( s.ext == null )\n\t\t\treturn \"\";\n\t\treturn s.ext;\n\t}\n\n\t/**\n\t\tReturns a String representation of `path` where the extension is `ext`.\n\n\t\tIf `path` has no extension, `ext` is added as extension.\n\n\t\tIf `path` or `ext` are null, the result is unspecified.\n\t**/\n\tpublic static function withExtension( path, ext ) {\n\t\tvar s = new Path(path);\n\t\ts.ext = ext;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tJoins all paths in `paths` together.\n\n\t\tIf `paths` is empty, the empty String `\"\"` is returned. Otherwise the\n\t\tpaths are joined with a slash between them.\n\n\t\tIf `paths` is null, the result is unspecified.\n\t**/\n\tpublic static function join(paths:Array<String>) : String {\n\t\tvar paths = paths.filter(function(s) return s != null && s != \"\");\n\t\tif (paths.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar path = paths[0];\n\t\tfor (i in 1...paths.length) {\n\t\t\tpath = addTrailingSlash(path);\n\t\t\tpath += paths[i];\n\t\t}\n\t\treturn normalize(path);\n\t}\n\n\t/**\n\t\tNormalize a given `path` (e.g. make '/usr/local/../lib' to '/usr/lib').\n\n\t\tAlso replaces backslashes \\ with slashes / and afterwards turns\n\t\tmultiple slashes into a single one.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function normalize(path : String) : String {\n\t\tvar slash = '/';\n\t\tpath = path.split(\"\\\\\").join(\"/\");\n\t\tif( path == null || path == slash ) {\n\t\t\treturn slash;\n\t\t}\n\n\t\tvar target = [];\n\t\tvar src;\n\t\tvar parts;\n\t\tvar token;\n\n\t\tsrc = path.split(slash);\n\t\tfor( i in 0...src.length ) {\n\t\t\ttoken = src[i];\n\n\t\t\tif(token == '..') {\n\t\t\t\ttarget.pop();\n\t\t\t} else if(token != '.') {\n\t\t\t\ttarget.push(token);\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = target.join(slash);\n\t\t#if !flash8\n\t\tvar regex = ~/([^:])\\/+/g;\n\t\tvar result = regex.replace(tmp, \"$1\" +slash);\n\t\t#else\n\t\tvar acc = new StringBuf();\n\t\tvar colon = false;\n\t\tvar slashes = false;\n\t\tfor (i in 0...tmp.length) {\n\t\t\tswitch (tmp.charCodeAt(i)) {\n\t\t\t\tcase \":\".code:\n\t\t\t\t\tacc.add(\":\");\n\t\t\t\t\tcolon = true;\n\t\t\t\tcase \"/\".code if (colon == false):\n\t\t\t\t\tslashes = true;\n\t\t\t\tcase i:\n\t\t\t\t\tcolon = false;\n\t\t\t\t\tif (slashes) {\n\t\t\t\t\t\tacc.add(\"/\");\n\t\t\t\t\t\tslashes = false;\n\t\t\t\t\t}\n\t\t\t\t\tacc.add(String.fromCharCode(i));\n\t\t\t}\n\t\t}\n\t\tvar result = acc.toString();\n\t\t#end\n\t\treturn result;\n\t}\n\n\t/**\n\t\tAdds a trailing slash to `path`, if it does not have one already.\n\n\t\tIf the last slash in `path` is a backslash, a backslash is appended to\n\t\t`path`.\n\n\t\tIf the last slash in `path` is a slash, or if no slash is found, a slash\n\t\tis appended to `path`. In particular, this applies to the empty String\n\t\t\"\".\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function addTrailingSlash( path : String ) : String {\n\t\tif (path.length == 0)\n\t\t\treturn \"/\";\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\treturn if ( c1 < c2 ) {\n\t\t\tif (c2 != path.length - 1) path + \"\\\\\";\n\t\t\telse path;\n\t\t} else {\n\t\t\tif (c1 != path.length - 1) path + \"/\";\n\t\t\telse path;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves trailing slashes from `path`.\n\n\t\tIf `path` does not end with a `/` or `\\`, `path` is returned unchanged.\n\n\t\tOtherwise the substring of `path` excluding the trailing slashes or\n\t\tbackslashes is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\t@:require(haxe_ver >= 3.1)\n\tpublic static function removeTrailingSlashes ( path : String ) : String {\n\t\twhile (true) {\n\t\t\tswitch(path.charCodeAt(path.length - 1)) {\n\t\t\t\tcase '/'.code | '\\\\'.code: path = path.substr(0, -1);\n\t\t\t\tcase _: break;\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.rtti;\n\n/**\n\tAn api to access classes and enums metadata at runtime.\n**/\nclass Meta {\n\n\t/**\n\t\tReturns the metadata that were declared for the given type (class or enum)\n\t**/\n\tpublic static function getType( t : Dynamic ) : Dynamic<Array<Dynamic>> {\n\t\t#if (java || cs)\n\t\tvar meta : Dynamic = Reflect.field(t, \"__meta__\");\n\t\t#else\n\t\tvar meta : Dynamic = untyped t.__meta__;\n\t\t#end\n\t\treturn (meta == null || meta.obj == null) ? {} : meta.obj;\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class static fields\n\t**/\n\tpublic static function getStatics( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\t#if (java || cs)\n\t\tvar meta : Dynamic = Reflect.field(t, \"__meta__\");\n\t\t#else\n\t\tvar meta : Dynamic = untyped t.__meta__;\n\t\t#end\n\t\treturn (meta == null || meta.statics == null) ? {} : meta.statics;\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class fields or enum constructors\n\t**/\n\tpublic static function getFields( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\t#if (java || cs)\n\t\tvar meta : Dynamic = Reflect.field(t, \"__meta__\");\n\t\t#else\n\t\tvar meta : Dynamic = untyped t.__meta__;\n\t\t#end\n\t\treturn (meta == null || meta.fields == null) ? {} : meta.fields;\n\t}\n\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nprivate class NodeAccess implements Dynamic<Fast> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Fast {\n\t\tvar x = __x.elementsNamed(name).next();\n\t\tif( x == null ) {\n\t\t\tvar xname = if( __x.nodeType == Xml.Document ) \"Document\" else __x.nodeName;\n\t\t\tthrow xname+\" is missing element \"+name;\n\t\t}\n\t\treturn new Fast(x);\n\t}\n\n}\n\nprivate class AttribAccess implements Dynamic<String> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : String {\n\t\tif( __x.nodeType == Xml.Document )\n\t\t\tthrow \"Cannot access document attribute \"+name;\n\t\tvar v = __x.get(name);\n\t\tif( v == null )\n\t\t\tthrow __x.nodeName+\" is missing attribute \"+name;\n\t\treturn v;\n\t}\n\n}\n\nprivate class HasAttribAccess implements Dynamic<Bool> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Bool {\n\t\tif( __x.nodeType == Xml.Document )\n\t\t\tthrow \"Cannot access document attribute \"+name;\n\t\treturn __x.exists(name);\n\t}\n\n}\n\nprivate class HasNodeAccess implements Dynamic<Bool> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : Bool {\n\t\treturn __x.elementsNamed(name).hasNext();\n\t}\n\n}\n\nprivate class NodeListAccess implements Dynamic<List<Fast>> {\n\n\tvar __x : Xml;\n\n\tpublic function new( x : Xml ) {\n\t\t__x = x;\n\t}\n\n\tpublic function resolve( name : String ) : List<Fast> {\n\t\tvar l = new List();\n\t\tfor( x in __x.elementsNamed(name) )\n\t\t\tl.add(new Fast(x));\n\t\treturn l;\n\t}\n\n}\n\nclass Fast {\n\n\tpublic var x(default,null) : Xml;\n\tpublic var name(get,null) : String;\n\tpublic var innerData(get,null) : String;\n\tpublic var innerHTML(get,null) : String;\n\tpublic var node(default,null) : NodeAccess;\n\tpublic var nodes(default,null) : NodeListAccess;\n\tpublic var att(default,null) : AttribAccess;\n\tpublic var has(default,null) : HasAttribAccess;\n\tpublic var hasNode(default,null) : HasNodeAccess;\n\tpublic var elements(get,null) : Iterator<Fast>;\n\n\tpublic function new( x : Xml ) {\n\t\tif( x.nodeType != Xml.Document && x.nodeType != Xml.Element )\n\t\t\tthrow \"Invalid nodeType \"+x.nodeType;\n\t\tthis.x = x;\n\t\tnode = new NodeAccess(x);\n\t\tnodes = new NodeListAccess(x);\n\t\tatt = new AttribAccess(x);\n\t\thas = new HasAttribAccess(x);\n\t\thasNode = new HasNodeAccess(x);\n\t}\n\n\tfunction get_name() {\n\t\treturn if( x.nodeType == Xml.Document ) \"Document\" else x.nodeName;\n\t}\n\n\tfunction get_innerData() {\n\t\tvar it = x.iterator();\n\t\tif( !it.hasNext() )\n\t\t\tthrow name+\" does not have data\";\n\t\tvar v = it.next();\n\t\tvar n = it.next();\n\t\tif( n != null ) {\n\t\t\t// handle <spaces>CDATA<spaces>\n\t\t\tif( v.nodeType == Xml.PCData && n.nodeType == Xml.CData && StringTools.trim(v.nodeValue) == \"\" ) {\n\t\t\t\tvar n2 = it.next();\n\t\t\t\tif( n2 == null || (n2.nodeType == Xml.PCData && StringTools.trim(n2.nodeValue) == \"\" && it.next() == null) )\n\t\t\t\t\treturn n.nodeValue;\n\t\t\t}\n\t\t\tthrow name+\" does not only have data\";\n\t\t}\n\t\tif( v.nodeType != Xml.PCData && v.nodeType != Xml.CData )\n\t\t\tthrow name+\" does not have data\";\n\t\treturn v.nodeValue;\n\t}\n\n\tfunction get_innerHTML() {\n\t\tvar s = new StringBuf();\n\t\tfor( x in x )\n\t\t\ts.add(x.toString());\n\t\treturn s.toString();\n\t}\n\n\tfunction get_elements() {\n\t\tvar it = x.elements();\n\t\treturn {\n\t\t\thasNext : it.hasNext,\n\t\t\tnext : function() {\n\t\t\t\tvar x = it.next();\n\t\t\t\tif( x == null )\n\t\t\t\t\treturn null;\n\t\t\t\treturn new Fast(x);\n\t\t\t}\n\t\t};\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.xml;\n\nusing StringTools;\n\n/* poor'man enum : reduce code size + a bit faster since inlined */\nextern private class S {\n\tpublic static inline var IGNORE_SPACES \t= 0;\n\tpublic static inline var BEGIN\t\t\t= 1;\n\tpublic static inline var BEGIN_NODE\t\t= 2;\n\tpublic static inline var TAG_NAME\t\t= 3;\n\tpublic static inline var BODY\t\t\t= 4;\n\tpublic static inline var ATTRIB_NAME\t= 5;\n\tpublic static inline var EQUALS\t\t\t= 6;\n\tpublic static inline var ATTVAL_BEGIN\t= 7;\n\tpublic static inline var ATTRIB_VAL\t\t= 8;\n\tpublic static inline var CHILDS\t\t\t= 9;\n\tpublic static inline var CLOSE\t\t\t= 10;\n\tpublic static inline var WAIT_END\t\t= 11;\n\tpublic static inline var WAIT_END_RET\t= 12;\n\tpublic static inline var PCDATA\t\t\t= 13;\n\tpublic static inline var HEADER\t\t\t= 14;\n\tpublic static inline var COMMENT\t\t= 15;\n\tpublic static inline var DOCTYPE\t\t= 16;\n\tpublic static inline var CDATA\t\t\t= 17;\n\tpublic static inline var ESCAPE\t\t\t= 18;\n}\n\nclass Parser\n{\n\tstatic var escapes = {\n\t\tvar h = new haxe.ds.StringMap();\n\t\th.set(\"lt\", \"<\");\n\t\th.set(\"gt\", \">\");\n\t\th.set(\"amp\", \"&\");\n\t\th.set(\"quot\", '\"');\n\t\th.set(\"apos\", \"'\");\n\t\th.set(\"nbsp\", String.fromCharCode(160));\n\t\th;\n\t}\n\n\tstatic public function parse(str:String)\n\t{\n\t\tvar doc = Xml.createDocument();\n\t\tdoParse(str, 0, doc);\n\t\treturn doc;\n\t}\n\n\tstatic function doParse(str:String, p:Int = 0, ?parent:Xml):Int\n\t{\n\t\tvar xml:Xml = null;\n\t\tvar state = S.BEGIN;\n\t\tvar next = S.BEGIN;\n\t\tvar aname = null;\n\t\tvar start = 0;\n\t\tvar nsubs = 0;\n\t\tvar nbrackets = 0;\n\t\tvar c = str.fastCodeAt(p);\n\t\tvar buf = new StringBuf();\n\t\twhile (!StringTools.isEof(c))\n\t\t{\n\t\t\tswitch(state)\n\t\t\t{\n\t\t\t\tcase S.IGNORE_SPACES:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase\n\t\t\t\t\t\t\t'\\n'.code,\n\t\t\t\t\t\t\t'\\r'.code,\n\t\t\t\t\t\t\t'\\t'.code,\n\t\t\t\t\t\t\t' '.code:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = next;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '<'.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tstate = S.PCDATA;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.PCDATA:\n\t\t\t\t\tif (c == '<'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\t#if php\n\t\t\t\t\t\tvar child = Xml.createPCDataFromCustomParser(buf.toString() + str.substr(start, p - start));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\tvar child = Xml.createPCData(buf.toString() + str.substr(start, p - start));\n\t\t\t\t\t\t#end\n\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\tparent.addChild(child);\n\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BEGIN_NODE;\n\t\t\t\t\t}\n\t\t\t\t\t#if !flash9\n\t\t\t\t\telse if (c == '&'.code) {\n\t\t\t\t\t\tbuf.addSub(str, start, p - start);\n\t\t\t\t\t\tstate = S.ESCAPE;\n\t\t\t\t\t\tnext = S.PCDATA;\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t}\n\t\t\t\t\t#end\n\t\t\t\tcase S.CDATA:\n\t\t\t\t\tif (c == ']'.code && str.fastCodeAt(p + 1) == ']'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = Xml.createCData(str.substr(start, p - start));\n\t\t\t\t\t\tparent.addChild(child);\n\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.BEGIN_NODE:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '!'.code:\n\t\t\t\t\t\t\tif (str.fastCodeAt(p + 1) == '['.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tif (str.substr(p, 6).toUpperCase() != \"CDATA[\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <![CDATA[\");\n\t\t\t\t\t\t\t\tp += 5;\n\t\t\t\t\t\t\t\tstate = S.CDATA;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (str.fastCodeAt(p + 1) == 'D'.code || str.fastCodeAt(p + 1) == 'd'.code)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(str.substr(p + 2, 6).toUpperCase() != \"OCTYPE\")\n\t\t\t\t\t\t\t\t\tthrow(\"Expected <!DOCTYPE\");\n\t\t\t\t\t\t\t\tp += 8;\n\t\t\t\t\t\t\t\tstate = S.DOCTYPE;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if( str.fastCodeAt(p + 1) != '-'.code || str.fastCodeAt(p + 2) != '-'.code )\n\t\t\t\t\t\t\t\tthrow(\"Expected <!--\");\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\t\t\tstate = S.COMMENT;\n\t\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase '?'.code:\n\t\t\t\t\t\t\tstate = S.HEADER;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tif( parent == null )\n\t\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.CLOSE;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.TAG_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.TAG_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( p == start )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\t\t\t\t\t\txml = Xml.createElement(str.substr(start, p - start));\n\t\t\t\t\t\tparent.addChild(xml);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.BODY:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '/'.code:\n\t\t\t\t\t\t\tstate = S.WAIT_END;\n\t\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.CHILDS;\n\t\t\t\t\t\t\tnsubs++;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tstate = S.ATTRIB_NAME;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_NAME:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp;\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected attribute name\");\n\t\t\t\t\t\ttmp = str.substr(start,p-start);\n\t\t\t\t\t\taname = tmp;\n\t\t\t\t\t\tif( xml.exists(aname) )\n\t\t\t\t\t\t\tthrow(\"Duplicate attribute\");\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.EQUALS;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.EQUALS:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '='.code:\n\t\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\t\tnext = S.ATTVAL_BEGIN;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected =\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTVAL_BEGIN:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '\"'.code, '\\''.code:\n\t\t\t\t\t\t\tstate = S.ATTRIB_VAL;\n\t\t\t\t\t\t\tstart = p;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow(\"Expected \\\"\");\n\t\t\t\t\t}\n\t\t\t\tcase S.ATTRIB_VAL:\n\t\t\t\t\tif (c == str.fastCodeAt(start))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = str.substr(start+1,p-start-1);\n\t\t\t\t\t\txml.set(aname, val);\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.BODY;\n\t\t\t\t\t}\n\t\t\t\tcase S.CHILDS:\n\t\t\t\t\tp = doParse(str, p, xml);\n\t\t\t\t\tstart = p;\n\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\tcase S.WAIT_END:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.WAIT_END_RET:\n\t\t\t\t\tswitch(c)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase '>'.code:\n\t\t\t\t\t\t\tif( nsubs == 0 )\n\t\t\t\t\t\t\t\tparent.addChild(Xml.createPCData(\"\"));\n\t\t\t\t\t\t\treturn p;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tthrow(\"Expected >\");\n\t\t\t\t\t}\n\t\t\t\tcase S.CLOSE:\n\t\t\t\t\tif (!isValidChar(c))\n\t\t\t\t\t{\n\t\t\t\t\t\tif( start == p )\n\t\t\t\t\t\t\tthrow(\"Expected node name\");\n\n\t\t\t\t\t\tvar v = str.substr(start,p - start);\n\t\t\t\t\t\tif (v != parent.nodeName)\n\t\t\t\t\t\t\tthrow \"Expected </\" +parent.nodeName + \">\";\n\n\t\t\t\t\t\tstate = S.IGNORE_SPACES;\n\t\t\t\t\t\tnext = S.WAIT_END_RET;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\tcase S.COMMENT:\n\t\t\t\t\tif (c == '-'.code && str.fastCodeAt(p +1) == '-'.code && str.fastCodeAt(p + 2) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.addChild(Xml.createComment(str.substr(start, p - start)));\n\t\t\t\t\t\tp += 2;\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.DOCTYPE:\n\t\t\t\t\tif(c == '['.code)\n\t\t\t\t\t\tnbrackets++;\n\t\t\t\t\telse if(c == ']'.code)\n\t\t\t\t\t\tnbrackets--;\n\t\t\t\t\telse if (c == '>'.code && nbrackets == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.addChild(Xml.createDocType(str.substr(start, p - start)));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.HEADER:\n\t\t\t\t\tif (c == '?'.code && str.fastCodeAt(p + 1) == '>'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tp++;\n\t\t\t\t\t\tvar str = str.substr(start + 1, p - start - 2);\n\t\t\t\t\t\tparent.addChild(Xml.createProcessingInstruction(str));\n\t\t\t\t\t\tstate = S.BEGIN;\n\t\t\t\t\t}\n\t\t\t\tcase S.ESCAPE:\n\t\t\t\t\tif (c == ';'.code)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar s = str.substr(start, p - start);\n\t\t\t\t\t\tif (s.fastCodeAt(0) == '#'.code) {\n\t\t\t\t\t\t\tvar i = s.fastCodeAt(1) == 'x'.code\n\t\t\t\t\t\t\t\t? Std.parseInt(\"0\" +s.substr(1, s.length - 1))\n\t\t\t\t\t\t\t\t: Std.parseInt(s.substr(1, s.length - 1));\n\t\t\t\t\t\t\tbuf.add(String.fromCharCode(i));\n\t\t\t\t\t\t} else if (!escapes.exists(s))\n\t\t\t\t\t\t\tbuf.add('&$s;');\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbuf.add(escapes.get(s));\n\t\t\t\t\t\tstart = p + 1;\n\t\t\t\t\t\tstate = next;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tc = str.fastCodeAt(++p);\n\t\t}\n\n\t\tif (state == S.BEGIN)\n\t\t{\n\t\t\tstart = p;\n\t\t\tstate = S.PCDATA;\n\t\t}\n\n\t\tif (state == S.PCDATA)\n\t\t{\n\t\t\tif (p != start || nsubs == 0)\n\t\t\t\tparent.addChild(Xml.createPCData(buf.toString() + str.substr(start, p - start)));\n\t\t\treturn p;\n\t\t}\n\n\t\tthrow \"Unexpected end\";\n\t}\n\n\tstatic inline function isValidChar(c) {\n\t\treturn (c >= 'a'.code && c <= 'z'.code) || (c >= 'A'.code && c <= 'Z'.code) || (c >= '0'.code && c <= '9'.code) || c == ':'.code || c == '.'.code || c == '_'.code || c == '-'.code;\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic inline function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class (with window or global):\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\tif (__js__(\"typeof window\") != \"undefined\")\n\t\t\treturn window[name];\n\t\telse\n\t\t\treturn global[name];\n\t}\n\n}\n","package lime._backend.html5;\n\n\nimport js.html.KeyboardEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.audio.AudioManager;\nimport lime.graphics.Renderer;\nimport lime.ui.KeyCode;\nimport lime.ui.Window;\n\n@:access(lime._backend.html5.HTML5Window)\n@:access(lime.app.Application)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Window)\n\n\nclass HTML5Application {\n\t\n\t\n\tprivate var cacheTime:Float;\n\tprivate var initialized:Bool;\n\tprivate var parent:Application;\n\t\n\t\n\tpublic inline function new (parent:Application) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tAudioManager.init ();\n\t\t\n\t}\n\t\n\t\n\tprivate function convertKeyCode (keyCode:Int):KeyCode {\n\t\t\n\t\tif (keyCode >= 65 && keyCode <= 90) {\n\t\t\t\n\t\t\treturn keyCode + 32;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (keyCode) {\n\t\t\t\n\t\t\tcase 16: return KeyCode.LEFT_SHIFT;\n\t\t\tcase 17: return KeyCode.LEFT_CTRL;\n\t\t\tcase 18: return KeyCode.LEFT_ALT;\n\t\t\tcase 20: return KeyCode.CAPS_LOCK;\n\t\t\tcase 144: return KeyCode.NUM_LOCK;\n\t\t\tcase 37: return KeyCode.LEFT;\n\t\t\tcase 38: return KeyCode.UP;\n\t\t\tcase 39: return KeyCode.RIGHT;\n\t\t\tcase 40: return KeyCode.DOWN;\n\t\t\tcase 45: return KeyCode.INSERT;\n\t\t\tcase 46: return KeyCode.DELETE;\n\t\t\tcase 36: return KeyCode.HOME;\n\t\t\tcase 35: return KeyCode.END;\n\t\t\tcase 33: return KeyCode.PAGE_UP;\n\t\t\tcase 34: return KeyCode.PAGE_DOWN;\n\t\t\tcase 112: return KeyCode.F1;\n\t\t\tcase 113: return KeyCode.F2;\n\t\t\tcase 114: return KeyCode.F3;\n\t\t\tcase 115: return KeyCode.F4;\n\t\t\tcase 116: return KeyCode.F5;\n\t\t\tcase 117: return KeyCode.F6;\n\t\t\tcase 118: return KeyCode.F7;\n\t\t\tcase 119: return KeyCode.F8;\n\t\t\tcase 120: return KeyCode.F9;\n\t\t\tcase 121: return KeyCode.F10;\n\t\t\tcase 122: return KeyCode.F11;\n\t\t\tcase 123: return KeyCode.F12;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn keyCode;\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\tparent.config = config;\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tvar window = new Window (config);\n\t\t\tvar renderer = new Renderer (window);\n\t\t\tparent.addWindow (window);\n\t\t\tparent.addRenderer (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function exec ():Int {\n\t\t\n\t\tBrowser.window.addEventListener (\"keydown\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"keyup\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"focus\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"blur\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"resize\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"beforeunload\", handleWindowEvent, false);\n\t\t\n\t\t#if stats\n\t\tstats = untyped __js__(\"new Stats ()\");\n\t\tstats.domElement.style.position = \"absolute\";\n\t\tstats.domElement.style.top = \"0px\";\n\t\tBrowser.document.body.appendChild (stats.domElement);\n\t\t#end\n\t\t\n\t\tuntyped __js__ (\"\n\t\t\tvar lastTime = 0;\n\t\t\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\t\t\tfor(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\t\t\twindow.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n\t\t\t\twindow.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] \n\t\t\t\t\t\t\t\t\t\t   || window[vendors[x]+'CancelRequestAnimationFrame'];\n\t\t\t}\n\t\t\t\n\t\t\tif (!window.requestAnimationFrame)\n\t\t\t\twindow.requestAnimationFrame = function(callback, element) {\n\t\t\t\t\tvar currTime = new Date().getTime();\n\t\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\t\tvar id = window.setTimeout(function() { callback(currTime + timeToCall); }, \n\t\t\t\t\t  timeToCall);\n\t\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\t\treturn id;\n\t\t\t\t};\n\t\t\t\n\t\t\tif (!window.cancelAnimationFrame)\n\t\t\t\twindow.cancelAnimationFrame = function(id) {\n\t\t\t\t\tclearTimeout(id);\n\t\t\t\t};\n\t\t\t\n\t\t\twindow.requestAnimFrame = window.requestAnimationFrame;\n\t\t\");\n\t\t\n\t\tcacheTime = Date.now ().getTime ();\n\t\t\n\t\thandleUpdateEvent ();\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate function handleKeyEvent (event:KeyboardEvent):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\t// space and arrow keys\n\t\t\t\n\t\t\tswitch (event.keyCode) {\n\t\t\t\t\n\t\t\t\tcase 32, 37, 38, 39, 40: event.preventDefault ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keyCode = cast convertKeyCode (event.keyCode != null ? event.keyCode : event.which);\n\t\t\tvar modifier = 0;\n\t\t\t\n\t\t\tif (event.type == \"keydown\") {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyDown.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyUp.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function handleUpdateEvent (?__):Void {\n\t\t\n\t\t#if stats\n\t\tparent.window.stats.begin ();\n\t\t#end\n\t\t\n\t\tvar currentTime = Date.now ().getTime ();\n\t\tvar deltaTime = currentTime - cacheTime;\n\t\tcacheTime = currentTime;\n\t\t\n\t\tparent.onUpdate.dispatch (Std.int (deltaTime));\n\t\t\n\t\tif (parent.renderer != null) {\n\t\t\t\n\t\t\tif (!initialized) {\n\t\t\t\t\n\t\t\t\tinitialized = true;\n\t\t\t\tparent.init (parent.renderer.context);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tparent.renderer.onRender.dispatch (parent.renderer.context);\n\t\t\tparent.renderer.flip ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#if stats\n\t\tparent.window.stats.end ();\n\t\t#end\n\t\t\n\t\tBrowser.window.requestAnimationFrame (cast handleUpdateEvent);\n\t\t\n\t}\n\t\n\t\n\tprivate function handleWindowEvent (event:js.html.Event):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"focus\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onWindowFocusIn.dispatch ();\n\t\t\t\t\tparent.window.onWindowActivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"blur\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onWindowFocusOut.dispatch ();\n\t\t\t\t\tparent.window.onWindowDeactivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"resize\":\n\t\t\t\t\t\n\t\t\t\t\tvar cacheWidth = parent.window.width;\n\t\t\t\t\tvar cacheHeight = parent.window.height;\n\t\t\t\t\t\n\t\t\t\t\tparent.window.backend.handleResize ();\n\t\t\t\t\t\n\t\t\t\t\tif (parent.window.width != cacheWidth || parent.window.height != cacheHeight) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.window.onWindowResize.dispatch (parent.window.width, parent.window.height);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"beforeunload\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onWindowClose.dispatch ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n\n\nclass Event<T> {\n\t\n\t\n\t@:noCompletion public var listeners:Array<T>;\n\t@:noCompletion public var repeat:Array<Bool>;\n\t\n\tprivate var priorities:Array<Int>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tlisteners = new Array<T> ();\n\t\tpriorities = new Array<Int> ();\n\t\trepeat = new Array<Bool> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function add (listener:T, once:Bool = false, priority:Int = 0):Void {\n\t\t\n\t\tfor (i in 0...priorities.length) {\n\t\t\t\n\t\t\tif (priority > priorities[i]) {\n\t\t\t\t\n\t\t\t\tlisteners.insert (i, listener);\n\t\t\t\tpriorities.insert (i, priority);\n\t\t\t\trepeat.insert (i, !once);\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tlisteners.push (listener);\n\t\tpriorities.push (priority);\n\t\trepeat.push (!once);\n\t\t\n\t}\n\t\n\t\n\tmacro public function dispatch (ethis:Expr, args:Array<Expr>) {\n\t\t\n\t\treturn macro {\n\t\t\t\n\t\t\tvar listeners = $ethis.listeners;\n\t\t\tvar repeat = $ethis.repeat;\n\t\t\tvar length = listeners.length;\n\t\t\tvar i = 0;\n\t\t\t\n\t\t\twhile (i < length) {\n\t\t\t\t\n\t\t\t\tlisteners[i] ($a{args});\n\t\t\t\t\n\t\t\t\tif (!repeat[i]) {\n\t\t\t\t\t\n\t\t\t\t\t$ethis.remove (listeners[i]);\n\t\t\t\t\tlength--;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function remove (listener:T):Void {\n\t\t\n\t\tvar index = listeners.indexOf (listener);\n\t\t\n\t\tif (index > -1) {\n\t\t\t\n\t\t\tlisteners.splice (index, 1);\n\t\t\tpriorities.splice (index, 1);\n\t\t\trepeat.splice (index, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport lime.app.Application;\nimport lime.ui.MouseCursor;\n\n@:access(lime.app.Application)\n@:access(lime.ui.Window)\n\n\nclass HTML5Mouse {\n\t\n\t\n\tprivate static var __cursor:MouseCursor;\n\tprivate static var __hidden:Bool;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tif (!__hidden) {\n\t\t\t\n\t\t\t__hidden = true;\n\t\t\t\n\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\n\t\t\t\twindow.backend.element.style.cursor = \"none\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tif (__hidden) {\n\t\t\t\n\t\t\t__hidden = false;\n\t\t\t\n\t\t\tvar cacheValue = __cursor;\n\t\t\t__cursor = null;\n\t\t\tset_cursor (cacheValue);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tpublic static function get_cursor ():MouseCursor {\n\t\t\n\t\tif (__cursor == null) return DEFAULT;\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tpublic static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\tif (__cursor != value) {\n\t\t\t\n\t\t\tif (!__hidden) {\n\t\t\t\t\n\t\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\t\n\t\t\t\t\twindow.backend.element.style.cursor = switch (value) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARROW: \"default\";\n\t\t\t\t\t\tcase CROSSHAIR: \"crosshair\";\n\t\t\t\t\t\tcase MOVE: \"move\";\n\t\t\t\t\t\tcase POINTER: \"pointer\";\n\t\t\t\t\t\tcase RESIZE_NESW: \"nesw-resize\";\n\t\t\t\t\t\tcase RESIZE_NS: \"ns-resize\";\n\t\t\t\t\t\tcase RESIZE_NWSE: \"nwse-resize\";\n\t\t\t\t\t\tcase RESIZE_WE: \"ew-resize\";\n\t\t\t\t\t\tcase TEXT: \"text\";\n\t\t\t\t\t\tcase WAIT: \"wait\";\n\t\t\t\t\t\tcase WAIT_ARROW: \"wait\";\n\t\t\t\t\t\tdefault: \"auto\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__cursor = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport js.html.webgl.RenderingContext;\nimport lime.app.Application;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Renderer;\n\n@:access(lime.app.Application)\n@:access(lime.graphics.opengl.GL)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Window)\n\n\nclass HTML5Renderer {\n\t\n\t\n\tprivate var parent:Renderer;\n\t\n\t\n\tpublic function new (parent:Renderer) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tcreateContext ();\n\t\t\n\t\tswitch (parent.context) {\n\t\t\t\n\t\t\tcase OPENGL (_):\n\t\t\t\t\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextlost\", handleEvent, false);\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextrestored\", handleEvent, false);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function createContext ():Void {\n\t\t\n\t\tif (parent.window.backend.div != null) {\n\t\t\t\n\t\t\tparent.context = DOM (cast parent.window.backend.div);\n\t\t\t\n\t\t} else if (parent.window.backend.canvas != null) {\n\t\t\t\n\t\t\t#if canvas\n\t\t\t\n\t\t\tvar webgl = null;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar options = {\n\t\t\t\talpha: true,\n\t\t\t\tantialias: Reflect.hasField (parent.window.config, \"antialiasing\") ? parent.window.config.antialiasing > 0 : false,\n\t\t\t\tdepth: Reflect.hasField (parent.window.config, \"depthBuffer\") ? parent.window.config.depthBuffer : true,\n\t\t\t\tpremultipliedAlpha: true,\n\t\t\t\tstencil: Reflect.hasField (parent.window.config, \"stencilBuffer\") ? parent.window.config.stencilBuffer : true,\n\t\t\t\tpreserveDrawingBuffer: false\n\t\t\t};\n\t\t\t\n\t\t\tvar webgl:RenderingContext = cast parent.window.backend.canvas.getContextWebGL (options);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (webgl == null) {\n\t\t\t\t\n\t\t\t\tparent.context = CANVAS (cast parent.window.backend.canvas.getContext (\"2d\"));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if debug\n\t\t\t\twebgl = untyped WebGLDebugUtils.makeDebugContext (webgl);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tGL.context = webgl;\n\t\t\t\t#if (js && html5)\n\t\t\t\tparent.context = OPENGL (cast GL.context);\n\t\t\t\t#else\n\t\t\t\tparent.context = OPENGL (new GLRenderContext ());\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function handleEvent (event:js.html.Event):Void {\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"webglcontextlost\":\n\t\t\t\t\n\t\t\t\tevent.preventDefault ();\n\t\t\t\tparent.context = null;\n\t\t\t\t\n\t\t\t\tparent.onRenderContextLost.dispatch ();\n\t\t\t\t\n\t\t\tcase \"webglcontextrestored\":\n\t\t\t\t\n\t\t\t\tcreateContext ();\n\t\t\t\t\n\t\t\t\tparent.onRenderContextRestored.dispatch (parent.context);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function render ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport js.html.CanvasElement;\nimport js.html.DivElement;\nimport js.html.HtmlElement;\nimport js.html.MouseEvent;\nimport js.html.TouchEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.graphics.Image;\nimport lime.ui.Window;\n\n\nclass HTML5Window {\n\t\n\t\n\tpublic var canvas:CanvasElement;\n\tpublic var div:DivElement;\n\tpublic var element:HtmlElement;\n\t#if stats\n\tpublic var stats:Dynamic;\n\t#end\n\t\n\tprivate var parent:Window;\n\tprivate var setHeight:Int;\n\tprivate var setWidth:Int;\n\t\n\t\n\tpublic function new (parent:Window) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tif (parent.config != null && Reflect.hasField (parent.config, \"element\")) {\n\t\t\t\n\t\t\telement = parent.config.element;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tsetWidth = parent.width;\n\t\tsetHeight = parent.height;\n\t\t\n\t\tif (Std.is (element, CanvasElement)) {\n\t\t\t\n\t\t\tcanvas = cast element;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if dom\n\t\t\tdiv = cast Browser.document.createElement (\"div\");\n\t\t\t#else\n\t\t\tcanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tvar style = canvas.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translateZ(0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translateZ(0)\", null);\n\t\t\t\n\t\t} else if (div != null) {\n\t\t\t\n\t\t\tvar style = div.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translate3D(0,0,0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translate3D(0,0,0)\", null);\n\t\t\t//style.setProperty (\"-webkit-transform-style\", \"preserve-3d\", null);\n\t\t\t//style.setProperty (\"transform-style\", \"preserve-3d\", null);\n\t\t\tstyle.position = \"relative\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.setProperty (\"-webkit-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-moz-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-ms-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-o-user-select\", \"none\", null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.width == 0 && parent.height == 0) {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tparent.width = element.clientWidth;\n\t\t\t\tparent.height = element.clientHeight;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.width = Browser.window.innerWidth;\n\t\t\t\tparent.height = Browser.window.innerHeight;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tparent.fullscreen = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tcanvas.width = parent.width;\n\t\t\tcanvas.height = parent.height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdiv.style.width = parent.width + \"px\";\n\t\t\tdiv.style.height = parent.height + \"px\";\n\t\t\t\n\t\t}\n\t\t\n\t\thandleResize ();\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\n\t\t\t\t\telement.appendChild (canvas);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\telement.appendChild (div);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar events = [ \"mousedown\", \"mousemove\", \"mouseup\", \"wheel\" ];\n\t\t\t\n\t\t\tfor (event in events) {\n\t\t\t\t\n\t\t\t\telement.addEventListener (event, handleMouseEvent, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Disable image drag on Firefox\n\t\t\tBrowser.document.addEventListener (\"dragstart\", function (e) {\n\t\t\t\tif (e.target.nodeName.toLowerCase () == \"img\") {\n\t\t\t\t\te.preventDefault ();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, false);\n\t\t\t\n\t\t\telement.addEventListener (\"touchstart\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchmove\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchend\", handleTouchEvent, true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleMouseEvent (event:MouseEvent):Void {\n\t\t\n\t\tvar x = 0.0;\n\t\tvar y = 0.0;\n\t\t\n\t\tif (event.type != \"wheel\") {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = canvas.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t} else if (div != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = div.getBoundingClientRect ();\n\t\t\t\t\t//x = (event.clientX - rect.left) * (window.backend.div.style.width / rect.width);\n\t\t\t\t\tx = (event.clientX - rect.left);\n\t\t\t\t\t//y = (event.clientY - rect.top) * (window.backend.div.style.height / rect.height);\n\t\t\t\t\ty = (event.clientY - rect.top);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = element.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = event.clientX;\n\t\t\t\ty = event.clientY;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"mousedown\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseDown.dispatch (x, y, event.button);\n\t\t\t\t\n\t\t\t\tcase \"mouseup\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseUp.dispatch (x, y, event.button);\n\t\t\t\t\n\t\t\t\tcase \"mousemove\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseMove.dispatch (x, y, event.button);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tparent.onMouseWheel.dispatch (untyped event.deltaX, untyped event.deltaY);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleResize ():Void {\n\t\t\n\t\tvar stretch = parent.fullscreen || (setWidth == 0 && setHeight == 0);\n\t\t\n\t\tif (element != null && (div == null || (div != null && stretch))) {\n\t\t\t\n\t\t\tif (stretch) {\n\t\t\t\t\n\t\t\t\tif (parent.width != element.clientWidth || parent.height != element.clientHeight) {\n\t\t\t\t\t\n\t\t\t\t\tparent.width = element.clientWidth;\n\t\t\t\t\tparent.height = element.clientHeight;\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcanvas.width = element.clientWidth;\n\t\t\t\t\t\t\tcanvas.height = element.clientHeight;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdiv.style.width = element.clientWidth + \"px\";\n\t\t\t\t\t\tdiv.style.height = element.clientHeight + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar scaleX = element.clientWidth / setWidth;\n\t\t\t\tvar scaleY = element.clientHeight / setHeight;\n\t\t\t\t\n\t\t\t\tvar currentRatio = scaleX / scaleY;\n\t\t\t\tvar targetRatio = Math.min (scaleX, scaleY);\n\t\t\t\t\n\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcanvas.style.width = setWidth * targetRatio + \"px\";\n\t\t\t\t\t\tcanvas.style.height = setHeight * targetRatio + \"px\";\n\t\t\t\t\t\tcanvas.style.marginLeft = ((element.clientWidth - (setWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\tcanvas.style.marginTop = ((element.clientHeight - (setHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = setWidth * targetRatio + \"px\";\n\t\t\t\t\tdiv.style.height = setHeight * targetRatio + \"px\";\n\t\t\t\t\tdiv.style.marginLeft = ((element.clientWidth - (setWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\tdiv.style.marginTop = ((element.clientHeight - (setHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleTouchEvent (event:TouchEvent):Void {\n\t\t\n\t\tevent.preventDefault ();\n\t\t\n\t\tvar touch = event.changedTouches[0];\n\t\tvar id = touch.identifier;\n\t\tvar x = 0.0;\n\t\tvar y = 0.0;\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\tvar rect = canvas.getBoundingClientRect ();\n\t\t\t\tx = (touch.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\ty = (touch.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\n\t\t\t} else if (div != null) {\n\t\t\t\t\n\t\t\t\tvar rect = div.getBoundingClientRect ();\n\t\t\t\t//eventInfo.x = (event.clientX - rect.left) * (window.div.style.width / rect.width);\n\t\t\t\tx = (touch.clientX - rect.left);\n\t\t\t\t//eventInfo.y = (event.clientY - rect.top) * (window.div.style.height / rect.height);\n\t\t\t\ty = (touch.clientY - rect.top);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar rect = element.getBoundingClientRect ();\n\t\t\t\tx = (touch.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\ty = (touch.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tx = touch.clientX;\n\t\t\ty = touch.clientY;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"touchstart\":\n\t\t\t\t\n\t\t\t\tparent.onTouchStart.dispatch (x, y, id);\n\t\t\t\n\t\t\tcase \"touchmove\":\n\t\t\t\t\n\t\t\t\tparent.onTouchMove.dispatch (x, y, id);\n\t\t\t\n\t\t\tcase \"touchend\":\n\t\t\t\t\n\t\t\t\tparent.onTouchEnd.dispatch (x, y, id);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nclass Module {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.graphics.RenderContext;\nimport lime.graphics.Renderer;\nimport lime.ui.Window;\n\n\n/** \n * The Application class forms the foundation for most Lime projects.\n * It is common to extend this class in a main class. It is then possible\n * to override \"on\" functions in the class in order to handle standard events\n * that are relevant.\n */\nclass Application extends Module {\n\t\n\t\n\tpublic static var current (default, null):Application;\n\t\n\tpublic var config (default, null):Config;\n\t\n\t/**\n\t * Update events are dispatched each frame (usually just before rendering)\n\t */\n\tpublic var onUpdate = new Event<Int->Void> ();\n\t\n\tpublic var renderer (get, null):Renderer;\n\tpublic var renderers (default, null):Array<Renderer>;\n\tpublic var window (get, null):Window;\n\tpublic var windows (default, null):Array<Window>;\n\t\n\t@:noCompletion private var backend:ApplicationBackend;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (Application.current == null) {\n\t\t\t\n\t\t\tApplication.current = this;\n\t\t\t\n\t\t}\n\t\t\n\t\trenderers = new Array ();\n\t\twindows = new Array ();\n\t\tbackend = new ApplicationBackend (this);\n\t\t\n\t\tonUpdate.add (update);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Renderer to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\trenderer\tA Renderer object to add\n\t */\n\tpublic function addRenderer (renderer:Renderer):Void {\n\t\t\n\t\trenderer.onRender.add (render);\n\t\trenderer.onRenderContextLost.add (onRenderContextLost);\n\t\trenderer.onRenderContextRestored.add (onRenderContextRestored);\n\t\t\n\t\trenderers.push (renderer);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Window to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\twindow\tA Window object to add\n\t */\n\tpublic function addWindow (window:Window):Void {\n\t\t\n\t\twindows.push (window);\n\t\t\n\t\twindow.onKeyDown.add (onKeyDown);\n\t\twindow.onKeyUp.add (onKeyUp);\n\t\twindow.onMouseDown.add (onMouseDown);\n\t\twindow.onMouseMove.add (onMouseMove);\n\t\twindow.onMouseUp.add (onMouseUp);\n\t\twindow.onMouseWheel.add (onMouseWheel);\n\t\twindow.onTouchStart.add (onTouchStart);\n\t\twindow.onTouchMove.add (onTouchMove);\n\t\twindow.onTouchEnd.add (onTouchEnd);\n\t\twindow.onWindowActivate.add (onWindowActivate);\n\t\twindow.onWindowClose.add (onWindowClose);\n\t\twindow.onWindowDeactivate.add (onWindowDeactivate);\n\t\twindow.onWindowFocusIn.add (onWindowFocusIn);\n\t\twindow.onWindowFocusOut.add (onWindowFocusOut);\n\t\twindow.onWindowMove.add (onWindowMove);\n\t\twindow.onWindowResize.add (onWindowResize);\n\t\t\n\t\twindow.create (this);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Initializes the Application, using the settings defined in\n\t * the config instance. By default, this is called automatically\n\t * when building the project using Lime's command-line tools\n\t * @param\tconfig\tA Config object\n\t */\n\tpublic function create (config:Config):Void {\n\t\t\n\t\tbackend.create (config);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Execute the Application. On native platforms, this method\n\t * blocks until the application is finished running. On other \n\t * platforms, it will return immediately\n\t * @return An exit code, 0 if there was no error\n\t */\n\tpublic function exec ():Int {\n\t\t\n\t\tApplication.current = this;\n\t\t\n\t\treturn backend.exec ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * The init() method is called once before the first render()\n\t * call. This can be used to do initial set-up for the current\n\t * render context\n\t * @param\tcontext The current render context\n\t */\n\tpublic function init (context:RenderContext):Void { }\n\t\n\t\n\t/**\n\t * Called when a key down event is fired\n\t * @param\tkeyCode\tThe code of the key that was pressed\n\t * @param\tmodifier\tThe modifier of the key that was pressed\n\t */\n\tpublic function onKeyDown (keyCode:Int, modifier:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a key up event is fired\n\t * @param\tkeyCode\tThe code of the key that was released\n\t * @param\tmodifier\tThe modifier of the key that was released\n\t */\n\tpublic function onKeyUp (keyCode:Int, modifier:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse down event is fired\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseDown (x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse move event is fired\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseMove (x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse up event is fired\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the button that was released\n\t */\n\tpublic function onMouseUp (x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse wheel event is fired\n\t * @param\tdeltaX\tThe amount of horizontal scrolling (if applicable)\n\t * @param\tdeltaY\tThe amount of vertical scrolling (if applicable)\n\t */\n\tpublic function onMouseWheel (deltaX:Float, deltaY:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is lost\n\t */\n\tpublic function onRenderContextLost ():Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is restored\n\t * @param\tcontext\tThe current render context\n\t */\n\tpublic function onRenderContextRestored (context:RenderContext):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch end event is fired\n\t * @param\tx\tThe current x coordinate of the touch point\n\t * @param\ty\tThe current y coordinate of the touch point\n\t * @param\tid\tThe ID of the touch point\n\t */\n\tpublic function onTouchEnd (x:Float, y:Float, id:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch move event is fired\n\t * @param\tx\tThe current x coordinate of the touch point\n\t * @param\ty\tThe current y coordinate of the touch point\n\t * @param\tid\tThe ID of the touch point\n\t */\n\tpublic function onTouchMove (x:Float, y:Float, id:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch start event is fired\n\t * @param\tx\tThe current x coordinate of the touch point\n\t * @param\ty\tThe current y coordinate of the touch point\n\t * @param\tid\tThe ID of the touch point\n\t */\n\tpublic function onTouchStart (x:Float, y:Float, id:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a window activate event is fired\n\t */\n\tpublic function onWindowActivate ():Void { }\n\t\n\t\n\t/**\n\t * Called when a window close event is fired\n\t */\n\tpublic function onWindowClose ():Void { }\n\t\n\t\n\t/**\n\t * Called when a window deactivate event is fired\n\t */\n\tpublic function onWindowDeactivate ():Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus in event is fired\n\t */\n\tpublic function onWindowFocusIn ():Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus out event is fired\n\t */\n\tpublic function onWindowFocusOut ():Void { }\n\t\n\t\n\t/**\n\t * Called when a window move event is fired\n\t * @param\tx\tThe x position of the window\n\t * @param\ty\tThe y position of the window\n\t */\n\tpublic function onWindowMove (x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a window resize event is fired\n\t * @param\twidth\tThe width of the window\n\t * @param\theight\tThe height of the window\n\t */\n\tpublic function onWindowResize (width:Int, height:Int):Void {}\n\t\n\t\n\t/**\n\t * Removes a Renderer from the Application\n\t * @param\trenderer\tA Renderer object to add\n\t */\n\tpublic function removeRenderer (renderer:Renderer):Void {\n\t\t\n\t\tif (renderer != null && renderers.indexOf (renderer) > -1) {\n\t\t\t\n\t\t\trenderers.remove (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a Window from the Application\n\t * @param\twindow\tA Window object to add\n\t */\n\tpublic function removeWindow (window:Window):Void {\n\t\t\n\t\tif (window != null && windows.indexOf (window) > -1) {\n\t\t\t\n\t\t\twindow.close ();\n\t\t\twindows.remove (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Called when a render event is fired\n\t * @param\tcontext\tThe current render context\n\t */\n\tpublic function render (context:RenderContext):Void { }\n\t\n\t\n\t/**\n\t * Called when an update event is fired\n\t * @param\tdeltaTime\tThe amount of time in milliseconds that has elapsed since the last update\n\t */\n\tpublic function update (deltaTime:Int):Void { }\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_renderer ():Renderer {\n\t\t\n\t\treturn renderers[0];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_window ():Window {\n\t\t\n\t\treturn windows[0];\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef ApplicationBackend = lime._backend.flash.FlashApplication;\n#elseif (js && html5)\n@:noCompletion private typedef ApplicationBackend = lime._backend.html5.HTML5Application;\n#else\n@:noCompletion private typedef ApplicationBackend = lime._backend.native.NativeApplication;\n#end","package lime.app;\n\n\nimport lime.Assets;\n\n#if (js && html5)\nimport js.html.Image;\nimport js.Browser;\nimport lime.net.URLLoader;\nimport lime.net.URLRequest;\n#elseif flash\nimport flash.display.LoaderInfo;\nimport flash.display.Sprite;\nimport flash.events.Event;\nimport flash.events.ProgressEvent;\nimport flash.Lib;\n#end\n\n\nclass Preloader #if flash extends Sprite #end {\n\t\n\t\n\tpublic var complete:Bool;\n\tpublic var onComplete:Dynamic;\n\t\n\t#if (js && html5)\n\tpublic static var images = new Map<String, Image> ();\n\tpublic static var loaders = new Map<String, URLLoader> ();\n\tprivate var loaded = 0;\n\tprivate var total = 0;\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t#if flash\n\t\t\t\n\t\t\tsuper ();\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\t#if flash\n\t\t\t\n\t\t\tLib.current.addChild (this);\n\t\t\t\n\t\t\tLib.current.loaderInfo.addEventListener (Event.COMPLETE, loaderInfo_onComplete);\n\t\t\tLib.current.loaderInfo.addEventListener (Event.INIT, loaderInfo_onInit);\n\t\t\tLib.current.loaderInfo.addEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\t\tLib.current.addEventListener (Event.ENTER_FRAME, current_onEnter);\n\t\t\t\n\t\t#end\n\t\t\n\t\t#if (!flash && !html5)\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function load (urls:Array<String>, types:Array<AssetType>):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar url = null;\n\t\t\t\n\t\t\tfor (i in 0...urls.length) {\n\t\t\t\t\n\t\t\t\turl = urls[i];\n\t\t\t\t\n\t\t\t\tswitch (types[i]) {\n\t\t\t\t\t\n\t\t\t\t\tcase IMAGE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar image = new Image ();\n\t\t\t\t\t\timages.set (url, image);\n\t\t\t\t\t\timage.onload = image_onLoad;\n\t\t\t\t\t\timage.src = url;\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\n\t\t\t\t\tcase BINARY:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar loader = new URLLoader ();\n\t\t\t\t\t\tloader.dataFormat = BINARY;\n\t\t\t\t\t\tloaders.set (url, loader);\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\n\t\t\t\t\tcase TEXT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar loader = new URLLoader ();\n\t\t\t\t\t\tloaders.set (url, loader);\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\n\t\t\t\t\tcase FONT:\n\t\t\t\t\t\t\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\tloadFont (url);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (url in loaders.keys ()) {\n\t\t\t\t\n\t\t\t\tvar loader = loaders.get (url);\n\t\t\t\tloader.onComplete.add (loader_onComplete);\n\t\t\t\tloader.load (new URLRequest (url));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (total == 0) {\n\t\t\t\t\n\t\t\t\tstart ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate function loadFont (font:String):Void {\n\t\t\n\t\tif (untyped (Browser.document).fonts && untyped (Browser.document).fonts.load) {\n\t\t\t\n\t\t\tuntyped (Browser.document).fonts.load (\"1em '\" + font + \"'\").then (function () {\n\t\t\t\t\n\t\t\t\tloaded ++;\n\t\t\t\tupdate (loaded, total);\n\t\t\t\t\n\t\t\t\tif (loaded == total) {\n\t\t\t\t\t\n\t\t\t\t\tstart ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar node = Browser.document.createElement (\"span\");\n\t\t\tnode.innerHTML = \"giItT1WQy@!-/#\";\n\t\t\tvar style = node.style;\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.left = \"-10000px\";\n\t\t\tstyle.top = \"-10000px\";\n\t\t\tstyle.fontSize = \"300px\";\n\t\t\tstyle.fontFamily = \"sans-serif\";\n\t\t\tstyle.fontVariant = \"normal\";\n\t\t\tstyle.fontStyle = \"normal\";\n\t\t\tstyle.fontWeight = \"normal\";\n\t\t\tstyle.letterSpacing = \"0\";\n\t\t\tBrowser.document.body.appendChild (node);\n\t\t\t\n\t\t\tvar width = node.offsetWidth;\n\t\t\tstyle.fontFamily = \"'\" + font + \"', sans-serif\";\n\t\t\t\n\t\t\tvar interval:Null<Int> = null;\n\t\t\tvar found = false;\n\t\t\t\n\t\t\tvar checkFont = function () {\n\t\t\t\t\n\t\t\t\tif (node.offsetWidth != width) {\n\t\t\t\t\t\n\t\t\t\t\t// Test font was still not available yet, try waiting one more interval?\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tloaded ++;\n\t\t\t\t\t\n\t\t\t\t\tif (interval != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tBrowser.window.clearInterval (interval);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.parentNode.removeChild (node);\n\t\t\t\t\tnode = null;\n\t\t\t\t\t\n\t\t\t\t\tupdate (loaded, total);\n\t\t\t\t\t\n\t\t\t\t\tif (loaded == total) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstart ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!checkFont ()) {\n\t\t\t\t\n\t\t\t\tinterval = Browser.window.setInterval (checkFont, 50);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function start ():Void {\n\t\t\n\t\t#if flash\n\t\tif (Lib.current.contains (this)) {\n\t\t\t\n\t\t\tLib.current.removeChild (this);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (onComplete != null) {\n\t\t\t\n\t\t\tonComplete ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function update (loaded:Int, total:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\t#if (js && html5)\n\tprivate function image_onLoad (_):Void {\n\t\t\n\t\tloaded++;\n\t\t\n\t\tupdate (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loader_onComplete (loader:URLLoader):Void {\n\t\t\n\t\tloaded++;\n\t\t\n\t\tupdate (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if flash\n\tprivate function current_onEnter (event:Event):Void {\n\t\t\n\t\tif (complete) {\n\t\t\t\n\t\t\tLib.current.removeEventListener (Event.ENTER_FRAME, current_onEnter);\n\t\t\tLib.current.loaderInfo.removeEventListener (Event.COMPLETE, loaderInfo_onComplete);\n\t\t\tLib.current.loaderInfo.removeEventListener (Event.INIT, loaderInfo_onInit);\n\t\t\tLib.current.loaderInfo.removeEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onComplete (event:flash.events.Event):Void {\n\t\t\n\t\tcomplete = true;\n\t\tupdate (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onInit (event:flash.events.Event):Void {\n\t\t\n\t\tupdate (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onProgress (event:flash.events.ProgressEvent):Void {\n\t\t\n\t\tupdate (Lib.current.loaderInfo.bytesLoaded, Lib.current.loaderInfo.bytesTotal);\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n","package lime.audio;\n\n\nimport lime.audio.openal.AL;\nimport lime.audio.openal.ALC;\nimport lime.audio.openal.ALContext;\nimport lime.audio.openal.ALDevice;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n\nclass AudioManager {\n\t\n\t\n\tpublic static var context:AudioContext;\n\t\n\t\n\tpublic static function init (context:AudioContext = null) {\n\t\t\n\t\tif (AudioManager.context == null) {\n\t\t\t\n\t\t\tif (context == null) {\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tuntyped __js__ (\"window.AudioContext = window.AudioContext || window.webkitAudioContext;\");\n\t\t\t\t\t\tAudioManager.context = WEB (cast untyped __js__ (\"new AudioContext ()\"));\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tAudioManager.context = HTML5 (new HTML5AudioContext ());\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t#elseif flash\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = FLASH (new FlashAudioContext ());\n\t\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = OPENAL (new ALCAudioContext (), new ALAudioContext ());\n\t\t\t\t\t\n\t\t\t\t\tvar device = ALC.openDevice ();\n\t\t\t\t\tvar ctx = ALC.createContext (device);\n\t\t\t\t\tALC.makeContextCurrent (ctx);\n\t\t\t\t\tALC.processContext (ctx);\n\t\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tAudioManager.context = context;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function resume ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\talc.processContext (alc.getCurrentContext ());\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function shutdown ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\tvar currentContext = alc.getCurrentContext ();\n\t\t\t\t\t\n\t\t\t\t\tif (currentContext != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar device = alc.getContextsDevice (currentContext);\n\t\t\t\t\t\talc.makeContextCurrent (null);\n\t\t\t\t\t\talc.destroyContext (currentContext);\n\t\t\t\t\t\talc.closeDevice (device);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function suspend ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\talc.suspendContext (alc.getCurrentContext ());\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.audio;\n\n\n#if (js && html5)\nimport js.html.Audio;\n#end\n\n\nclass HTML5AudioContext {\n\t\n\t\n\tpublic var HAVE_CURRENT_DATA:Int = 2;\n\tpublic var HAVE_ENOUGH_DATA:Int = 4;\n\tpublic var HAVE_FUTURE_DATA:Int = 3;\n\tpublic var HAVE_METADATA:Int = 1;\n\tpublic var HAVE_NOTHING:Int = 0;\n\tpublic var NETWORK_EMPTY:Int = 0;\n\tpublic var NETWORK_IDLE:Int = 1;\n\tpublic var NETWORK_LOADING:Int = 2;\n\tpublic var NETWORK_NO_SOURCE:Int = 3;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function canPlayType (buffer:AudioBuffer, type:String):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.canPlayType (type);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer (urlString:String = null):AudioBuffer {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.src = new Audio ();\n\t\tbuffer.src.src = urlString;\n\t\treturn buffer;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getAudioDecodedByteCount (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.audioDecodedByteCount;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getAutoplay (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.autoplay;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffered (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.buffered;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getController (buffer:AudioBuffer):Dynamic /*MediaController*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.controller;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.currentSrc;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.currentTime;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDefaultPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.defaultPlaybackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDuration (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.duration;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnded (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.ended;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getError (buffer:AudioBuffer):Dynamic /*MediaError*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.error;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getInitialTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.initialTime;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLoop (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.loop;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getMediaGroup (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.mediaGroup;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getMuted (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.muted;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getNetworkState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.networkState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPaused (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.paused;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlayed (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.played;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPreload (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.preload;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getReadyState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.readyState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeekable (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.seekable;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeeking (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.seeking;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.src;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getStartTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getVolume (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.volume;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.load ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.pause ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.play ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setAutoplay (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.autoplay = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setController (buffer:AudioBuffer, value:Dynamic /*MediaController*/):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.controller = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setCurrentTime (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.currentTime = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setDefaultPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.defaultPlaybackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setLoop (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loop = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setMediaGroup (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.mediaGroup = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setMuted (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.muted = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.playbackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPreload (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.preload = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSrc (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.src = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setVolume (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.volume = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics;\n\n\nimport haxe.crypto.BaseCode;\nimport haxe.io.Bytes;\nimport haxe.io.BytesInput;\nimport haxe.io.BytesOutput;\nimport lime.app.Application;\nimport lime.graphics.format.BMP;\nimport lime.graphics.format.JPEG;\nimport lime.graphics.format.PNG;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.utils.ImageDataUtil;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.utils.ByteArray;\nimport lime.utils.UInt8Array;\nimport lime.system.System;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.ImageElement;\nimport js.html.Image in JSImage;\nimport js.Browser;\n#elseif flash\nimport flash.display.BitmapData;\nimport flash.geom.Matrix;\n#end\n\n#if format\nimport format.png.Data;\nimport format.png.Reader;\nimport format.png.Tools;\nimport format.png.Writer;\nimport format.tools.Deflate;\n#if (sys || nodejs)\nimport sys.io.File;\n#end\n#end\n\n@:allow(lime.graphics.util.ImageCanvasUtil)\n@:allow(lime.graphics.util.ImageDataUtil)\n@:access(lime.app.Application)\n@:access(lime.math.ColorMatrix)\n@:access(lime.math.Rectangle)\n@:access(lime.math.Vector2)\n\n\nclass Image {\n\t\n\t\n\tprivate static var __base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tprivate static var __base64Encoder:BaseCode;\n\t\n\tpublic var buffer:ImageBuffer;\n\tpublic var data (get, set):UInt8Array;\n\tpublic var dirty:Bool;\n\tpublic var height:Int;\n\tpublic var offsetX:Int;\n\tpublic var offsetY:Int;\n\tpublic var powerOfTwo (get, set):Bool;\n\tpublic var premultiplied (get, set):Bool;\n\tpublic var rect (get, null):Rectangle;\n\tpublic var src (get, set):Dynamic;\n\tpublic var transparent (get, set):Bool;\n\tpublic var type:ImageType;\n\tpublic var width:Int;\n\t\n\t\n\tpublic function new (buffer:ImageBuffer = null, offsetX:Int = 0, offsetY:Int = 0, width:Int = 0, height:Int = 0, color:Null<Int> = null, type:ImageType = null) {\n\t\t\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\tif (Application.current != null && Application.current.renderer != null) {\n\t\t\t\t\n\t\t\t\tthis.type = switch (Application.current.renderer.context) {\n\t\t\t\t\t\n\t\t\t\t\tcase DOM (_), CANVAS (_): CANVAS;\n\t\t\t\t\tcase FLASH (_): FLASH;\n\t\t\t\t\tdefault: DATA;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.type = DATA;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.type = type;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (buffer == null) {\n\t\t\t\n\t\t\tif (width > 0 && height > 0) {\n\t\t\t\t\n\t\t\t\tswitch (this.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CANVAS:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tImageCanvasUtil.createCanvas (this, width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DATA:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (new UInt8Array (width * height * 4), width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase FLASH:\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tthis.buffer.src = new BitmapData (width, height, true, color);\n\t\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__fromImageBuffer (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Image {\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.sync (this);\n\t\t#end\n\t\t\n\t\tvar image = new Image (buffer.clone (), offsetX, offsetY, width, height, null, type);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic function colorTransform (rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.colorTransform (rect.__toFlashRectangle (), colorMatrix.__toFlashColorTransform ());\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyChannel (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tsourceRect = __clipRect (sourceRect);\n\t\tif (buffer == null || sourceRect == null) return;\n\t\t\n\t\tif (destChannel == ImageChannel.ALPHA && !transparent) return;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar srcChannel = switch (sourceChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dstChannel = switch (destChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyChannel (sourceImage.buffer.src, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), srcChannel, dstChannel);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPixels (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (buffer == null || sourceImage == null) return;\n\t\t\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tif (alphaImage != null && alphaPoint != null) {\n\t\t\t\t\t\n\t\t\t\t\talphaPoint.offset (alphaImage.offsetX, alphaImage.offsetY);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyPixels (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), alphaImage != null ? alphaImage.buffer.src : null, alphaPoint != null ? alphaPoint.__toFlashPoint () : null, mergeAlpha);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function encode (format:String = \"png\", quality:Int = 90):ByteArray {\n\t\t\n\t\t#if (!html5 && !flash)\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase \"png\":\n\t\t\t\t\n\t\t\t\treturn PNG.encode (this);\n\t\t\t\n\t\t\tcase \"jpg\", \"jpeg\":\n\t\t\t\t\n\t\t\t\treturn JPEG.encode (this, quality);\n\t\t\t\n\t\t\tcase \"bmp\":\n\t\t\t\t\n\t\t\t\treturn BMP.encode (this);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function fillRect (rect:Rectangle, color:Int):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.fillRect (this, rect, color);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.fillRect (this, rect, color);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.fillRect (rect.__toFlashRectangle (), color);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function floodFill (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (buffer == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.floodFill (this, x, y, color);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.floodFill (this, x, y, color);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.floodFill (x + offsetX, y + offsetY, color);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBase64 (base64:String, type:String, onload:Image -> Void):Image {\n\t\t\n\t\tvar image = new Image ();\n\t\timage.__fromBase64 (base64, type, onload);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBitmapData (bitmapData:#if flash BitmapData #else Dynamic #end):Image {\n\t\t\n\t\tvar buffer = new ImageBuffer (null, bitmapData.width, bitmapData.height);\n\t\tbuffer.__srcBitmapData = bitmapData;\n\t\treturn new Image (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:ByteArray, onload:Image -> Void = null):Image {\n\t\t\n\t\tvar image = new Image ();\n\t\timage.__fromBytes (bytes, onload);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromCanvas (canvas:#if (js && html5) CanvasElement #else Dynamic #end):Image {\n\t\t\n\t\tvar buffer = new ImageBuffer (null, canvas.width, canvas.height);\n\t\tbuffer.src = canvas;\n\t\treturn new Image (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String, onload:Image -> Void = null, onerror:Void -> Void = null):Image {\n\t\t\n\t\tvar image = new Image ();\n\t\timage.__fromFile (path, onload, onerror);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromImageElement (image:#if (js && html5) ImageElement #else Dynamic #end):Image {\n\t\t\n\t\tvar buffer = new ImageBuffer (null, image.width, image.height);\n\t\tbuffer.src = image;\n\t\treturn new Image (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel (x:Int, y:Int):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel (this, x, y);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel (this, x, y);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\treturn buffer.__srcBitmapData.getPixel (x + offsetX, y + offsetY);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel32 (x:Int, y:Int):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel32 (this, x, y);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel32 (this, x, y);\n\t\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\treturn buffer.__srcBitmapData.getPixel32 (x + offsetX, y + offsetY);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixels (rect:Rectangle):ByteArray {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixels (this, rect);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixels (this, rect);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\treturn buffer.__srcBitmapData.getPixels (rect.__toFlashRectangle ());\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function merge (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tif (buffer == null || sourceImage == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.merge (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\tImageDataUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar matrix = new Matrix ();\n\t\t\t\tmatrix.scale (newWidth / buffer.__srcBitmapData.width, newHeight / buffer.__srcBitmapData.height);\n\t\t\t\tvar data = new BitmapData (newWidth, newHeight, true, 0x00FFFFFF);\n\t\t\t\tdata.draw (buffer.__srcBitmapData, matrix, null, null, null, true);\n\t\t\t\tbuffer.__srcBitmapData = data;\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t\toffsetX = 0;\n\t\toffsetY = 0;\n\t\twidth = newWidth;\n\t\theight = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel (this, x, y, color);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel (this, x, y, color);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel (x + offsetX, y + offsetX, color);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel32 (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel32 (this, x, y, color);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel32 (this, x, y, color);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel32 (x + offsetX, y + offsetY, color);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixels (rect:Rectangle, byteArray:ByteArray):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixels (this, rect, byteArray);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixels (this, rect, byteArray);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.setPixels (rect.__toFlashRectangle (), byteArray);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __base64Encode (bytes:ByteArray):String {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar extension = switch (bytes.length % 3) {\n\t\t\t\t\n\t\t\t\tcase 1: \"==\";\n\t\t\t\tcase 2: \"=\";\n\t\t\t\tdefault: \"\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__base64Encoder == null) {\n\t\t\t\t\n\t\t\t\t__base64Encoder = new BaseCode (Bytes.ofString (__base64Chars));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn __base64Encoder.encodeBytes (Bytes.ofData (cast bytes.byteView)).toString () + extension;\n\t\t\t\n\t\t#else\n\t\t\n\t\t\treturn \"\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __clipRect (r:Rectangle):Rectangle {\n\t\t\n\t\tif (r == null) return null;\n\t\t\n\t\tif (r.x < 0) {\n\t\t\t\n\t\t\tr.width -= -r.x;\n\t\t\tr.x = 0;\n\t\t\t\n\t\t\tif (r.x + r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y < 0) {\n\t\t\t\n\t\t\tr.height -= -r.y;\n\t\t\tr.y = 0;\n\t\t\t\n\t\t\tif (r.y + r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.x + r.width >= width) {\n\t\t\t\n\t\t\tr.width -= r.x + r.width - width;\n\t\t\t\n\t\t\tif (r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y + r.height >= height) {\n\t\t\t\n\t\t\tr.height -= r.y + r.height - height;\n\t\t\t\n\t\t\tif (r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBase64 (base64:String, type:String, onload:Image -> Void = null):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar image = new JSImage ();\n\t\t\n\t\tvar image_onLoaded = function (event) {\n\t\t\t\n\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\n\t\t\toffsetX = 0;\n\t\t\toffsetY = 0;\n\t\t\twidth = buffer.width;\n\t\t\theight = buffer.height;\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.addEventListener (\"load\", image_onLoaded, false);\n\t\timage.src = \"data:\" + type + \";base64,\" + base64;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBytes (bytes:ByteArray, onload:Image -> Void):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar type = \"\";\n\t\t\t\n\t\t\tif (__isPNG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/png\";\n\t\t\t\t\n\t\t\t} else if (__isJPG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/jpeg\";\n\t\t\t\t\n\t\t\t} else if (__isGIF (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/gif\";\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthrow \"Image tried to read a PNG/JPG ByteArray, but found an invalid header.\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__fromBase64 (__base64Encode (bytes), type, onload);\n\t\t\t\n\t\t#elseif (cpp || neko || nodejs)\n\t\t\t\n\t\t\tvar data = lime_image_load (bytes);\n\t\t\t\n\t\t\tif (data != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (new ImageBuffer (new UInt8Array (data.data), data.width, data.height, data.bpp));\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tthrow \"ImageBuffer.loadFromBytes not supported on this target\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromFile (path:String, onload:Image -> Void, onerror:Void -> Void):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar image = new JSImage ();\n\t\t\t\n\t\t\timage.onload = function (_) {\n\t\t\t\t\n\t\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\t\tbuffer.__srcImage = cast image;\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.onerror = function (_) {\n\t\t\t\t\n\t\t\t\tif (onerror != null) {\n\t\t\t\t\t\n\t\t\t\t\tonerror ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.src = path;\n\t\t\t\n\t\t\t// Another IE9 bug: loading 20+ images fails unless this line is added.\n\t\t\t// (issue #1019768)\n\t\t\tif (image.complete) { }\n\t\t\t\n\t\t#elseif (cpp || neko || nodejs || java)\n\t\t\t\n\t\t\tvar buffer = null;\n\t\t\t\t\n\t\t\t#if (sys && (!disable_cffi || !format) && !java)\n\t\t\t\t\n\t\t\t\tvar data = lime_image_load (path);\n\t\t\t\tif (data != null) {\n\t\t\t\t\tvar ba:ByteArray = cast(data.data, ByteArray);\n\t\t\t\t\t#if nodejs\n\t\t\t\t\tvar u8a = ba.byteView;\n\t\t\t\t\t#else\n\t\t\t\t\tvar u8a = new UInt8Array(ba);\n\t\t\t\t\t#end\n\t\t\t\t\tbuffer = new ImageBuffer (u8a, data.width, data.height, data.bpp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t#elseif format\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tvar bytes = File.getBytes (path);\n\t\t\t\t\tvar input = new BytesInput (bytes, 0, bytes.length);\n\t\t\t\t\tvar png = new Reader (input).read ();\n\t\t\t\t\tvar data = Tools.extract32 (png);\n\t\t\t\t\tvar header = Tools.getHeader (png);\n\t\t\t\t\t\n\t\t\t\t\tvar data = new UInt8Array (ByteArray.fromBytes (Bytes.ofData (data.getData ())));\n\t\t\t\t\tvar length = header.width * header.height;\n\t\t\t\t\tvar b, g, r, a;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar b = data[i * 4];\n\t\t\t\t\t\tvar g = data[i * 4 + 1];\n\t\t\t\t\t\tvar r = data[i * 4 + 2];\n\t\t\t\t\t\tvar a = data[i * 4 + 3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata[i * 4] = r;\n\t\t\t\t\t\tdata[i * 4 + 1] = g;\n\t\t\t\t\t\tdata[i * 4 + 2] = b;\n\t\t\t\t\t\tdata[i * 4 + 3] = a;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer = new ImageBuffer (data, header.width, header.height);\n\t\t\t\t\t\n\t\t\t\t} catch (e:Dynamic) {}\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (buffer);\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tthrow \"ImageBuffer.loadFromFile not supported on this target\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromImageBuffer (buffer:ImageBuffer):Void {\n\t\t\n\t\tthis.buffer = buffer;\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tif (width == 0) {\n\t\t\t\t\n\t\t\t\tthis.width = buffer.width;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (height == 0) {\n\t\t\t\t\n\t\t\t\tthis.height = buffer.height;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isJPG (bytes:ByteArray) {\n\t\t\n\t\tbytes.position = 0;\n\t\treturn bytes.readUnsignedByte () == 0xFF && bytes.readUnsignedByte () == 0xD8;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isPNG (bytes:ByteArray) {\n\t\t\n\t\tbytes.position = 0;\n\t\treturn (bytes.readUnsignedByte () == 0x89 && bytes.readUnsignedByte () == 0x50 && bytes.readUnsignedByte () == 0x4E && bytes.readUnsignedByte () == 0x47 && bytes.readUnsignedByte () == 0x0D && bytes.readUnsignedByte () == 0x0A && bytes.readUnsignedByte () == 0x1A && bytes.readUnsignedByte () == 0x0A);\n\t\t\n\t}\n\t\n\tprivate static function __isGIF (bytes:ByteArray) {\n\t\t\n\t\tbytes.position = 0;\n\t\t\n\t\tif (bytes.readUnsignedByte () == 0x47 && bytes.readUnsignedByte () == 0x49 && bytes.readUnsignedByte () == 0x46 && bytes.readUnsignedByte () == 0x38) {\n\t\t\t\n\t\t\tvar b = bytes.readUnsignedByte ();\n\t\t\treturn ((b == 0x37 || b == 0x39) && bytes.readUnsignedByte () == 0x61);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_data ():UInt8Array {\n\t\t\n\t\tif (buffer.data == null && buffer.width > 0 && buffer.height > 0) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.createImageData (this);\n\t\t\t\t\n\t\t\t#elseif flash\n\t\t\t\t\n\t\t\t\tvar pixels = buffer.__srcBitmapData.getPixels (buffer.__srcBitmapData.rect);\n\t\t\t\tbuffer.data = new UInt8Array (pixels);\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer.data;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_data (value:UInt8Array):UInt8Array {\n\t\t\n\t\treturn buffer.data = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_powerOfTwo ():Bool {\n\t\t\n\t\treturn ((buffer.width != 0) && ((buffer.width & (~buffer.width + 1)) == buffer.width)) && ((buffer.height != 0) && ((buffer.height & (~buffer.height + 1)) == buffer.height));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_powerOfTwo (value:Bool):Bool {\n\t\t\n\t\tif (value != powerOfTwo) {\n\t\t\t\n\t\t\tvar newWidth = 1;\n\t\t\tvar newHeight = 1;\n\t\t\t\n\t\t\twhile (newWidth < buffer.width) {\n\t\t\t\t\n\t\t\t\tnewWidth <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\twhile (newHeight < buffer.height) {\n\t\t\t\t\n\t\t\t\tnewHeight <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CANVAS:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.resizeBuffer (this, newWidth, newHeight);\n\t\t\t\t\n\t\t\t\tcase FLASH:\n\t\t\t\t\t\n\t\t\t\t\t#if flash\n\t\t\t\t\tvar bitmapData = new BitmapData (newWidth, newHeight, true, 0x000000);\n\t\t\t\t\tbitmapData.draw (buffer.src, null, null, null, true);\n\t\t\t\t\t\n\t\t\t\t\tbuffer.src = bitmapData;\n\t\t\t\t\tbuffer.width = newWidth;\n\t\t\t\t\tbuffer.height = newHeight;\n\t\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_premultiplied ():Bool {\n\t\t\n\t\treturn buffer.premultiplied;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_premultiplied (value:Bool):Bool {\n\t\t\n\t\tif (value && !buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.multiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (!value && buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.unmultiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function get_rect ():Rectangle {\n\t\t\n\t\treturn new Rectangle (0, 0, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function get_src ():Dynamic {\n\t\t\n\t\treturn buffer.src;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\treturn buffer.src = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_transparent ():Bool {\n\t\t\n\t\treturn buffer.transparent;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_transparent (value:Bool):Bool {\n\t\t\n\t\t// TODO, modify data to set transparency\n\t\t\n\t\treturn buffer.transparent = value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (cpp || neko || nodejs)\n\tprivate static var lime_image_encode:ImageBuffer -> Int -> Int -> ByteArray = System.load (\"lime\", \"lime_image_encode\", 3);\n\tprivate static var lime_image_load:Dynamic = System.load (\"lime\", \"lime_image_load\", 1);\n\t#end\n\t\n\t\n}\n\n\nenum ImageChannel {\n\t\n\tRED;\n\tGREEN;\n\tBLUE;\n\tALPHA;\n\t\n}\n","package lime.graphics;\n\n\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.Image in HTMLImage;\nimport js.html.ImageData;\n#elseif flash\nimport flash.display.BitmapData;\n#end\n\n@:allow(lime.graphics.Image)\n\n\nclass ImageBuffer {\n\t\n\t\n\tpublic var bitsPerPixel:Int;\n\tpublic var data:UInt8Array;\n\tpublic var height:Int;\n\tpublic var premultiplied:Bool;\n\tpublic var src (get, set):Dynamic;\n\tpublic var transparent:Bool;\n\tpublic var width:Int;\n\t\n\t@:noCompletion private var __srcBitmapData:#if flash BitmapData #else Dynamic #end;\n\t@:noCompletion private var __srcCanvas:#if (js && html5) CanvasElement #else Dynamic #end;\n\t@:noCompletion private var __srcContext:#if (js && html5) CanvasRenderingContext2D #else Dynamic #end;\n\t@:noCompletion private var __srcCustom:Dynamic;\n\t@:noCompletion private var __srcImage:#if (js && html5) HTMLImage #else Dynamic #end;\n\t@:noCompletion private var __srcImageData:#if (js && html5) ImageData #else Dynamic #end;\n\t\n\t\n\tpublic function new (data:UInt8Array = null, width:Int = 0, height:Int = 0, bitsPerPixel:Int = 4) {\n\t\t\n\t\tthis.data = data;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.bitsPerPixel = bitsPerPixel;\n\t\ttransparent = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():ImageBuffer {\n\t\t\n\t\tvar buffer = new ImageBuffer (data, width, height, bitsPerPixel);\n\t\tbuffer.src = src;\n\t\tbuffer.premultiplied = premultiplied;\n\t\tbuffer.transparent = transparent;\n\t\treturn buffer;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (__srcImage != null) return __srcImage;\n\t\t\treturn __srcCanvas;\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\treturn __srcBitmapData;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\treturn __srcCustom;\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (Std.is (value, HTMLImage)) {\n\t\t\t\t\n\t\t\t\t__srcImage = cast value;\n\t\t\t\t\n\t\t\t} else if (Std.is (value, CanvasElement)) {\n\t\t\t\t\n\t\t\t\t__srcCanvas = cast value;\n\t\t\t\t__srcContext = cast __srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\t__srcBitmapData = cast value;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\t__srcCustom = value;\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics;\n\n\nimport lime.app.Event;\nimport lime.ui.Window;\n\n\nclass Renderer {\n\t\n\t\n\tpublic var context:RenderContext;\n\tpublic var onRenderContextLost = new Event<Void->Void> ();\n\tpublic var onRenderContextRestored = new Event<RenderContext->Void> ();\n\tpublic var onRender = new Event<RenderContext->Void> ();\n\tpublic var window:Window;\n\t\n\t@:noCompletion private var backend:RendererBackend;\n\t\n\t\n\tpublic function new (window:Window) {\n\t\t\n\t\tthis.window = window;\n\t\t\n\t\tbackend = new RendererBackend (this);\n\t\t\n\t\tthis.window.currentRenderer = this;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tbackend.create ();\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\tbackend.flip ();\n\t\t\n\t}\n\t\n\t\n\tprivate function render ():Void {\n\t\t\n\t\tbackend.render ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef RendererBackend = lime._backend.flash.FlashRenderer;\n#elseif (js && html5)\n@:noCompletion private typedef RendererBackend = lime._backend.html5.HTML5Renderer;\n#else\n@:noCompletion private typedef RendererBackend = lime._backend.native.NativeRenderer;\n#end","package lime.graphics.utils;\n\n\nimport haxe.format.JsonParser;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.utils.ByteArray;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n\n\nclass ImageCanvasUtil {\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.colorTransform (image, rect, colorMatrix);\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToCanvas (image:Image):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcImage != null) {\n\t\t\t\n\t\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\t\n\t\t\t\tcreateCanvas (image, buffer.__srcImage.width, buffer.__srcImage.height);\n\t\t\t\tbuffer.__srcContext.drawImage (buffer.__srcImage, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.__srcImage = null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToData (image:Image):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (image.buffer.data == null) {\n\t\t\t\n\t\t\tconvertToCanvas (image);\n\t\t\tcreateImageData (image);\n\t\t\t\n\t\t\timage.buffer.__srcCanvas = null;\n\t\t\timage.buffer.__srcContext = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tconvertToCanvas (sourceImage);\n\t\tcreateImageData (sourceImage);\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.copyChannel (image, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (alphaImage != null && alphaImage.transparent) {\n\t\t\t\n\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\n\t\t\t// TODO: use faster method\n\t\t\t\n\t\t\tvar tempData = image.clone ();\n\t\t\ttempData.copyChannel (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, sourceRect.width, sourceRect.height), new Vector2 (sourceRect.x, sourceRect.y), ImageChannel.ALPHA, ImageChannel.ALPHA);\n\t\t\tsourceImage = tempData;\n\t\t\t\n\t\t}\n\t\t\n\t\tsync (image);\n\t\t\n\t\tif (!mergeAlpha) {\n\t\t\t\n\t\t\tif (image.transparent && sourceImage.transparent) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcContext.clearRect (destPoint.x + image.offsetX, destPoint.y + image.offsetY, sourceRect.width + image.offsetX, sourceRect.height + image.offsetY);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tsync (sourceImage);\n\t\t\n\t\tif (sourceImage.buffer.src != null) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.drawImage (sourceImage.buffer.src, Std.int (sourceRect.x + sourceImage.offsetX), Std.int (sourceRect.y + sourceImage.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height), Std.int (destPoint.x + image.offsetX), Std.int (destPoint.y + image.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function createCanvas (image:Image, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcCanvas.width = width;\n\t\t\tbuffer.__srcCanvas.height = height;\n\t\t\t\n\t\t\tif (!image.transparent) {\n\t\t\t\t\n\t\t\t\tif (!image.transparent) buffer.__srcCanvas.setAttribute (\"moz-opaque\", \"true\");\n\t\t\t\tbuffer.__srcContext = untyped __js__ ('buffer.__srcCanvas.getContext (\"2d\", { alpha: false })');\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcContext = buffer.__srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\tuntyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\tbuffer.__srcContext.imageSmoothingEnabled = false;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createImageData (image:Image):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.data == null) {\n\t\t\t\n\t\t\tbuffer.__srcImageData = buffer.__srcContext.getImageData (0, 0, buffer.width, buffer.height);\n\t\t\tbuffer.data = new UInt8Array (buffer.__srcImageData.data.buffer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tsync (image);\n\t\t\n\t\tif (rect.x == 0 && rect.y == 0 && rect.width == image.width && rect.height == image.height) {\n\t\t\t\n\t\t\tif (image.transparent && ((color & 0xFF000000) == 0)) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcCanvas.width = image.buffer.width;\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar a = (image.transparent) ? ((color & 0xFF000000) >>> 24) : 0xFF;\n\t\tvar r = (color & 0x00FF0000) >>> 16;\n\t\tvar g = (color & 0x0000FF00) >>> 8;\n\t\tvar b = (color & 0x000000FF);\n\t\t\n\t\timage.buffer.__srcContext.fillStyle = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + (a / 255) + ')';\n\t\timage.buffer.__srcContext.fillRect (rect.x + image.offsetX, rect.y + image.offsetY, rect.width + image.offsetX, rect.height + image.offsetY);\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.floodFill (image, x, y, color);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int):Int {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel (image, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int):Int {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel32 (image, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle):ByteArray {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixels (image, rect);\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tconvertToCanvas (sourceImage);\n\t\tcreateImageData (sourceImage);\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.merge (image, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (buffer.src, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar sourceCanvas = buffer.__srcCanvas;\n\t\t\tbuffer.__srcCanvas = null;\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (sourceCanvas, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixel (image, x, y, color);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixel32 (image, x, y, color);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, byteArray:ByteArray):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\tcreateImageData (image);\n\t\t\n\t\tImageDataUtil.setPixels (image, rect, byteArray);\n\t\t\n\t}\n\t\n\t\n\tpublic static function sync (image:Image):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (image.dirty && image.type != DATA) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.putImageData (image.buffer.__srcImageData, 0, 0);\n\t\t\timage.buffer.data = null;\n\t\t\timage.dirty = false;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.utils;\n\n\nimport haxe.ds.Vector;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.utils.ByteArray;\nimport lime.utils.UInt8Array;\n\n\nclass ImageDataUtil {\n\t\n\t\n\tprivate static var __alpha16:Vector<Int>;\n\tprivate static var __clamp:Vector<Int>;\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t__alpha16 = new Vector<Int> (256);\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\t__alpha16[i] = Std.int (i * (1 << 16) / 255);\n\t\t\t\n\t\t}\n\t\t\n\t\t__clamp = new Vector<Int> (0xFF + 0xFF);\n\t\t\n\t\tfor (i in 0...0xFF) {\n\t\t\t\n\t\t\t__clamp[i] = i;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0xFF...(0xFF + 0xFF + 1)) {\n\t\t\t\n\t\t\t__clamp[i] = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar stride = image.buffer.width * 4;\n\t\tvar offset:Int;\n\t\t\n\t\tvar rowStart = Std.int (rect.top + image.offsetY);\n\t\tvar rowEnd = Std.int (rect.bottom + image.offsetY);\n\t\tvar columnStart = Std.int (rect.left + image.offsetX);\n\t\tvar columnEnd = Std.int (rect.right + image.offsetX);\n\t\t\n\t\tvar r, g, b, a, ex = 0;\n\t\t\n\t\tfor (row in rowStart...rowEnd) {\n\t\t\t\n\t\t\tfor (column in columnStart...columnEnd) {\n\t\t\t\t\n\t\t\t\toffset = (row * stride) + (column * 4);\n\t\t\t\t\n\t\t\t\ta = Std.int ((data[offset + 3] * colorMatrix.alphaMultiplier) + colorMatrix.alphaOffset);\n\t\t\t\tex = a > 0xFF ? a - 0xFF : 0;\n\t\t\t\tb = Std.int ((data[offset + 2] * colorMatrix.blueMultiplier) + colorMatrix.blueOffset + ex);\n\t\t\t\tex = b > 0xFF ? b - 0xFF : 0;\n\t\t\t\tg = Std.int ((data[offset + 1] * colorMatrix.greenMultiplier) + colorMatrix.greenOffset + ex);\n\t\t\t\tex = g > 0xFF ? g - 0xFF : 0;\n\t\t\t\tr = Std.int ((data[offset] * colorMatrix.redMultiplier) + colorMatrix.redOffset + ex);\n\t\t\t\t\n\t\t\t\tdata[offset] = r > 0xFF ? 0xFF : r;\n\t\t\t\tdata[offset + 1] = g > 0xFF ? 0xFF : g;\n\t\t\t\tdata[offset + 2] = b > 0xFF ? 0xFF : b;\n\t\t\t\tdata[offset + 3] = a > 0xFF ? 0xFF : a;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tvar destIdx = switch (destChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcIdx = switch (sourceChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcStride = Std.int (sourceImage.buffer.width * 4);\n\t\tvar srcPosition = Std.int (((sourceRect.x + sourceImage.offsetX) * 4) + (srcStride * (sourceRect.y + sourceImage.offsetY)) + srcIdx);\n\t\tvar srcRowOffset = srcStride - Std.int (4 * (sourceRect.width + sourceImage.offsetX));\n\t\tvar srcRowEnd = Std.int (4 * (sourceRect.x + sourceImage.offsetX + sourceRect.width));\n\t\tvar srcData = sourceImage.buffer.data;\n\t\t\n\t\tvar destStride = Std.int (image.buffer.width * 4);\n\t\tvar destPosition = Std.int (((destPoint.x + image.offsetX) * 4) + (destStride * (destPoint.y + image.offsetY)) + destIdx);\n\t\tvar destRowOffset = destStride - Std.int (4 * (sourceRect.width + image.offsetX));\n\t\tvar destRowEnd = Std.int (4 * (destPoint.x + image.offsetX + sourceRect.width));\n\t\tvar destData = image.buffer.data;\n\t\t\n\t\tvar length = Std.int (sourceRect.width * sourceRect.height);\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tdestData[destPosition] = srcData[srcPosition];\n\t\t\t\n\t\t\tsrcPosition += 4;\n\t\t\tdestPosition += 4;\n\t\t\t\n\t\t\tif ((srcPosition % srcStride) > srcRowEnd) {\n\t\t\t\t\n\t\t\t\tsrcPosition += srcRowOffset;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif ((destPosition % destStride) > destRowEnd) {\n\t\t\t\t\n\t\t\t\tdestPosition += destRowOffset;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (alphaImage != null && alphaImage.transparent) {\n\t\t\t\n\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\n\t\t\t// TODO: use faster method\n\t\t\t\n\t\t\tvar tempData = image.clone ();\n\t\t\ttempData.copyChannel (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, sourceRect.width, sourceRect.height), new Vector2 (sourceRect.x, sourceRect.y), ImageChannel.ALPHA, ImageChannel.ALPHA);\n\t\t\tsourceImage = tempData;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar rowOffset = Std.int (destPoint.y + image.offsetY - sourceRect.y - sourceImage.offsetY);\n\t\tvar columnOffset = Std.int (destPoint.x + image.offsetX - sourceRect.x - sourceImage.offsetY);\n\t\t\n\t\tvar sourceData = sourceImage.buffer.data;\n\t\tvar sourceStride = sourceImage.buffer.width * 4;\n\t\tvar sourceOffset:Int = 0;\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar stride = image.buffer.width * 4;\n\t\tvar offset:Int = 0;\n\t\t\n\t\tif (!mergeAlpha || !sourceImage.transparent) {\n\t\t\t\n\t\t\tfor (row in Std.int (sourceRect.top + sourceImage.offsetY)...Std.int (sourceRect.bottom + sourceImage.offsetY)) {\n\t\t\t\t\n\t\t\t\tfor (column in Std.int (sourceRect.left + sourceImage.offsetX)...Std.int (sourceRect.right + sourceImage.offsetX)) {\n\t\t\t\t\t\n\t\t\t\t\tsourceOffset = (row * sourceStride) + (column * 4);\n\t\t\t\t\toffset = ((row + rowOffset) * stride) + ((column + columnOffset) * 4);\n\t\t\t\t\t\n\t\t\t\t\tdata[offset] = sourceData[sourceOffset];\n\t\t\t\t\tdata[offset + 1] = sourceData[sourceOffset + 1];\n\t\t\t\t\tdata[offset + 2] = sourceData[sourceOffset + 2];\n\t\t\t\t\tdata[offset + 3] = sourceData[sourceOffset + 3];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar sourceAlpha:Float;\n\t\t\tvar oneMinusSourceAlpha:Float;\n\t\t\t\n\t\t\tfor (row in Std.int (sourceRect.top + sourceImage.offsetY)...Std.int (sourceRect.bottom + sourceImage.offsetY)) {\n\t\t\t\t\n\t\t\t\tfor (column in Std.int (sourceRect.left + sourceImage.offsetX)...Std.int (sourceRect.right + sourceImage.offsetX)) {\n\t\t\t\t\t\n\t\t\t\t\tsourceOffset = (row * sourceStride) + (column * 4);\n\t\t\t\t\toffset = ((row + rowOffset) * stride) + ((column + columnOffset) * 4);\n\t\t\t\t\t\n\t\t\t\t\tsourceAlpha = sourceData[sourceOffset + 3] / 255;\n\t\t\t\t\toneMinusSourceAlpha = (1 - sourceAlpha);\n\t\t\t\t\t\n\t\t\t\t\tdata[offset] = __clamp[Std.int (sourceData[sourceOffset] + (data[offset] * oneMinusSourceAlpha))];\n\t\t\t\t\tdata[offset + 1] = __clamp[Std.int (sourceData[sourceOffset + 1] + (data[offset + 1] * oneMinusSourceAlpha))];\n\t\t\t\t\tdata[offset + 2] = __clamp[Std.int (sourceData[sourceOffset + 2] + (data[offset + 2] * oneMinusSourceAlpha))];\n\t\t\t\t\tdata[offset + 3] = __clamp[Std.int (sourceData[sourceOffset + 3] + (data[offset + 3] * oneMinusSourceAlpha))];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int):Void {\n\t\t\n\t\tvar a = (image.transparent) ? ((color & 0xFF000000) >>> 24) : 0xFF;\n\t\tvar r = (color & 0x00FF0000) >>> 16;\n\t\tvar g = (color & 0x0000FF00) >>> 8;\n\t\tvar b = (color & 0x000000FF);\n\t\t\n\t\tvar rgba = (r | (g << 8) | (b << 16) | (a << 24));\n\t\tvar data = image.buffer.data;\n\t\t\n\t\tif (rect.width == image.buffer.width && rect.height == image.buffer.height && rect.x == 0 && rect.y == 0 && image.offsetX == 0 && image.offsetY == 0) {\n\t\t\t\n\t\t\tvar length = image.buffer.width * image.buffer.height;\n\t\t\t\n\t\t\tvar j = 0;\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tj = i * 4;\n\t\t\t\t\n\t\t\t\t#if js\n\t\t\t\tdata[j + 0] = r;\n\t\t\t\tdata[j + 1] = g;\n\t\t\t\tdata[j + 2] = b;\n\t\t\t\tdata[j + 3] = a;\n\t\t\t\t#else\n\t\t\t\tdata.setUInt32 (j, rgba);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar stride = image.buffer.width * 4;\n\t\t\tvar offset:Int;\n\t\t\t\n\t\t\tvar rowStart = Std.int (rect.y + image.offsetY);\n\t\t\tvar rowEnd = Std.int (rect.bottom + image.offsetY);\n\t\t\tvar columnStart = Std.int (rect.x + image.offsetX);\n\t\t\tvar columnEnd = Std.int (rect.right + image.offsetX);\n\t\t\t\n\t\t\tfor (row in rowStart...rowEnd) {\n\t\t\t\t\n\t\t\t\tfor (column in columnStart...columnEnd) {\n\t\t\t\t\t\n\t\t\t\t\toffset = (row * stride) + (column * 4);\n\t\t\t\t\t\n\t\t\t\t\t#if js\n\t\t\t\t\tdata[offset] = r;\n\t\t\t\t\tdata[offset + 1] = g;\n\t\t\t\t\tdata[offset + 2] = b;\n\t\t\t\t\tdata[offset + 3] = a;\n\t\t\t\t\t#else\n\t\t\t\t\tdata.setUInt32 (offset, rgba);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = (((y + image.offsetY) * (image.buffer.width * 4)) + ((x + image.offsetX) * 4));\n\t\tvar hitColorR = data[offset + 0];\n\t\tvar hitColorG = data[offset + 1];\n\t\tvar hitColorB = data[offset + 2];\n\t\tvar hitColorA = image.transparent ? data[offset + 3] : 0xFF;\n\t\t\n\t\tvar r = (color & 0xFF0000) >>> 16;\n\t\tvar g = (color & 0x00FF00) >>> 8;\n\t\tvar b = (color & 0x0000FF);\n\t\tvar a = image.transparent ? (color & 0xFF000000) >>> 24 : 0xFF;\n\t\t\n\t\tif (hitColorR == r && hitColorG == g && hitColorB == b && hitColorA == a) return;\n\t\t\n\t\tvar dx = [ 0, -1, 1, 0 ];\n\t\tvar dy = [ -1, 0, 0, 1 ];\n\t\t\n\t\tvar minX = -image.offsetX;\n\t\tvar minY = -image.offsetY;\n\t\tvar maxX = minX + image.width;\n\t\tvar maxY = minY + image.height;\n\t\t\n\t\tvar queue = new Array<Int> ();\n\t\tqueue.push (x);\n\t\tqueue.push (y);\n\t\t\n\t\twhile (queue.length > 0) {\n\t\t\t\n\t\t\tvar curPointY = queue.pop ();\n\t\t\tvar curPointX = queue.pop ();\n\t\t\t\n\t\t\tfor (i in 0...4) {\n\t\t\t\t\n\t\t\t\tvar nextPointX = curPointX + dx[i];\n\t\t\t\tvar nextPointY = curPointY + dy[i];\n\t\t\t\t\n\t\t\t\tif (nextPointX < minX || nextPointY < minY || nextPointX >= maxX || nextPointY >= maxY) {\n\t\t\t\t\t\n\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar nextPointOffset = (nextPointY * image.width + nextPointX) * 4;\n\t\t\t\t\n\t\t\t\tif (data[nextPointOffset + 0] == hitColorR && data[nextPointOffset + 1] == hitColorG && data[nextPointOffset + 2] == hitColorB && data[nextPointOffset + 3] == hitColorA) {\n\t\t\t\t\t\n\t\t\t\t\tdata[nextPointOffset + 0] = r;\n\t\t\t\t\tdata[nextPointOffset + 1] = g;\n\t\t\t\t\tdata[nextPointOffset + 2] = b;\n\t\t\t\t\tdata[nextPointOffset + 3] = a;\n\t\t\t\t\t\n\t\t\t\t\tqueue.push (nextPointX);\n\t\t\t\t\tqueue.push (nextPointY);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int):Int {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4);\n\t\t\n\t\tif (image.premultiplied) {\n\t\t\t\n\t\t\tvar unmultiply = 255.0 / data[offset + 3];\n\t\t\ttrace (unmultiply);\n\t\t\treturn __clamp[Std.int (data[offset] * unmultiply)] << 16 | __clamp[Std.int (data[offset + 1] * unmultiply)] << 8 | __clamp[Std.int (data[offset + 2] * unmultiply)];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (data[offset] << 16) | (data[offset + 1] << 8) | (data[offset + 2]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int):Int {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4);\n\t\tvar a = (image.transparent ? data[offset + 3] : 0xFF);\n\t\t\n\t\tif (image.premultiplied && a != 0) {\n\t\t\t\n\t\t\tvar unmultiply = 255.0 / a;\n\t\t\treturn a << 24 | __clamp[Math.round (data[offset] * unmultiply)] << 16 | __clamp[Std.int (data[offset + 1] * unmultiply)] << 8 | __clamp[Std.int (data[offset + 2] * unmultiply)];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn a << 24 | data[offset] << 16 | data[offset + 1] << 8 | data[offset + 2];\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle):ByteArray {\n\t\t\n\t\t#if flash\n\t\tvar byteArray = new ByteArray ();\n\t\t#else\n\t\tvar byteArray = new ByteArray (image.width * image.height * 4);\n\t\t#end\n\t\t\n\t\t// TODO: optimize if the rect is the same as the full buffer size\n\t\t\t\n\t\tvar srcData = image.buffer.data;\n\t\tvar srcStride = Std.int (image.buffer.width * 4);\n\t\tvar srcPosition = Std.int ((rect.x * 4) + (srcStride * rect.y));\n\t\tvar srcRowOffset = srcStride - Std.int (4 * rect.width);\n\t\tvar srcRowEnd = Std.int (4 * (rect.x + rect.width));\n\t\t\n\t\tvar length = Std.int (rect.width * rect.height);\n\t\t#if js\n\t\tbyteArray.length = length * 4;\n\t\t#end\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tbyteArray.writeUnsignedInt (srcData[srcPosition++]);\n\t\t\tbyteArray.writeUnsignedInt (srcData[srcPosition++]);\n\t\t\tbyteArray.writeUnsignedInt (srcData[srcPosition++]);\n\t\t\tbyteArray.writeUnsignedInt (srcData[srcPosition++]);\n\t\t\t#else\n\t\t\tbyteArray.__set (i * 4 + 1, srcData[srcPosition++]);\n\t\t\tbyteArray.__set (i * 4 + 2, srcData[srcPosition++]);\n\t\t\tbyteArray.__set (i * 4 + 3, srcData[srcPosition++]);\n\t\t\tbyteArray.__set (i * 4, srcData[srcPosition++]);\n\t\t\t#end\n\t\t\t\n\t\t\tif ((srcPosition % srcStride) > srcRowEnd) {\n\t\t\t\t\n\t\t\t\tsrcPosition += srcRowOffset;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbyteArray.position = 0;\n\t\treturn byteArray;\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tvar rowOffset = Std.int (destPoint.y + image.offsetY - sourceRect.y - sourceImage.offsetY);\n\t\tvar columnOffset = Std.int (destPoint.x + image.offsetX - sourceRect.x - sourceImage.offsetY);\n\t\t\n\t\tvar sourceData = sourceImage.buffer.data;\n\t\tvar sourceStride = sourceImage.buffer.width * 4;\n\t\tvar sourceOffset:Int = 0;\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar stride = image.buffer.width * 4;\n\t\tvar offset:Int = 0;\n\t\t\n\t\tfor (row in Std.int (sourceRect.top + sourceImage.offsetY)...Std.int (sourceRect.bottom + sourceImage.offsetY)) {\n\t\t\t\n\t\t\tfor (column in Std.int (sourceRect.left + sourceImage.offsetX)...Std.int (sourceRect.right + sourceImage.offsetX)) {\n\t\t\t\t\n\t\t\t\tsourceOffset = (row * sourceStride) + (column * 4);\n\t\t\t\toffset = ((row + rowOffset) * stride) + ((column + columnOffset) * 4);\n\t\t\t\t\n\t\t\t\tdata[offset] = Std.int (((sourceData[offset] * redMultiplier) + (data[offset] * (256 - redMultiplier))) / 256);\n\t\t\t\tdata[offset + 1] = Std.int (((sourceData[offset + 1] * greenMultiplier) + (data[offset + 1] * (256 - greenMultiplier))) / 256);\n\t\t\t\tdata[offset + 2] = Std.int (((sourceData[offset + 2] * blueMultiplier) + (data[offset + 2] * (256 - blueMultiplier))) / 256);\n\t\t\t\tdata[offset + 3] = Std.int (((sourceData[offset + 3] * alphaMultiplier) + (data[offset + 3] * (256 - alphaMultiplier))) / 256);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function multiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\tvar index, a16;\n\t\tvar length = Std.int (data.length / 4);\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tindex = i * 4;\n\t\t\t\n\t\t\tvar a16 = __alpha16[data[index + 3]];\n\t\t\tdata[index] = (data[index] * a16) >> 16;\n\t\t\tdata[index + 1] = (data[index + 1] * a16) >> 16;\n\t\t\tdata[index + 2] = (data[index + 2] * a16) >> 16;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = true;\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tvar newBuffer = new ImageBuffer (new UInt8Array (newWidth * newHeight * 4), newWidth, newHeight);\n\t\t\n\t\tvar imageWidth = image.width;\n\t\tvar imageHeight = image.height;\n\t\t\n\t\tvar data = image.data;\n\t\tvar newData = newBuffer.data;\n\t\tvar sourceIndex:Int, sourceIndexX:Int, sourceIndexY:Int, sourceIndexXY:Int, index:Int;\n\t\tvar sourceX:Int, sourceY:Int;\n\t\tvar u:Float, v:Float, uRatio:Float, vRatio:Float, uOpposite:Float, vOpposite:Float;\n\t\t\n\t\tfor (y in 0...newHeight) {\n\t\t\t\n\t\t\tfor (x in 0...newWidth) {\n\t\t\t\t\n\t\t\t\tu = ((x + 0.5) / newWidth) * imageWidth - 0.5;\n\t\t\t\tv = ((y + 0.5) / newHeight) * imageHeight - 0.5;\n\t\t\t\t\n\t\t\t\tsourceX = Std.int (u);\n\t\t\t\tsourceY = Std.int (v);\n\t\t\t\t\n\t\t\t\tsourceIndex = (sourceY * imageWidth + sourceX) * 4;\n\t\t\t\tsourceIndexX = (sourceX < imageWidth - 1) ? sourceIndex + 4 : sourceIndex;\n\t\t\t\tsourceIndexY = (sourceY < imageHeight - 1) ? sourceIndex + (imageWidth * 4) : sourceIndex;\n\t\t\t\tsourceIndexXY = (sourceIndexX != sourceIndex) ? sourceIndexY + 4 : sourceIndexY;\n\t\t\t\t\n\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\n\t\t\t\tuRatio = u - sourceX;\n\t\t\t\tvRatio = v - sourceY;\n\t\t\t\tuOpposite = 1 - uRatio;\n\t\t\t\tvOpposite = 1 - vRatio;\n\t\t\t\t\n\t\t\t\tnewData[index] = Std.int ((data[sourceIndex] * uOpposite + data[sourceIndexX] * uRatio) * vOpposite + (data[sourceIndexY] * uOpposite + data[sourceIndexXY] * uRatio) * vRatio);\n\t\t\t\tnewData[index + 1] = Std.int ((data[sourceIndex + 1] * uOpposite + data[sourceIndexX + 1] * uRatio) * vOpposite + (data[sourceIndexY + 1] * uOpposite + data[sourceIndexXY + 1] * uRatio) * vRatio);\n\t\t\t\tnewData[index + 2] = Std.int ((data[sourceIndex + 2] * uOpposite + data[sourceIndexX + 2] * uRatio) * vOpposite + (data[sourceIndexY + 2] * uOpposite + data[sourceIndexXY + 2] * uRatio) * vRatio);\n\t\t\t\t\n\t\t\t\t// Maybe it would be better to not weigh colors with an alpha of zero, but the below should help prevent black fringes caused by transparent pixels made visible\n\t\t\t\t\n\t\t\t\tif (data[sourceIndexX + 3] == 0 || data[sourceIndexY + 3] == 0 || data[sourceIndexXY + 3] == 0) {\n\t\t\t\t\t\n\t\t\t\t\tnewData[index + 3] = 0;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newData;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resizeBuffer (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tvar data = image.data;\n\t\tvar newData = new UInt8Array (newWidth * newHeight * 4);\n\t\tvar sourceIndex:Int, index:Int;\n\t\t\n\t\tfor (y in 0...buffer.height) {\n\t\t\t\n\t\t\tfor (x in 0...buffer.width) {\n\t\t\t\t\n\t\t\t\tsourceIndex = (y * buffer.width + x) * 4;\n\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\n\t\t\t\tnewData[index] = data[sourceIndex];\n\t\t\t\tnewData[index + 1] = data[sourceIndex + 1];\n\t\t\t\tnewData[index + 2] = data[sourceIndex + 2];\n\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newData;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4);\n\t\t\n\t\tdata[offset] = (color & 0xFF0000) >>> 16;\n\t\tdata[offset + 1] = (color & 0x00FF00) >>> 8;\n\t\tdata[offset + 2] = (color & 0x0000FF);\n\t\tif (image.transparent) data[offset + 3] = (0xFF);\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4);\n\t\tvar a = (image.transparent ? (color & 0xFF000000) >>> 24 : 0xFF);\n\t\t\n\t\tif (image.transparent && image.premultiplied) {\n\t\t\t\n\t\t\tvar a16 = __alpha16[a];\n\t\t\tdata[offset] = (((color & 0x00FF0000) >>> 16) * a16) >> 16;\n\t\t\tdata[offset + 1] = (((color & 0x0000FF00) >>> 8) * a16) >> 16;\n\t\t\tdata[offset + 2] = ((color & 0x000000FF) * a16) >> 16;\n\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdata[offset] = (color & 0x00FF0000) >>> 16;\n\t\t\tdata[offset + 1] = (color & 0x0000FF00) >>> 8;\n\t\t\tdata[offset + 2] = (color & 0x000000FF);\n\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, byteArray:ByteArray):Void {\n\t\t\n\t\tvar len = Math.round (rect.width * rect.height);\n\t\t\n\t\t// TODO: optimize when rect is the same as the buffer size\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar offset = Math.round (image.buffer.width * (rect.y + image.offsetX) + (rect.x + image.offsetY));\n\t\tvar pos = offset * 4;\n\t\tvar boundR = Math.round ((rect.x + rect.width + image.offsetX));\n\t\tvar width = image.buffer.width;\n\t\tvar color;\n\t\t\n\t\tfor (i in 0...len) {\n\t\t\t\n\t\t\tif (((pos) % (width * 4)) >= boundR * 4) {\n\t\t\t\t\n\t\t\t\tpos += (width - boundR) * 4;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcolor = byteArray.readUnsignedInt ();\n\t\t\t\n\t\t\tdata[pos++] = (color & 0xFF0000) >>> 16;\n\t\t\tdata[pos++] = (color & 0x0000FF00) >>> 8;\n\t\t\tdata[pos++] = (color & 0x000000FF);\n\t\t\tdata[pos++] = (color & 0xFF000000) >>> 24;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function unmultiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tvar index, a, unmultiply;\n\t\tvar length = Std.int (data.length / 4);\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tindex = i * 4;\n\t\t\t\n\t\t\ta = data[index + 3];\n\t\t\t\n\t\t\tif (a != 0) {\n\t\t\t\t\n\t\t\t\tunmultiply = 255.0 / a;\n\t\t\t\t\n\t\t\t\tdata[index] = __clamp[Std.int (data[index] * unmultiply)];\n\t\t\t\tdata[index + 1] = __clamp[Std.int (data[index + 1] * unmultiply)];\n\t\t\t\tdata[index + 2] = __clamp[Std.int (data[index + 2] * unmultiply)];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = false;\n\t\timage.dirty = true;\n\t\t\n\t}\n\t\n\t\n}","package lime.math;\n\n\n#if flash\nimport flash.geom.Rectangle in FlashRectangle;\n#end\n\n\nclass Rectangle {\n\t\n\t\n\tpublic var bottom (get, set):Float;\n\tpublic var bottomRight (get, set):Vector2;\n\tpublic var height:Float;\n\tpublic var left (get, set):Float;\n\tpublic var right (get, set):Float;\n\tpublic var size (get, set):Vector2;\n\tpublic var top (get, set):Float;\n\tpublic var topLeft (get, set):Vector2;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Rectangle {\n\t\t\n\t\treturn new Rectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function contains (x:Float, y:Float):Bool {\n\t\t\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\n\t\t\n\t}\n\t\n\t\n\tpublic function containsPoint (point:Vector2):Bool {\n\t\t\n\t\treturn contains (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function containsRect (rect:Rectangle):Bool {\n\t\t\n\t\tif (rect.width <= 0 || rect.height <= 0) {\n\t\t\t\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\n\t\t\n\t\tx = sourceRect.x;\n\t\ty = sourceRect.y;\n\t\twidth = sourceRect.width;\n\t\theight = sourceRect.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Rectangle):Bool {\n\t\t\n\t\treturn toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflate (dx:Float, dy:Float):Void {\n\t\t\n\t\tx -= dx; width += dx * 2;\n\t\ty -= dy; height += dy * 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflatePoint (point:Vector2):Void {\n\t\t\n\t\tinflate (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\tif (y1 <= y0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersects (toIntersect:Rectangle):Bool {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\treturn y1 > y0;\n\t\t\n\t}\n\t\n\t\n\tpublic function isEmpty ():Bool {\n\t\t\n\t\treturn (width <= 0 || height <= 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic function offsetPoint (point:Vector2):Void {\n\t\t\n\t\tx += point.x;\n\t\ty += point.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function setEmpty ():Void {\n\t\t\n\t\tx = y = width = height = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\twidth = widtha;\n\t\theight = heighta;\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (m:Matrix3):Rectangle {\n\t\t\n\t\tvar tx0 = m.a * x + m.c * y;\n\t\tvar tx1 = tx0;\n\t\tvar ty0 = m.b * x + m.d * y;\n\t\tvar ty1 = tx0;\n\t\t\n\t\tvar tx = m.a * (x + width) + m.c * y;\n\t\tvar ty = m.b * (x + width) + m.d * y;\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * (x + width) + m.c * (y + height);\n\t\tty = m.b * (x + width) + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * x + m.c * (y + height);\n\t\tty = m.b * x + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\treturn new Rectangle (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\n\t\t\n\t}\n\t\n\t\n\tpublic function union (toUnion:Rectangle):Rectangle {\n\t\t\n\t\tif (width == 0 || height == 0) {\n\t\t\t\n\t\t\treturn toUnion.clone ();\n\t\t\t\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\n\t\t\t\n\t\t\treturn clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function __contract (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x < x) this.x = x;\n\t\tif (this.y < y) this.y = y;\n\t\tif (this.right > x + width) this.width = x + width - this.x;\n\t\tif (this.bottom > y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function __expand (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x > x) this.x = x;\n\t\tif (this.y > y) this.y = y;\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashRectangle ():#if flash FlashRectangle #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new FlashRectangle (x, y, width, height);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_bottom ():Float { return y + height; }\n\tprivate function set_bottom (b:Float):Float { height = b - y; return b; }\n\tprivate function get_bottomRight ():Vector2 { return new Vector2 (x + width, y + height); }\n\tprivate function set_bottomRight (p:Vector2):Vector2 { width = p.x - x; height = p.y - y; return p.clone (); }\n\tprivate function get_left ():Float { return x; }\n\tprivate function set_left (l:Float):Float { width -= l - x; x = l; return l; }\n\tprivate function get_right ():Float { return x + width; }\n\tprivate function set_right (r:Float):Float { width = r - x; return r; }\n\tprivate function get_size ():Vector2 { return new Vector2 (width, height); }\n\tprivate function set_size (p:Vector2):Vector2 { width = p.x; height = p.y; return p.clone (); }\n\tprivate function get_top ():Float { return y; }\n\tprivate function set_top (t:Float):Float { height -= t - y; y = t; return t; }\n\tprivate function get_topLeft ():Vector2 { return new Vector2 (x, y); }\n\tprivate function set_topLeft (p:Vector2):Vector2 { x = p.x; y = p.y; return p.clone (); }\n\t\n\t\n}","package lime.net;\n\n\nimport lime.app.Event;\nimport lime.utils.ByteArray;\n\n#if (js && html5)\nimport js.html.EventTarget;\nimport js.html.XMLHttpRequest;\nimport js.Browser;\nimport js.Lib;\n#end\n\n#if lime_curl\nimport lime.net.curl.CURL;\nimport lime.net.curl.CURLEasy;\nimport lime.net.curl.CURLCode;\nimport lime.net.curl.CURLInfo;\nimport lime.net.curl.CURLOption;\n#end\n\n\nclass URLLoader {\n\t\n\t\n\tpublic var bytesLoaded:Int;\n\tpublic var bytesTotal:Int;\n\tpublic var data:Dynamic;\n\tpublic var dataFormat (default, set):URLLoaderDataFormat;\n\tpublic var onComplete = new Event<URLLoader->Void> ();\n\tpublic var onHTTPStatus = new Event<URLLoader->Int->Void> ();\n\tpublic var onIOError = new Event<URLLoader->String->Void> ();\n\tpublic var onOpen = new Event<URLLoader->Void> ();\n\tpublic var onProgress = new Event<URLLoader->Int->Int->Void> ();\n\tpublic var onSecurityError = new Event<URLLoader->String->Void> ();\n\t\n\t#if lime_curl\n\tprivate var __curl:CURL;\n\tprivate var __data:String;\n\t#end\n\t\n\tpublic function new (request:URLRequest = null) {\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tdataFormat = URLLoaderDataFormat.TEXT;\n\n\t\t#if lime_curl\n\t\t__data = \"\";\n\t\t__curl = CURLEasy.init();\n\t\t#end\n\n\t\tif (request != null) {\n\t\t\t\n\t\t\tload (request);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\t#if lime_curl\n\t\tCURLEasy.cleanup(__curl);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate dynamic function getData ():Dynamic {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (request:URLRequest):Void {\n\t\t\n\t\t#if (js && html5)\n\t\trequestUrl (request.url, request.method, request.data, request.formatRequestHeaders ());\n\t\t#elseif lime_curl\n\t\trequestUrl (request.url, request.method, request.data, request.formatRequestHeaders ());\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate function registerEvents (subject:EventTarget):Void {\n\t\t\n\t\tvar self = this;\n\t\tif (untyped __js__(\"typeof XMLHttpRequestProgressEvent\") != __js__('\"undefined\"')) {\n\t\t\t\n\t\t\tsubject.addEventListener (\"progress\", __onProgress, false);\n\t\t\t\n\t\t}\n\t\t\n\t\tuntyped subject.onreadystatechange = function () {\n\t\t\t\n\t\t\tif (subject.readyState != 4) return;\n\t\t\t\n\t\t\tvar s = try subject.status catch (e:Dynamic) null;\n\t\t\t\n\t\t\tif (s == untyped __js__(\"undefined\")) {\n\t\t\t\t\n\t\t\t\ts = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (s != null) {\n\t\t\t\t\n\t\t\t\tself.onHTTPStatus.dispatch (this, s);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//js.Lib.alert (s);\n\t\t\t\n\t\t\tif (s != null && s >= 200 && s < 400) {\n\t\t\t\t\n\t\t\t\tself.__onData (subject.response);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (s == null) {\n\t\t\t\t\t\n\t\t\t\t\tself.onIOError.dispatch (this, \"Failed to connect or resolve host\");\n\t\t\t\t\t\n\t\t\t\t} else if (s == 12029) {\n\t\t\t\t\t\n\t\t\t\t\tself.onIOError.dispatch (this, \"Failed to connect to host\");\n\t\t\t\t\t\n\t\t\t\t} else if (s == 12007) {\n\t\t\t\t\t\n\t\t\t\t\tself.onIOError.dispatch (this, \"Unknown host\");\n\t\t\t\t\t\n\t\t\t\t} else if (s == 0) {\n\t\t\t\t\t\n\t\t\t\t\tself.onIOError.dispatch (this, \"Unable to make request (may be blocked due to cross-domain permissions)\");\n\t\t\t\t\tself.onSecurityError.dispatch (this, \"Unable to make request (may be blocked due to cross-domain permissions)\");\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tself.onIOError.dispatch (this, \"Http Error #\" + subject.status);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\n\t}\n\t\n\t\n\tprivate function requestUrl (url:String, method:URLRequestMethod, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {\n\t\t\n\t\tvar xmlHttpRequest:XMLHttpRequest = untyped __new__(\"XMLHttpRequest\");\n\t\tregisterEvents (cast xmlHttpRequest);\n\t\tvar uri:Dynamic = \"\";\n\t\t\n\t\tif (Std.is (data, ByteArray)) {\n\t\t\t\n\t\t\tvar data:ByteArray = cast data;\n\t\t\t\n\t\t\tswitch (dataFormat) {\n\t\t\t\t\n\t\t\t\tcase BINARY: uri = data.__getBuffer ();\n\t\t\t\tdefault: uri = data.readUTFBytes (data.length);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (Std.is (data, URLVariables)) {\n\t\t\t\n\t\t\tvar data:URLVariables = cast data;\n\t\t\t\n\t\t\tfor (p in Reflect.fields (data)) {\n\t\t\t\t\n\t\t\t\tif (uri.length != 0) uri += \"&\";\n\t\t\t\turi += StringTools.urlEncode (p) + \"=\" + StringTools.urlEncode (Reflect.field (data, p));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (data != null) {\n\t\t\t\t\n\t\t\t\turi = data.toString ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tif (method == GET && uri != null && uri != \"\") {\n\t\t\t\t\n\t\t\t\tvar question = url.split (\"?\").length <= 1;\n\t\t\t\txmlHttpRequest.open (\"GET\", url + (if (question) \"?\" else \"&\") + uri, true);\n\t\t\t\turi = \"\";\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t//js.Lib.alert (\"open: \" + method + \", \" + url + \", true\");\n\t\t\t\txmlHttpRequest.open (cast (method, String), url, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tonIOError.dispatch (this, e.toString ());\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t//js.Lib.alert (\"dataFormat: \" + dataFormat);\n\t\t\n\t\tswitch (dataFormat) {\n\t\t\t\n\t\t\tcase BINARY: untyped xmlHttpRequest.responseType = 'arraybuffer';\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (header in requestHeaders) {\n\t\t\t\n\t\t\t//js.Lib.alert (\"setRequestHeader: \" + header.name + \", \" + header.value);\n\t\t\txmlHttpRequest.setRequestHeader (header.name, header.value);\n\t\t\t\n\t\t}\n\t\t\n\t\t//js.Lib.alert (\"uri: \" + uri);\n\t\t\n\t\txmlHttpRequest.send (uri);\n\t\tonOpen.dispatch (this);\n\t\t\n\t\tgetData = function () {\n\t\t\t\n\t\t\tif (xmlHttpRequest.response != null) {\n\t\t\t\t\n\t\t\t\treturn xmlHttpRequest.response;\n\t\t\t\t\n\t\t\t} else { \n\t\t\t\t\n\t\t\t\treturn xmlHttpRequest.responseText;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\n\t}\n\t#elseif lime_curl\n\n\tprivate function prepareData(data:Dynamic):ByteArray {\n\n\t\tvar uri:ByteArray = new ByteArray();\n\t\tif (Std.is (data, ByteArray)) {\n\t\t\t\n\t\t\tvar data:ByteArray = cast data;\n\t\t\turi = data;\n\t\t\t\n\t\t} else if (Std.is (data, URLVariables)) {\n\t\t\t\n\t\t\tvar data:URLVariables = cast data;\n\t\t\tvar tmp:String = \"\";\n\t\t\tfor (p in Reflect.fields (data)) {\n\t\t\t\t\n\t\t\t\tif (tmp.length != 0) tmp += \"&\";\n\t\t\t\ttmp += StringTools.urlEncode (p) + \"=\" + StringTools.urlEncode (Reflect.field (data, p));\n\t\t\t\t\n\t\t\t}\n\n\t\t\turi.writeUTFBytes(tmp);\n\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (data != null) {\n\t\t\t\t\n\t\t\t\turi.writeUTFBytes(Std.string(data));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn uri;\n\n\t}\n\n\tprivate function requestUrl (url:String, method:URLRequestMethod, data:Dynamic, requestHeaders:Array<URLRequestHeader>):Void {\n\n\t\tvar uri = prepareData(data);\n\t\turi.position = 0;\n\n\t\t__data = \"\";\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\n\t\tCURLEasy.reset(__curl);\n\t\tCURLEasy.setopt(__curl, URL, url);\n\n\t\tswitch(method) {\n\t\t\tcase HEAD:\n\t\t\t\tCURLEasy.setopt(__curl, NOBODY, true);\n\t\t\tcase GET:\n\t\t\t\tCURLEasy.setopt(__curl, HTTPGET, true);\n\t\t\tcase POST:\n\t\t\t\tCURLEasy.setopt(__curl, POST, true);\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\n\t\t\t\tCURLEasy.setopt(__curl, POSTFIELDSIZE, uri.length);\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\n\t\t\tcase PUT:\n\t\t\t\tCURLEasy.setopt(__curl, UPLOAD, true);\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\n\t\t\tcase _:\n\t\t\t\tCURLEasy.setopt(__curl, CUSTOMREQUEST, cast method);\n\t\t\t\tCURLEasy.setopt(__curl, READFUNCTION, readFunction.bind(_, uri));\n\t\t\t\tCURLEasy.setopt(__curl, INFILESIZE, uri.length);\n\t\t}\n\n\t\tvar headers:Array<String> = [];\n\t\theaders.push(\"Expect: \"); // removes the default cURL value\n\t\tfor (requestHeader in requestHeaders) {\n\n\t\t\theaders.push('${requestHeader.name}: ${requestHeader.value}');\n\n\t\t}\n\n\t\tCURLEasy.setopt(__curl, HTTPHEADER, headers);\n\n\t\tCURLEasy.setopt(__curl, PROGRESSFUNCTION, progressFunction);\n\n\t\tCURLEasy.setopt(__curl, WRITEFUNCTION, writeFunction);\n\t\tCURLEasy.setopt(__curl, HEADERFUNCTION, headerFunction);\n\n\t\tCURLEasy.setopt(__curl, SSL_VERIFYPEER, false);\n\t\tCURLEasy.setopt(__curl, SSL_VERIFYHOST, false);\n\t\tCURLEasy.setopt(__curl, USERAGENT, \"libcurl-agent/1.0\");\n\n\t\tvar result = CURLEasy.perform(__curl);\n\n\n\t\tvar responseCode = CURLEasy.getinfo(__curl, RESPONSE_CODE);\n\n\t\tif (result == CURLCode.OK) {\n\t\t\t/*\n\t\t\tswitch(dataFormat) {\n\t\t\t\tcase BINARY: this.data = __data;\n\t\t\t\tdefault: this.data = __data.asString();\n\t\t\t}\n\t\t\t*/\n\t\t\tthis.data = __data;\n\t\t\tonHTTPStatus.dispatch (this, Std.parseInt(responseCode));\n\t\t\tonComplete.dispatch (this);\n\t\t} else {\n\t\t\tonIOError.dispatch (this, \"Problem with curl: \" + result);\n\t\t}\n\t\t\n\t}\n\n\tprivate function writeFunction (output:String, size:Int, nmemb:Int):Int {\n\n\t\t__data += output;\n\t\treturn size * nmemb;\n\n\t}\n\n\tprivate function headerFunction (output:String, size:Int, nmemb:Int):Int {\n\n\t\t// TODO\n\t\treturn size * nmemb;\n\n\t}\n\n\tprivate function progressFunction (dltotal:Float, dlnow:Float, uptotal:Float, upnow:Float):Int {\n\t\t\n\t\tif(upnow>bytesLoaded || dlnow>bytesTotal) {\n\t\t\tif(upnow > bytesLoaded) bytesLoaded = Std.int(upnow);\n\t\t\tif(dlnow > bytesTotal) bytesTotal = Std.int(dlnow);\n\t\t\tonProgress.dispatch(this, bytesLoaded, bytesTotal);\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate function readFunction(max:Int, input:ByteArray):String {\n\t\treturn input == null ? \"\" : input.readUTFBytes(Std.int(Math.min(max, input.length - input.position)));\n\t}\n\n\t#end\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function __onData (_):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar content:Dynamic = getData ();\n\t\t\n\t\tswitch (dataFormat) {\n\t\t\t\n\t\t\tcase BINARY: this.data = ByteArray.__ofBuffer (content);\n\t\t\tdefault: this.data = Std.string (content);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonComplete.dispatch (this);\n\t\t\n\t}\n\t\n\t\n\tprivate function __onProgress (event:XMLHttpRequestProgressEvent):Void {\n\t\t\n\t\tbytesLoaded = event.loaded;\n\t\tbytesTotal = event.total;\n\t\t\n\t\tonProgress.dispatch (this, bytesLoaded, bytesTotal);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function set_dataFormat (inputVal:URLLoaderDataFormat):URLLoaderDataFormat {\n\t\t\n\t\t#if (js && html5)\n\t\t// prevent inadvertently using typed arrays when they are unsupported\n\t\t// @todo move these sorts of tests somewhere common in the vein of Modernizr\n\t\t\n\t\tif (inputVal == URLLoaderDataFormat.BINARY && !Reflect.hasField (Browser.window, \"ArrayBuffer\")) {\n\t\t\t\n\t\t\tdataFormat = URLLoaderDataFormat.TEXT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdataFormat = inputVal;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn dataFormat;\n\t\t#else\n\t\treturn inputVal;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n\n\ntypedef XMLHttpRequestProgressEvent = Dynamic;","package lime.net; #if !flash\n\n\nimport lime.utils.ByteArray;\n\n\nclass URLRequest {\n\t\n\t\n\tpublic var contentType:String;\n\tpublic var data:Dynamic;\n\tpublic var method:URLRequestMethod;\n\tpublic var requestHeaders:Array<URLRequestHeader>;\n\tpublic var url:String;\n\tpublic var userAgent:String;\n\t\n\t\n\tpublic function new (inURL:String = null) {\n\t\t\n\t\tif (inURL != null) {\n\t\t\t\n\t\t\turl = inURL;\n\t\t\t\n\t\t}\n\t\t\n\t\trequestHeaders = [];\n\t\tmethod = URLRequestMethod.GET;\n\t\tcontentType = null; // \"application/x-www-form-urlencoded\";\n\t\t\n\t}\n\t\n\t\n\tpublic function formatRequestHeaders ():Array<URLRequestHeader> {\n\t\t\n\t\tvar res = requestHeaders;\n\t\tif (res == null) res = [];\n\t\t\n\t\tif (method == URLRequestMethod.GET || data == null) return res;\n\t\t\n\t\tif (Std.is (data, String) || Std.is (data, ByteArray)) {\n\t\t\t\n\t\t\tres = res.copy ();\n\t\t\tres.push (new URLRequestHeader (\"Content-Type\", contentType != null ? contentType : \"application/x-www-form-urlencoded\"));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn res;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef URLRequest = flash.net.URLRequest;\n#end","package lime.net; #if !flash\n\n\nclass URLRequestHeader {\n\t\n\t\n\tpublic var name : String;\n\tpublic var value : String;\n\t\n\t\n\tpublic function new (name:String = \"\", value:String = \"\") {\n\t\t\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef URLRequestHeader = flash.net.URLRequestHeader;\n#end","package lime.net.curl;\n\n\nimport lime.net.curl.CURL;\nimport lime.system.System;\n\n\nclass CURLEasy {\n\t\n\t\n\tpublic static function cleanup (handle:CURL):Void {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\tlime_curl_easy_cleanup (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function duphandle (handle:CURL):CURL {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_duphandle (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function escape (handle:CURL, url:String, length:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_escape (handle, url, length);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getinfo (handle:CURL, info:CURLInfo):Dynamic {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_getinfo (handle, cast (info, Int));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function init ():CURL {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_init ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function pause (handle:CURL, bitMask:Int):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_pause (handle, bitMask);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function perform (handle:CURL):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public static function recv (handle:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}*/\n\t\n\t\n\tpublic static function reset (handle:CURL):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_reset (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*public static function send (handle:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_perform (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}*/\n\t\n\t\n\tpublic static function setopt (handle:CURL, option:CURLOption, parameter:Dynamic):CURLCode {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn cast lime_curl_easy_setopt (handle, cast (option, Int), parameter);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function strerror (code:CURLCode):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_strerror (cast (code, Int));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function unescape (handle:CURL, url:String, inLength:Int, outLength:Int):String {\n\t\t\n\t\t#if ((cpp || neko || nodejs) && lime_curl)\n\t\treturn lime_curl_easy_unescape (handle, url, inLength, outLength);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if ((cpp || neko || nodejs) && lime_curl)\n\tprivate static var lime_curl_easy_cleanup = System.load (\"lime\", \"lime_curl_easy_cleanup\", 1);\n\tprivate static var lime_curl_easy_duphandle = System.load (\"lime\", \"lime_curl_easy_duphandle\", 1);\n\tprivate static var lime_curl_easy_escape = System.load (\"lime\", \"lime_curl_easy_escape\", 3);\n\tprivate static var lime_curl_easy_getinfo = System.load (\"lime\", \"lime_curl_easy_getinfo\", 2);\n\tprivate static var lime_curl_easy_init = System.load (\"lime\", \"lime_curl_easy_init\", 0);\n\tprivate static var lime_curl_easy_pause = System.load (\"lime\", \"lime_curl_easy_pause\", 2);\n\tprivate static var lime_curl_easy_perform = System.load (\"lime\", \"lime_curl_easy_perform\", 1);\n\tprivate static var lime_curl_easy_recv = System.load (\"lime\", \"lime_curl_easy_recv\", 4);\n\tprivate static var lime_curl_easy_reset = System.load (\"lime\", \"lime_curl_easy_reset\", 1);\n\tprivate static var lime_curl_easy_send = System.load (\"lime\", \"lime_curl_easy_send\", 4);\n\tprivate static var lime_curl_easy_setopt = System.load (\"lime\", \"lime_curl_easy_setopt\", 3);\n\tprivate static var lime_curl_easy_strerror = System.load (\"lime\", \"lime_curl_easy_strerror\", 1);\n\tprivate static var lime_curl_easy_unescape = System.load (\"lime\", \"lime_curl_easy_unescape\", 4);\n\tprivate static var lime_curl_getdate = System.load (\"lime\", \"lime_curl_getdate\", 2);\n\tprivate static var lime_curl_global_cleanup = System.load (\"lime\", \"lime_curl_global_cleanup\", 0);\n\tprivate static var lime_curl_global_init = System.load (\"lime\", \"lime_curl_global_init\", 1);\n\tprivate static var lime_curl_version = System.load (\"lime\", \"lime_curl_version\", 0);\n\tprivate static var lime_curl_version_info = System.load (\"lime\", \"lime_curl_easy_cleanup\", 1);\n\t#end\n\t\n\t\n}","package lime.system;\n#if !macro\n\n\n#if flash\nimport flash.Lib;\n#elseif (html5 || disable_cffi)\nimport haxe.Timer;\n#end\n\n#if (js && html5)\nimport js.html.HtmlElement;\nimport js.Browser;\n#end\n\n#if (sys && !html5)\nimport sys.io.Process;\n#end\n\n\nclass System {\n\t\n\t\n\tpublic static var disableCFFI:Bool;\n\t\n\t\n\t@:noCompletion private static var __moduleNames:Map<String, String> = null;\n\t#if (!flash && (html5 || disable_cffi))\n\t@:noCompletion private static var __startTime:Float = Timer.stamp ();\n\t#end\n\t\n\t#if neko\n\tprivate static var __loadedNekoAPI:Bool;\n\t#elseif nodejs\n\tprivate static var __nodeNDLLModule:Dynamic;\n\t#end\n\t\n\t\n\t#if (js && html5)\n\t@:keep @:expose(\"lime.embed\")\n\tpublic static function embed (element:Dynamic, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {\n\t\t\n\t\tvar htmlElement:HtmlElement = null;\n\t\t\n\t\tif (Std.is (element, String)) {\n\t\t\t\n\t\t\thtmlElement = cast Browser.document.getElementById (cast (element, String));\n\t\t\t\n\t\t} else if (element == null) {\n\t\t\t\n\t\t\thtmlElement = cast Browser.document.createElement (\"div\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\thtmlElement = cast element;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar color = null;\n\t\t\n\t\tif (background != null) {\n\t\t\t\n\t\t\tbackground = StringTools.replace (background, \"#\", \"\");\n\t\t\t\n\t\t\tif (background.indexOf (\"0x\") > -1) {\n\t\t\t\t\n\t\t\t\tcolor = Std.parseInt (background);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcolor = Std.parseInt (\"0x\" + background);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (width == null) {\n\t\t\t\n\t\t\twidth = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (height == null) {\n\t\t\t\n\t\t\theight = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if tools\n\t\tApplicationMain.config.background = color;\n\t\tApplicationMain.config.element = htmlElement;\n\t\tApplicationMain.config.width = width;\n\t\tApplicationMain.config.height = height;\n\t\tApplicationMain.config.assetsPrefix = assetsPrefix;\n\t\tApplicationMain.create ();\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tstatic private function findHaxeLib (library:String):String {\n\t\t\n\t\t#if (sys && !html5)\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar proc = new Process (\"haxelib\", [ \"path\", library ]);\n\t\t\t\t\n\t\t\t\tif (proc != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar stream = proc.stdout;\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar s = stream.readLine ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (s.substr (0, 1) != \"-\") {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstream.close ();\n\t\t\t\t\t\t\t\tproc.close ();\n\t\t\t\t\t\t\t\tloaderTrace (\"Found haxelib \" + s);\n\t\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} catch(e:Dynamic) { }\n\t\t\t\t\t\n\t\t\t\t\tstream.close ();\n\t\t\t\t\tproc.close ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) { }\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn \"\";\n\t\t\n\t}\n\t\n\t\n\tpublic static function getTimer ():Int {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getTimer ();\n\t\t#elseif (html5 || disable_cffi)\n\t\treturn Std.int ((Timer.stamp () - __startTime) * 1000);\n\t\t#else\n\t\treturn lime_system_gettimer ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if disable_cffi\n\t\tvar disableCFFI = true;\n\t\t#end\n\t\t\n\t\tif (disableCFFI) {\n\t\t\t\n\t\t\treturn Reflect.makeVarArgs (function (__) return {});\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lazy) {\n\t\t\t\n\t\t\t#if neko\n\t\t\treturn neko.Lib.loadLazy (library, method, args);\n\t\t\t#elseif cpp\n\t\t\treturn cpp.Lib.loadLazy (library, method, args);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#if !disable_cffi\n\t\t#if (sys && !html5)\n\t\t\n\t\t#if (iphone || emscripten || android || static_link)\n\t\treturn cpp.Lib.load (library, method, args);\n\t\t#end\n\t\t\n\t\tif (__moduleNames == null) __moduleNames = new Map<String, String> ();\n\t\tif (__moduleNames.exists (library)) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\treturn cpp.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t#elseif neko\n\t\t\treturn neko.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t#elseif nodejs\n\t\t\treturn untyped __nodeNDLLModule.load_lib (__moduleNames.get (library), method, args);\n\t\t\t#else\n\t\t\treturn null;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#if waxe\n\t\tif (library == \"lime\") {\n\t\t\t\n\t\t\tflash.Lib.load (\"waxe\", \"wx_boot\", 1);\n\t\t\t\n\t\t}\n\t\t#elseif nodejs\n\t\tif (__nodeNDLLModule == null) {\n\t\t\t\n\t\t\t__nodeNDLLModule = untyped require('bindings')('node_ndll');\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t__moduleNames.set (library, library);\n\t\t\n\t\tvar result:Dynamic = tryLoad (\"./\" + library, library, method, args);\n\t\t\n\t\tif (result == null) {\n\t\t\t\n\t\t\tresult = tryLoad (\".\\\\\" + library, library, method, args);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (result == null) {\n\t\t\t\n\t\t\tresult = tryLoad (library, library, method, args);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (result == null) {\n\t\t\t\n\t\t\tvar slash = (sysName ().substr (7).toLowerCase () == \"windows\") ? \"\\\\\" : \"/\";\n\t\t\tvar haxelib = findHaxeLib (\"lime\");\n\t\t\t\n\t\t\tif (haxelib != \"\") {\n\t\t\t\t\n\t\t\t\tresult = tryLoad (haxelib + slash + \"ndll\" + slash + sysName () + slash + library, library, method, args);\n\t\t\t\t\n\t\t\t\tif (result == null) {\n\t\t\t\t\t\n\t\t\t\t\tresult = tryLoad (haxelib + slash + \"ndll\" + slash + sysName() + \"64\" + slash + library, library, method, args);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tloaderTrace (\"Result : \" + result);\n\t\t\n\t\t#if neko\n\t\tif (library == \"lime\") {\n\t\t\t\n\t\t\tloadNekoAPI ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#else\n\t\t\n\t\tvar result = null;\n\t\t\n\t\t#end\n\t\t#else\n\t\t\n\t\tvar result = function (_, _, _, _, _, _) { return { }; };\n\t\t\n\t\t#end\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tprivate static function sysName ():String {\n\t\t\n\t\t#if (sys && !html5)\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\t\n\t\t\t\tvar sys_string = cpp.Lib.load (\"std\", \"sys_string\", 0);\n\t\t\t\treturn sys_string ();\n\t\t\t\t\n\t\t\t#else\n\t\t\t\t\n\t\t\t\treturn Sys.systemName ();\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function tryLoad (name:String, library:String, func:String, args:Int):Dynamic {\n\t\t\n\t\t#if (sys && !html5 || nodejs)\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t#if cpp\n\t\t\tvar result = cpp.Lib.load (name, func, args);\n\t\t\t#elseif (neko)\n\t\t\tvar result = neko.Lib.load (name, func, args);\n\t\t\t#elseif nodejs\n\t\t\tvar result = untyped __nodeNDLLModule.load_lib (name, func, args);\n\t\t\t#else\n\t\t\tvar result = null;\n\t\t\t#end\n\t\t\t\n\t\t\tif (result != null) {\n\t\t\t\t\n\t\t\t\tloaderTrace (\"Got result \" + name);\n\t\t\t\t__moduleNames.set (library, name);\n\t\t\t\treturn result;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tloaderTrace (\"Failed to load : \" + name);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function loaderTrace (message:String) {\n\t\t\n\t\t#if (sys && !html5)\n\t\t\n\t\t#if cpp\n\t\t\t\n\t\t\tvar get_env = cpp.Lib.load (\"std\", \"get_env\", 1);\n\t\t\tvar debug = (get_env (\"OPENFL_LOAD_DEBUG\") != null);\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tvar debug = (Sys.getEnv (\"OPENFL_LOAD_DEBUG\") !=null);\n\t\t\t\n\t\t#end\n\t\t\n\t\tif (debug) {\n\t\t\t\n\t\t\tSys.println (message);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if neko\n\t\n\tprivate static function loadNekoAPI ():Void {\n\t\t\n\t\tif (!__loadedNekoAPI) {\n\t\t\t\n\t\t\tvar init = load (\"lime\", \"neko_init\", 5);\n\t\t\t\n\t\t\tif (init != null) {\n\t\t\t\t\n\t\t\t\tloaderTrace (\"Found nekoapi @ \" + __moduleNames.get (\"lime\"));\n\t\t\t\tinit (function(s) return new String (s), function (len:Int) { var r = []; if (len > 0) r[len - 1] = null; return r; }, null, true, false);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__loadedNekoAPI = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t#if (cpp || neko || nodejs)\n\tprivate static var lime_system_gettimer = System.load (\"lime\", \"lime_system_gettimer\", 0);\n\t#end\n\t\n\t\n}\n\n\n#else\n\n\nimport haxe.macro.Compiler;\nimport haxe.macro.Context;\nimport sys.FileSystem;\n\n\nclass System {\n\t\n\t\n\tpublic static function includeTools () {\n\t\t\n\t\tvar paths = Context.getClassPath ();\n\t\t\n\t\tfor (path in paths) {\n\t\t\t\n\t\t\tif (FileSystem.exists (path + \"/tools/CommandLineTools.hx\")) {\n\t\t\t\t\n\t\t\t\tCompiler.addClassPath (path + \"/tools\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n","package lime.ui;\n\n\nclass Mouse {\n\t\n\t\n\tpublic static var cursor (get, set):MouseCursor;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tMouseBackend.hide ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tMouseBackend.show ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_cursor ():MouseCursor {\n\t\t\n\t\treturn MouseBackend.get_cursor ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\treturn MouseBackend.set_cursor (value);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef MouseBackend = lime._backend.flash.FlashMouse;\n#elseif (js && html5)\n@:noCompletion private typedef MouseBackend = lime._backend.html5.HTML5Mouse;\n#else\n@:noCompletion private typedef MouseBackend = lime._backend.native.NativeMouse;\n#end","package lime.ui;\n\n\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.app.Event;\nimport lime.graphics.Image;\nimport lime.graphics.Renderer;\n\n\nclass Window {\n\t\n\t\n\tpublic var currentRenderer:Renderer;\n\tpublic var config:Config;\n\tpublic var fullscreen:Bool;\n\tpublic var height:Int;\n\tpublic var onKeyDown = new Event<Int->Int->Void> ();\n\tpublic var onKeyUp = new Event<Int->Int->Void> ();\n\tpublic var onMouseDown = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseMove = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseUp = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseWheel = new Event<Float->Float->Void> ();\n\tpublic var onTouchEnd = new Event<Float->Float->Int->Void> ();\n\tpublic var onTouchMove = new Event<Float->Float->Int->Void> ();\n\tpublic var onTouchStart = new Event<Float->Float->Int->Void> ();\n\tpublic var onWindowActivate = new Event<Void->Void> ();\n\tpublic var onWindowClose = new Event<Void->Void> ();\n\tpublic var onWindowDeactivate = new Event<Void->Void> ();\n\tpublic var onWindowFocusIn = new Event<Void->Void> ();\n\tpublic var onWindowFocusOut = new Event<Void->Void> ();\n\tpublic var onWindowMove = new Event<Float->Float->Void> ();\n\tpublic var onWindowResize = new Event<Int->Int->Void> ();\n\tpublic var width:Int;\n\tpublic var x:Int;\n\tpublic var y:Int;\n\t\n\t@:noCompletion private var backend:WindowBackend;\n\t\n\t\n\tpublic function new (config:Config = null) {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\twidth = 0;\n\t\theight = 0;\n\t\tfullscreen = false;\n\t\tx = 0;\n\t\ty = 0;\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\t// TODO: Switch to the tool's Config type?\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"width\")) width = config.width;\n\t\t\tif (Reflect.hasField (config, \"height\")) height = config.height;\n\t\t\tif (Reflect.hasField (config, \"fullscreen\")) fullscreen = config.fullscreen;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend = new WindowBackend (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tbackend.close ();\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tbackend.create (application);\n\t\t\n\t\tif (currentRenderer != null) {\n\t\t\t\n\t\t\tcurrentRenderer.create ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\tbackend.move (x, y);\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\tbackend.resize (width, height);\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\tif (image == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend.setIcon (image);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef WindowBackend = lime._backend.flash.FlashWindow;\n#elseif (js && html5)\n@:noCompletion private typedef WindowBackend = lime._backend.html5.HTML5Window;\n#else\n@:noCompletion private typedef WindowBackend = lime._backend.native.NativeWindow;\n#end","package lime.utils; #if !flash\r\n\r\n\r\nimport haxe.io.Bytes;\r\nimport haxe.io.BytesBuffer;\r\nimport haxe.io.BytesData;\r\nimport haxe.io.Input;\r\nimport haxe.zip.Compress;\r\n//import haxe.zip.Flush;\r\nimport haxe.zip.Uncompress;\r\nimport lime.system.System;\r\nimport lime.utils.ArrayBuffer;\r\nimport lime.utils.CompressionAlgorithm;\r\nimport lime.utils.IDataInput;\r\nimport lime.utils.IMemoryRange;\r\n\r\n#if js\r\n#if format\r\nimport format.tools.Inflate;\r\n#end\r\nimport js.html.DataView;\r\nimport js.html.Uint8Array;\r\n#elseif cpp\r\nimport cpp.NativeArray;\r\n#end\r\n\r\n#if ((disable_cffi || java) && sys)\r\nimport sys.io.File;\r\n#end\r\n\r\n@:autoBuild(lime.Assets.embedFile())\r\n\r\n\r\nclass ByteArray #if !js extends Bytes implements ArrayAccess<Int> implements IDataInput implements IMemoryRange #end {\r\n\t\r\n\t\r\n\tpublic var bytesAvailable (get, null):Int;\r\n\tpublic var endian (get, set):String;\r\n\t#if js\r\n\tpublic var length (default, set):Int = 0;\r\n\t#end\r\n\tpublic var objectEncoding:Int;\r\n\tpublic var position:Int = 0;\r\n\t\r\n\tprivate var allocated:Int = 0;\r\n\tprivate var littleEndian:Bool = false;\r\n\t\r\n\t#if js\r\n\tpublic var byteView:Uint8Array;\r\n\tprivate var data:DataView;\r\n\t#else\r\n\tpublic var bigEndian (get, set):Bool;\r\n\tpublic var byteLength (get, null):Int;\r\n\t#end\r\n\t\r\n\t\r\n\t#if (!html5 && !disable_cffi && !java)\r\n\tprivate static function __init__ () {\r\n\t\t\r\n\t\tvar factory = function (length:Int) { return new ByteArray (length); };\r\n\t\t\r\n\t\t#if js\r\n\t\tvar resize = function (bytes:ByteArray, length:Int) {\r\n\t\t\tbytes.___resizeBuffer(length);\r\n\t\t}\r\n\t\t#else\r\n\t\tvar resize = function (bytes:ByteArray, length:Int) {\r\n\t\t\t\r\n\t\t\tif (length > 0)\r\n\t\t\t\tbytes.ensureElem (length - 1, true);\r\n\t\t\tbytes.length = length;\r\n\t\t\t\r\n\t\t};\r\n\t\t#end\r\n\t\t\r\n\t\t#if html5\r\n\t\tvar bytes = function (bytes:ByteArray) { return bytes == null ? null : bytes.byteView; }\r\n\t\t#elseif nodejs\r\n\t\tvar bytes = function (bytes:Dynamic) {\r\n\t\t\tif (Std.is (bytes, ByteArray))\r\n\t\t\t\treturn untyped bytes.byteView;\r\n\t\t\telse if (Std.is (bytes, UInt8Array) ||\r\n\t\t\t\tStd.is (bytes, UInt16Array) ||\r\n\t\t\t\tStd.is (bytes, Int16Array) ||\r\n\t\t\t\tStd.is (bytes, Float32Array))\r\n\t\t\t\treturn bytes;\r\n\t\t\t\r\n\t\t\tif (bytes != null)\r\n\t\t\t\ttrace(\"Couldn't get BytesData:\" + bytes);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar slen = function (bytes:ByteArray) {\r\n\t\t\tif (Std.is (bytes, ByteArray))\r\n\t\t\t\treturn untyped bytes.length;\r\n\t\t\telse if (Std.is (bytes, UInt8Array) ||\r\n\t\t\t\tStd.is (bytes, UInt16Array) ||\r\n\t\t\t\tStd.is (bytes, Int16Array) ||\r\n\t\t\t\tStd.is (bytes, Float32Array))\r\n\t\t\t\treturn untyped bytes.byteLength;\r\n\t\t\t\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t#else\r\n\t\tvar bytes = function (bytes:ByteArray) { return bytes == null ? null : bytes.b; }\r\n\t\tvar slen = function (bytes:ByteArray){ return bytes == null ? 0 : bytes.length; }\r\n\t\t#end\r\n\t\t\r\n\t\tvar init = System.load (\"lime\", \"lime_byte_array_init\", 4);\r\n\t\tinit (factory, slen, resize, bytes);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function new (size = 0):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tif (size > 0) allocated = size;\r\n\t\t___resizeBuffer (allocated);\r\n\t\tlength = allocated;\r\n\t\t#else\r\n\t\tlength = 0;\r\n\t\tif (size > 0) {\r\n\t\t\t\r\n\t\t\t#if neko\r\n\t\t\tallocated = size < 16 ? 16 : size;\r\n\t\t\tvar bytes = untyped __dollar__smake (allocated);\r\n\t\t\tsuper (size, bytes);\r\n\t\t\t#else\r\n\t\t\tvar data = new BytesData (#if java size #end);\r\n\t\t\t#if cpp\r\n\t\t\tNativeArray.setSize (data, size);\r\n\t\t\t#elseif neko\r\n\t\t\tif (size > 0) untyped data[size - 1] = 0;\r\n\t\t\t#end\r\n\t\t\tsuper (size, data);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !js\r\n\tpublic function asString ():String {\r\n\t\t\r\n\t\treturn readUTFBytes (length);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if !js\r\n\tpublic function checkData (length:Int) {\r\n\t\t\r\n\t\tif (length + position > this.length) {\r\n\t\t\t\r\n\t\t\tThrowEOFi ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function clear ():Void {\r\n\t\t\r\n\t\tlength = 0;\r\n\t\tposition = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function compress (algorithm:CompressionAlgorithm = null):Void {\r\n\t\t\r\n\t\t#if !js\r\n\t\t#if neko\r\n\t\tvar src = allocated == length ? this : sub(0, length);\r\n\t\t#else\r\n\t\tvar src = this;\r\n\t\t#end\r\n\t\t\r\n\t\tif (algorithm == null) {\r\n\t\t\t\r\n\t\t\talgorithm = CompressionAlgorithm.ZLIB;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar result:Bytes;\r\n\t\t\r\n\t\tif (algorithm == CompressionAlgorithm.LZMA) {\r\n\t\t\t\r\n\t\t\tresult = Bytes.ofData (lime_lzma_encode (src.getData ()));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar windowBits = switch (algorithm) {\r\n\t\t\t\t\r\n\t\t\t\tcase DEFLATE: -15;\r\n\t\t\t\tcase GZIP: 31;\r\n\t\t\t\tdefault: 15;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if enable_deflate\r\n\t\t\tresult = Compress.run (src, 8, windowBits);\r\n\t\t\t#else\r\n\t\t\tresult = Compress.run (src, 8);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tb = result.b;\r\n\t\tlength = result.length;\r\n\t\tposition = length;\r\n\t\t#if neko\r\n\t\tallocated = length;\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function deflate():Void {\r\n\t\t\r\n\t\tcompress (CompressionAlgorithm.DEFLATE);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !js\r\n\tprivate function ensureElem (size:Int, updateLength:Bool) {\r\n\t\t\r\n\t\tvar len = size + 1;\r\n\t\t\r\n\t\t#if neko\r\n\t\tif (allocated < len) {\r\n\t\t\t\r\n\t\t\tallocated = ((len + 1) * 3) >> 1;\r\n\t\t\tvar new_b = untyped __dollar__smake (allocated);\r\n\t\t\tif (b != null) \r\n\t\t\t\tuntyped __dollar__sblit (new_b, 0, b, 0, length);\r\n\t\t\tb = new_b;\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\tif (b == null)\r\n\t\t\tb = new BytesData (#if java len #end);\r\n\t\t\r\n\t\tif (b.length < len) {\r\n\t\t\t\r\n\t\t\tuntyped b.__SetSize (len);\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t\tif (updateLength && length < len) {\r\n\t\t\t\r\n\t\t\tlength = len;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if js\r\n\t@:extern private inline function ensureWrite (lengthToEnsure:Int):Void {\r\n\t\t\r\n\t\tif (this.length < lengthToEnsure) this.length = lengthToEnsure;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic static function fromBytes (bytes:Bytes):ByteArray {\r\n\t\t\r\n\t\tvar result = new ByteArray ();\r\n\t\tresult.__fromBytes (bytes);\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !js\r\n\tpublic function getLength ():Int { return length; }\r\n\tpublic function getByteBuffer ():ByteArray { return this; }\r\n\tpublic function getStart ():Int { return 0; }\r\n\t#end\r\n\t\r\n\t\r\n\tpublic function inflate () {\r\n\t\t\r\n\t\tuncompress (CompressionAlgorithm.DEFLATE);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function readBoolean ():Bool {\r\n\t\t\r\n\t\t#if js\r\n\t\treturn (this.readByte () != 0);\r\n\t\t#else\r\n\t\treturn (position < length) ? __get (position++) != 0 : ThrowEOFi () != 0;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function readByte ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar data:Dynamic = data;\r\n\t\treturn data.getInt8 (this.position++);\r\n\t\t#else\r\n\t\tvar val:Int = readUnsignedByte ();\r\n\t\treturn ((val & 0x80) != 0) ? (val - 0x100) : val;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readBytes (bytes:ByteArray, offset:Int = 0, length:Int = 0):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\t\r\n\t\tif (offset < 0 || length < 0) {\r\n\t\t\t\r\n\t\t\tthrow (\"Read error - Out of bounds\");\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (length == 0) length = this.bytesAvailable;\r\n\t\t\r\n\t\tbytes.ensureWrite (offset + length);\r\n\t\t\r\n\t\tbytes.byteView.set (byteView.subarray (this.position, this.position + length), offset);\r\n\t\tbytes.position = offset;\r\n\t\t\r\n\t\tthis.position += length;\r\n\t\tif (bytes.position + length > bytes.length) bytes.length = bytes.position + length;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (length == 0) length = this.length - position;\r\n\t\tif (position + length > this.length) ThrowEOFi ();\r\n\t\t\r\n\t\tif (bytes.length < offset + length) {\r\n\t\t\t\r\n\t\t\tbytes.ensureElem (offset + length - 1, true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if neko\r\n\t\tbytes.blit (offset, this, position, length);\r\n\t\t#else\r\n\t\tvar b1 = b;\r\n\t\tvar b2 = bytes.b;\r\n\t\tvar p = position;\r\n\t\tfor (i in 0...length) b2[offset + i] = b1[p + i];\r\n\t\t#end\r\n\t\t\r\n\t\tposition += length;\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readDouble ():Float {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar double = data.getFloat64 (this.position, littleEndian);\r\n\t\tthis.position += 8;\r\n\t\treturn double;\r\n\t\t#else\r\n\t\tif (position + 8 > length) ThrowEOFi ();\r\n\t\tposition += 8;\r\n\t\treturn getDouble (position - 8);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function readFile (path:String):ByteArray {\r\n\t\t\r\n\t\t#if html5\r\n\t\treturn null;\r\n\t\t#elseif (java || disable_cffi)\r\n\t\treturn ByteArray.fromBytes (File.getBytes (path));\r\n\t\t#else\r\n\t\treturn lime_byte_array_read_file (path);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readFloat ():Float {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar float = data.getFloat32 (this.position, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\treturn float;\r\n\t\t#else\r\n\t\tif (position + 4 > length) ThrowEOFi ();\r\n\t\tposition += 4;\r\n\t\treturn getFloat (position - 4);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readInt ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar int = data.getInt32 (this.position, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\treturn int;\r\n\t\t#else\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\tvar ch3 = readUnsignedByte ();\r\n\t\tvar ch4 = readUnsignedByte ();\r\n\t\treturn littleEndian ? (ch4 << 24) |(ch3 << 16) | (ch2 << 8) | ch1 : (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function readMultiByte (length:Int, charSet:String):String {\r\n\t\t\r\n\t\treturn readUTFBytes (length);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readShort ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar short = data.getInt16 (this.position, littleEndian);\r\n\t\tthis.position += 2;\r\n\t\treturn short;\r\n\t\t#else\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\tvar val = littleEndian ? ((ch2 << 8) | ch1) : ((ch1 << 8) | ch2);\r\n\t\treturn ((val & 0x8000) != 0) ? (val - 0x10000) : val;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function readUnsignedByte ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar data:Dynamic = data;\r\n\t\treturn data.getUint8 (this.position++);\r\n\t\t#else\r\n\t\treturn (position < length) ? __get (position++) : ThrowEOFi ();\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUnsignedInt ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar uInt = data.getUint32 (this.position, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\treturn uInt;\r\n\t\t#else\r\n\t\tvar ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\tvar ch3 = readUnsignedByte ();\r\n\t\tvar ch4 = readUnsignedByte ();\r\n\t\treturn littleEndian ? (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1 : (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUnsignedShort ():Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tvar uShort = data.getUint16 (this.position, littleEndian);\r\n\t\tthis.position += 2;\r\n\t\treturn uShort;\r\n\t\t#else\r\n\t\t var ch1 = readUnsignedByte ();\r\n\t\tvar ch2 = readUnsignedByte ();\r\n\t\treturn littleEndian ? (ch2 << 8) + ch1 : (ch1 << 8) | ch2;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUTF ():String {\r\n\t\t\r\n\t\tvar bytesCount = readUnsignedShort ();\r\n\t\treturn readUTFBytes (bytesCount);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function readUTFBytes (len:Int):String {\r\n\t\t\r\n\t\t#if js\r\n\t\t\r\n\t\tvar value = \"\";\r\n\t\tvar max = this.position + len;\r\n\t\t\r\n\t\t// utf8-encode\r\n\t\twhile (this.position < max) {\r\n\t\t\t\r\n\t\t\tvar data:Dynamic = data;\r\n\t\t\tvar c = data.getUint8 (this.position++);\r\n\t\t\t\r\n\t\t\tif (c < 0x80) {\r\n\t\t\t\t\r\n\t\t\t\tif (c == 0) break;\r\n\t\t\t\tvalue += String.fromCharCode (c);\r\n\t\t\t\t\r\n\t\t\t} else if (c < 0xE0) {\r\n\t\t\t\t\r\n\t\t\t\tvalue += String.fromCharCode (((c & 0x3F) << 6) | (data.getUint8 (this.position++) & 0x7F));\r\n\t\t\t\t\r\n\t\t\t} else if (c < 0xF0) {\r\n\t\t\t\t\r\n\t\t\t\tvar c2 = data.getUint8 (this.position++);\r\n\t\t\t\tvalue += String.fromCharCode (((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (data.getUint8 (this.position++) & 0x7F));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar c2 = data.getUint8 (this.position++);\r\n\t\t\t\tvar c3 = data.getUint8 (this.position++);\r\n\t\t\t\tvalue += String.fromCharCode (((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (data.getUint8 (this.position++) & 0x7F));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (position + len > length) {\r\n\t\t\t\r\n\t\t\tThrowEOFi ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar p = position;\r\n\t\tposition += len;\r\n\t\t\r\n\t\t#if neko\r\n\t\tif (b == null || len == 0) {\r\n\t\t\treturn new String(\"\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new String (untyped __dollar__ssub (b, p, len));\r\n\t\t}\r\n\t\t#elseif cpp\r\n\t\tvar result = \"\";\r\n\t\tif (b != null && len > 0) {\r\n\t\t\tuntyped __global__.__hxcpp_string_of_bytes (b, result, p, len);\r\n\t\t}\r\n\t\treturn result;\r\n\t\t#elseif java\r\n\t\treturn getString (p, len);\r\n\t\t#else \r\n\t\treturn \"-\";\r\n\t\t#end\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !js\r\n\tpublic function setLength (length:Int):Void {\r\n\t\t\r\n\t\tif (length > 0)\r\n\t\t\tensureElem (length - 1, false);\r\n\t\tthis.length = length;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if !js\r\n\tpublic function slice (begin:Int, ?inEnd:Int):ByteArray {\r\n\t\t\r\n\t\tif (begin < 0) {\r\n\t\t\t\r\n\t\t\tbegin += length;\r\n\t\t\tif (begin < 0)\r\n\t\t\t\tbegin = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar end:Int = inEnd == null ? length : inEnd;\r\n\t\t\r\n\t\tif (end < 0) {\r\n\t\t\t\r\n\t\t\tend += length;\r\n\t\t\t\r\n\t\t\tif (end < 0)\r\n\t\t\t\tend = 0;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (begin >= end)\r\n\t\t\treturn new ByteArray ();\r\n\t\t\r\n\t\tvar result = new ByteArray (end - begin);\r\n\t\t\r\n\t\tvar opos = position;\r\n\t\tresult.blit (0, this, begin, end - begin);\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if !js\r\n\tprivate function ThrowEOFi ():Int {\r\n\t\t\r\n\t\tthrow \"new EOFError();\";\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tpublic #if !js override #end function toString ():String {\r\n\t\t\r\n\t\tvar cachePosition = position;\r\n\t\tposition = 0;\r\n\t\tvar value = readUTFBytes (length);\r\n\t\tposition = cachePosition;\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function uncompress (algorithm:CompressionAlgorithm = null):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\t\r\n\t\t#if format\r\n\t\tvar bytes = Bytes.ofData (cast byteView);\r\n\t\tvar buf = Inflate.run (bytes).getData ();\r\n\t\tthis.byteView = untyped __new__(\"Uint8Array\", buf);\r\n\t\tthis.data = untyped __new__(\"DataView\", byteView.buffer);\r\n\t\tthis.length = this.allocated = byteView.buffer.byteLength;\r\n\t\t#else\r\n\t\ttrace (\"Warning: ByteArray.uncompress on JS target requires the 'format' haxelib\");\r\n\t\t#end\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\tif (algorithm == null) algorithm = CompressionAlgorithm.GZIP;\r\n\t\t\r\n\t\t#if neko\r\n\t\tvar src = allocated == length ? this : sub (0, length);\r\n\t\t#else\r\n\t\tvar src = this;\r\n\t\t#end\r\n\t\t\r\n\t\tvar result:Bytes;\r\n\t\t\r\n\t\tif (algorithm == CompressionAlgorithm.LZMA) {\r\n\t\t\t\r\n\t\t\tresult = Bytes.ofData (lime_lzma_decode (src.getData ()));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar windowBits = switch (algorithm) {\r\n\t\t\t\tcase DEFLATE: -15;\r\n\t\t\t\tcase GZIP: 31;\r\n\t\t\t\tdefault: 15;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#if enable_deflate\r\n\t\t\tresult = Uncompress.run (src, null, windowBits);\r\n\t\t\t#else\r\n\t\t\tresult = Uncompress.run (src, null);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tb = result.b;\r\n\t\tlength = result.length;\r\n\t\tposition = 0;\r\n\t\t#if neko\r\n\t\tallocated = length;\r\n\t\t#end\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function write_uncheck (byte:Int) {\r\n\t\t\r\n\t\t#if !js\r\n\t\t#if cpp\r\n\t\tuntyped b.__unsafe_set (position++, byte);\r\n\t\t#elseif neko\r\n\t\tuntyped __dollar__sset (b, position++, byte & 0xff);\r\n\t\t#else\r\n\t\tb[position++] = byte & 0xff;\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic inline function writeBoolean (value:Bool):Void {\r\n\t\t\r\n\t\tthis.writeByte (value ? 1 : 0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeByte (value:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 1);\r\n\t\tvar data:Dynamic = data;\r\n\t\tdata.setInt8 (this.position, value);\r\n\t\tthis.position += 1;\r\n\t\t#else\r\n\t\tensureElem (position, true);\r\n\t\t#if neko\r\n\t\tuntyped __dollar__sset (b, position++, value & 0xff);\r\n\t\t#else\r\n\t\tb[position++] = untyped value & 0xFF;\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeBytes (bytes:#if js ByteArray #else Bytes #end, offset:UInt = 0, length:UInt = 0):Void {\r\n\t\t\r\n\t\tif (bytes.length == 0) return;\r\n\t\t#if js\r\n\t\tif (offset < 0 || length < 0) throw (\"Write error - Out of bounds\");\r\n\t\tif( length == 0 ) length = bytes.length;\r\n\t\tensureWrite (this.position + length);\r\n\t\tbyteView.set (bytes.byteView.subarray (offset, offset + length), this.position);\r\n\t\tthis.position += length;\r\n\t\t#else\r\n\t\tif (length == 0) length = bytes.length - offset;\r\n\t\tensureElem (position + length - 1, true);\r\n\t\tvar opos = position;\r\n\t\tposition += length;\r\n\t\tblit (opos, bytes, offset, length);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeDouble (x:Float):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 8);\r\n\t\tdata.setFloat64 (this.position, x, littleEndian);\r\n\t\tthis.position += 8;\r\n\t\t#else\r\n\t\tensureElem (position + 7, true);\r\n\t\tsetDouble (position, x);\r\n\t\tposition += 8;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeFile (path:String):Void {\r\n\t\t\r\n\t\t#if !js\r\n\t\t#if disable_cffi\r\n\t\tFile.saveBytes (path, this);\r\n\t\t#else\r\n\t\tlime_byte_array_overwrite_file (path, this);\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeFloat (x:Float):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 4);\r\n\t\tdata.setFloat32 (this.position, x, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\t#else\r\n\t\tensureElem (position + 3, true);\r\n\t\tsetFloat (position, x);\r\n\t\tposition += 4;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeInt (value:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 4);\r\n\t\tdata.setInt32 (this.position, value, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\t#else\r\n\t\tensureElem (position + 3, true);\r\n\t\t\r\n\t\tif (littleEndian) {\r\n\t\t\t\r\n\t\t\twrite_uncheck (value);\r\n\t\t\twrite_uncheck (value >> 8);\r\n\t\t\twrite_uncheck (value >> 16);\r\n\t\t\twrite_uncheck (value >> 24);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\twrite_uncheck (value >> 24);\r\n\t\t\twrite_uncheck (value >> 16);\r\n\t\t\twrite_uncheck (value >> 8);\r\n\t\t\twrite_uncheck (value);\r\n\t\t\t\r\n\t\t}\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeShort (value:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 2);\r\n\t\tdata.setInt16 (this.position, value, littleEndian);\r\n\t\tthis.position += 2;\r\n\t\t#else\r\n\t\tensureElem (position + 1, true);\r\n\t\t\r\n\t\tif (littleEndian) {\r\n\t\t\t\r\n\t\t\twrite_uncheck (value);\r\n\t\t\twrite_uncheck (value >> 8);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\twrite_uncheck (value >> 8);\r\n\t\t\twrite_uncheck (value);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUnsignedInt (value:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 4);\r\n\t\tdata.setUint32 (this.position, value, littleEndian);\r\n\t\tthis.position += 4;\r\n\t\t#else\r\n\t\twriteInt (value);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUnsignedShort (value:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tensureWrite (this.position + 2);\r\n\t\tdata.setUint16 (this.position, value, littleEndian);\r\n\t\tthis.position += 2;\r\n\t\t#else\r\n\t\twriteShort (value);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUTF (value:String):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\twriteUnsignedShort (__getUTFBytesCount (value));\r\n\t\twriteUTFBytes (value);\r\n\t\t#else\r\n\t\t#if neko\r\n\t\tvar bytes = new Bytes (value.length, untyped value.__s);\r\n\t\t#else\r\n\t\tvar bytes = Bytes.ofString (value);\r\n\t\t#end\r\n\t\twriteShort (bytes.length);\r\n\t\twriteBytes (bytes);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function writeUTFBytes (value:String):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\t// utf8-decode\r\n\t\tfor (i in 0...value.length) {\r\n\t\t\t\r\n\t\t\tvar c = StringTools.fastCodeAt (value, i);\r\n\t\t\t\r\n\t\t\tif (c <= 0x7F) {\r\n\t\t\t\t\r\n\t\t\t\twriteByte (c);\r\n\t\t\t\t\r\n\t\t\t} else if (c <= 0x7FF) {\r\n\t\t\t\t\r\n\t\t\t\twriteByte (0xC0 | (c >> 6));\r\n\t\t\t\twriteByte (0x80 | (c & 63));\r\n\t\t\t\t\r\n\t\t\t} else if (c <= 0xFFFF) {\r\n\t\t\t\t\r\n\t\t\t\twriteByte (0xE0 | (c >> 12));\r\n\t\t\t\twriteByte (0x80 | ((c >> 6) & 63));\r\n\t\t\t\twriteByte (0x80 | (c & 63));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\twriteByte (0xF0 | (c >> 18));\r\n\t\t\t\twriteByte (0x80 | ((c >> 12) & 63));\r\n\t\t\t\twriteByte (0x80 | ((c >> 6) & 63));\r\n\t\t\t\twriteByte (0x80 | (c & 63));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t#else\r\n\t\t#if neko\r\n\t\tvar bytes = new Bytes (value.length, untyped value.__s);\r\n\t\t#else\r\n\t\tvar bytes = Bytes.ofString (value);\r\n\t\t#end\r\n\t\twriteBytes (bytes);\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function __fromBytes (bytes:Bytes):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tbyteView = untyped __new__(\"Uint8Array\", bytes.getData ());\r\n\t\tlength = byteView.length;\r\n\t\tallocated = length;\r\n\t\t#else\r\n\t\tb = bytes.b;\r\n\t\tlength = bytes.length;\r\n\t\t#if neko\r\n\t\tallocated = length;\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:keep public inline function __get (pos:Int):Int {\r\n\t\t\r\n\t\t#if js\r\n\t\treturn data.getInt8 (pos);\r\n\t\t#else\r\n\t\t// Neko/cpp pseudo array accessors...\r\n\t\t// No bounds checking is done in the cpp case\r\n\t\t#if cpp\r\n\t\treturn untyped b[pos];\r\n\t\t#else\r\n\t\treturn get (pos);\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if js\r\n\tpublic inline function __getBuffer () {\r\n\t\t\r\n\t\treturn data.buffer;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if js\r\n\tprivate function __getUTFBytesCount (value:String):Int {\r\n\t\t\r\n\t\tvar count:Int = 0;\r\n\t\t// utf8-decode\r\n\t\t\r\n\t\tfor (i in 0...value.length) {\r\n\t\t\t\r\n\t\t\tvar c = StringTools.fastCodeAt (value, i);\r\n\t\t\t\r\n\t\t\tif (c <= 0x7F) {\r\n\t\t\t\t\r\n\t\t\t\tcount += 1;\r\n\t\t\t\t\r\n\t\t\t} else if (c <= 0x7FF) {\r\n\t\t\t\t\r\n\t\t\t\tcount += 2;\r\n\t\t\t\t\r\n\t\t\t} else if (c <= 0xFFFF) {\r\n\t\t\t\t\r\n\t\t\t\tcount += 3;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcount += 4;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn count;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if js\r\n\tpublic static function __ofBuffer (buffer:ArrayBuffer):ByteArray {\r\n\t\t\r\n\t\tvar bytes = new ByteArray ();\r\n\t\t#if !display\r\n\t\tbytes.length = bytes.allocated = buffer.byteLength;\r\n\t\tbytes.data = untyped __new__(\"DataView\", buffer);\r\n\t\tbytes.byteView = untyped __new__(\"Uint8Array\", buffer);\r\n\t\t#end\r\n\t\treturn bytes;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t#if js\r\n\tprivate function ___resizeBuffer (len:Int):Void {\r\n\t\t\r\n\t\tvar oldByteView:Uint8Array = this.byteView;\r\n\t\tvar newByteView:Uint8Array = untyped __new__(\"Uint8Array\", len);\r\n\t\t\r\n\t\tif (oldByteView != null) {\r\n\t\t\t\r\n\t\t\tif (oldByteView.length <= len) newByteView.set (oldByteView);\r\n\t\t\telse newByteView.set (oldByteView.subarray (0, len));\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.byteView = newByteView;\r\n\t\tthis.data = untyped __new__(\"DataView\", newByteView.buffer);\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\t@:keep public inline function __set (pos:Int, v:Int):Void {\r\n\t\t\r\n\t\t#if js\r\n\t\tdata.setUint8 (pos, v);\r\n\t\t#else\r\n\t\t// No bounds checking is done in the cpp case\r\n\t\t#if cpp\r\n\t\tuntyped b[pos] = v;\r\n\t\t#else\r\n\t\tset (pos, v);\r\n\t\t#end\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Getters & Setters\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if !js\r\n\tprivate inline function get_bigEndian ():Bool { return !littleEndian; }\r\n\tprivate inline function set_bigEndian (value:Bool):Bool { littleEndian = !value; return value; }\r\n\t#end\r\n\t\r\n\t\r\n\tprivate inline function get_bytesAvailable ():Int {\r\n\t\t\r\n\t\treturn length - position;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if !js\r\n\tprivate function get_byteLength ():Int {\r\n\t\t\r\n\t\treturn length;\r\n\t\t\r\n\t}\r\n\t#end\r\n\t\r\n\t\r\n\tprivate inline function get_endian ():String {\r\n\t\t\r\n\t\treturn littleEndian ? \"littleEndian\" : \"bigEndian\";\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function set_endian (endian:String):String {\r\n\t\t\r\n\t\tlittleEndian = (endian == \"littleEndian\");\r\n\t\treturn endian;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function set_length (value:Int):Int {\r\n\t\t\r\n\t\t#if js\r\n\t\tif (allocated < value)\r\n\t\t\t___resizeBuffer (allocated = Std.int (Math.max (value, allocated * 2)));\r\n\t\telse if (allocated > value)\r\n\t\t\t___resizeBuffer (allocated = value);\r\n\t\tlength = value;\r\n\t\t#end\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Native Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t#if !disable_cffi\r\n\tprivate static var lime_byte_array_overwrite_file = System.load (\"lime\", \"lime_byte_array_overwrite_file\", 2);\r\n\tprivate static var lime_byte_array_read_file = System.load (\"lime\", \"lime_byte_array_read_file\", 1);\r\n\tprivate static var lime_lzma_decode = System.load (\"lime\", \"lime_lzma_decode\", 1);\r\n\tprivate static var lime_lzma_encode = System.load (\"lime\", \"lime_lzma_encode\", 1);\r\n\t#end\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#else\r\ntypedef ByteArray = flash.utils.ByteArray;\r\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\n/**\n * The MovieClip class inherits from the following classes: Sprite,\n * DisplayObjectContainer, InteractiveObject, DisplayObject, and\n * EventDispatcher.\n *\n * <p>Unlike the Sprite object, a MovieClip object has a timeline.</p>\n *\n * <p>>In Flash Professional, the methods for the MovieClip class provide the\n * same functionality as actions that target movie clips. Some additional\n * methods do not have equivalent actions in the Actions toolbox in the\n * Actions panel in the Flash authoring tool. </p>\n *\n * <p>Children instances placed on the Stage in Flash Professional cannot be\n * accessed by code from within the constructor of a parent instance since\n * they have not been created at that point in code execution. Before\n * accessing the child, the parent must instead either create the child\n * instance by code or delay access to a callback function that listens for\n * the child to dispatch its <code>Event.ADDED_TO_STAGE</code> event.</p>\n *\n * <p>If you modify any of the following properties of a MovieClip object that\n * contains a motion tween, the playhead is stopped in that MovieClip object:\n * <code>alpha</code>, <code>blendMode</code>, <code>filters</code>,\n * <code>height</code>, <code>opaqueBackground</code>, <code>rotation</code>,\n * <code>scaleX</code>, <code>scaleY</code>, <code>scale9Grid</code>,\n * <code>scrollRect</code>, <code>transform</code>, <code>visible</code>,\n * <code>width</code>, <code>x</code>, or <code>y</code>. However, it does not\n * stop the playhead in any child MovieClip objects of that MovieClip\n * object.</p>\n *\n * <p><b>Note:</b>Flash Lite 4 supports the MovieClip.opaqueBackground\n * property only if FEATURE_BITMAPCACHE is defined. The default configuration\n * of Flash Lite 4 does not define FEATURE_BITMAPCACHE. To enable the\n * MovieClip.opaqueBackground property for a suitable device, define\n * FEATURE_BITMAPCACHE in your project.</p>\n */\nclass MovieClip extends Sprite {\n\t\n\t\n\t/**\n\t * Specifies the number of the frame in which the playhead is located in the\n\t * timeline of the MovieClip instance. If the movie clip has multiple scenes,\n\t * this value is the frame number in the current scene.\n\t */\n\tpublic var currentFrame (get, null):Int;\n\t\n\t/**\n\t * The label at the current frame in the timeline of the MovieClip instance.\n\t * If the current frame has no label, <code>currentLabel</code> is\n\t * <code>null</code>.\n\t */\n\tpublic var currentFrameLabel (get, null):String;\n\t\n\t/**\n\t * The current label in which the playhead is located in the timeline of the\n\t * MovieClip instance. If the current frame has no label,\n\t * <code>currentLabel</code> is set to the name of the previous frame that\n\t * includes a label. If the current frame and previous frames do not include\n\t * a label, <code>currentLabel</code> returns <code>null</code>.\n\t */\n\tpublic var currentLabel (get, null):String;\n\t\n\t/**\n\t * Returns an array of FrameLabel objects from the current scene. If the\n\t * MovieClip instance does not use scenes, the array includes all frame\n\t * labels from the entire MovieClip instance.\n\t */\n\tpublic var currentLabels (get, null):Array<FrameLabel>;\n\t\n\t/**\n\t * A Boolean value that indicates whether a movie clip is enabled. The\n\t * default value of <code>enabled</code> is <code>true</code>. If\n\t * <code>enabled</code> is set to <code>false</code>, the movie clip's Over,\n\t * Down, and Up frames are disabled. The movie clip continues to receive\n\t * events(for example, <code>mouseDown</code>, <code>mouseUp</code>,\n\t * <code>keyDown</code>, and <code>keyUp</code>).\n\t *\n\t * <p>The <code>enabled</code> property governs only the button-like\n\t * properties of a movie clip. You can change the <code>enabled</code>\n\t * property at any time; the modified movie clip is immediately enabled or\n\t * disabled. If <code>enabled</code> is set to <code>false</code>, the object\n\t * is not included in automatic tab ordering.</p>\n\t */\n\tpublic var enabled:Bool;\n\t\n\t/**\n\t * The number of frames that are loaded from a streaming SWF file. You can\n\t * use the <code>framesLoaded</code> property to determine whether the\n\t * contents of a specific frame and all the frames before it loaded and are\n\t * available locally in the browser. You can also use it to monitor the\n\t * downloading of large SWF files. For example, you might want to display a\n\t * message to users indicating that the SWF file is loading until a specified\n\t * frame in the SWF file finishes loading.\n\t *\n\t * <p>If the movie clip contains multiple scenes, the\n\t * <code>framesLoaded</code> property returns the number of frames loaded for\n\t * <i>all</i> scenes in the movie clip.</p>\n\t */\n\tpublic var framesLoaded (get, null):Int;\n\t\n\t/**\n\t * The total number of frames in the MovieClip instance.\n\t *\n\t * <p>If the movie clip contains multiple frames, the\n\t * <code>totalFrames</code> property returns the total number of frames in\n\t * <i>all</i> scenes in the movie clip.</p>\n\t */\n\tpublic var totalFrames (get, null):Int;\n\t\n\t@:noCompletion private var __currentFrame:Int;\n\t@:noCompletion private var __currentFrameLabel:String;\n\t@:noCompletion private var __currentLabel:String;\n\t@:noCompletion private var __currentLabels:Array<FrameLabel>;\n\t@:noCompletion private var __totalFrames:Int;\n\t\n\t\n\t/**\n\t * Creates a new MovieClip instance. After creating the MovieClip, call the\n\t * <code>addChild()</code> or <code>addChildAt()</code> method of a display\n\t * object container that is onstage.\n\t */\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__currentFrame = 0;\n\t\t__currentLabels = [];\n\t\t__totalFrames = 0;\n\t\tenabled = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Starts playing the SWF file at the specified frame. This happens after all\n\t * remaining actions in the frame have finished executing. To specify a scene\n\t * as well as a frame, specify a value for the <code>scene</code> parameter.\n\t * \n\t * @param frame A number representing the frame number, or a string\n\t *              representing the label of the frame, to which the playhead is\n\t *              sent. If you specify a number, it is relative to the scene\n\t *              you specify. If you do not specify a scene, the current scene\n\t *              determines the global frame number to play. If you do specify\n\t *              a scene, the playhead jumps to the frame number in the\n\t *              specified scene.\n\t * @param scene The name of the scene to play. This parameter is optional.\n\t */\n\tpublic function gotoAndPlay (frame:Dynamic, scene:String = null):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Brings the playhead to the specified frame of the movie clip and stops it\n\t * there. This happens after all remaining actions in the frame have finished\n\t * executing. If you want to specify a scene in addition to a frame, specify\n\t * a <code>scene</code> parameter.\n\t * \n\t * @param frame A number representing the frame number, or a string\n\t *              representing the label of the frame, to which the playhead is\n\t *              sent. If you specify a number, it is relative to the scene\n\t *              you specify. If you do not specify a scene, the current scene\n\t *              determines the global frame number at which to go to and\n\t *              stop. If you do specify a scene, the playhead goes to the\n\t *              frame number in the specified scene and stops.\n\t * @param scene The name of the scene. This parameter is optional.\n\t * @throws ArgumentError If the <code>scene</code> or <code>frame</code>\n\t *                       specified are not found in this movie clip.\n\t */\n\tpublic function gotoAndStop (frame:Dynamic, scene:String = null):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sends the playhead to the next frame and stops it. This happens after all\n\t * remaining actions in the frame have finished executing.\n\t * \n\t */\n\tpublic function nextFrame ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Moves the playhead in the timeline of the movie clip.\n\t * \n\t */\n\tpublic function play ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sends the playhead to the previous frame and stops it. This happens after\n\t * all remaining actions in the frame have finished executing.\n\t * \n\t */\n\tpublic function prevFrame ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Stops the playhead in the movie clip.\n\t * \n\t */\n\tpublic function stop ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_currentFrame ():Int { return __currentFrame; }\n\t@:noCompletion private function get_currentFrameLabel ():String { return __currentFrameLabel; }\n\t@:noCompletion private function get_currentLabel ():String { return __currentLabel; }\n\t@:noCompletion private function get_currentLabels ():Array<FrameLabel> { return __currentLabels; }\n\t@:noCompletion private function get_framesLoaded ():Int { return __totalFrames; }\n\t@:noCompletion private function get_totalFrames ():Int { return __totalFrames; }\n\t\n\t\n}\n\n\n#else\ntypedef MovieClip = openfl._v2.display.MovieClip;\n#end\n#else\ntypedef MovieClip = flash.display.MovieClip;\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl.events.EventDispatcher;\nimport openfl.events.UncaughtErrorEvents;\nimport openfl.system.ApplicationDomain;\nimport openfl.utils.ByteArray;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher {\n\t\n\t\n\tprivate static var __rootURL = #if (js && html5) Browser.document.URL #else \"\" #end;\n\t\n\t/**\n\t * When an external SWF file is loaded, all ActionScript 3.0 definitions\n\t * contained in the loaded class are stored in the\n\t * <code>applicationDomain</code> property.\n\t *\n\t * <p>All code in a SWF file is defined to exist in an application domain.\n\t * The current application domain is where your main application runs. The\n\t * system domain contains all application domains, including the current\n\t * domain and all classes used by Flash Player or Adobe AIR.</p>\n\t *\n\t * <p>All application domains, except the system domain, have an associated\n\t * parent domain. The parent domain of your main application's\n\t * <code>applicationDomain</code> is the system domain. Loaded classes are\n\t * defined only when their parent doesn't already define them. You cannot\n\t * override a loaded class definition with a newer definition.</p>\n\t *\n\t * <p>For usage examples of application domains, see the \"Client System\n\t * Environment\" chapter in the <i>ActionScript 3.0 Developer's Guide</i>.</p>\n\t * \n\t * @throws SecurityError This security sandbox of the caller is not allowed\n\t *                       to access this ApplicationDomain.\n\t */\n\tpublic var applicationDomain:ApplicationDomain;\n\t\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic var bytes (default, null):ByteArray;\n\t\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic var bytesLoaded (default, null):Int;\n\t\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic var bytesTotal (default, null):Int;\n\t\n\t/**\n\t * Expresses the trust relationship from content(child) to the Loader\n\t * (parent). If the child has allowed the parent access, <code>true</code>;\n\t * otherwise, <code>false</code>. This property is set to <code>true</code>\n\t * if the child object has called the <code>allowDomain()</code> method to\n\t * grant permission to the parent domain or if a URL policy is loaded at the\n\t * child domain that grants permission to the parent domain. If child and\n\t * parent are in the same domain, this property is set to <code>true</code>.\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t * \n\t * @throws Error Thrown if the file is not downloaded sufficiently to\n\t *               retrieve the requested information.\n\t */\n\tpublic var childAllowsParent (default, null):Bool;\n\t\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic var content (default, null):DisplayObject;\n\t\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic var contentType (default, null):String;\n\t\n\t/**\n\t * The nominal frame rate, in frames per second, of the loaded SWF file. This\n\t * number is often an integer, but need not be.\n\t *\n\t * <p>This value may differ from the actual frame rate in use. Flash Player\n\t * or Adobe AIR only uses a single frame rate for all loaded SWF files at any\n\t * one time, and this frame rate is determined by the nominal frame rate of\n\t * the main SWF file. Also, the main frame rate may not be able to be\n\t * achieved, depending on hardware, sound synchronization, and other\n\t * factors.</p>\n\t * \n\t * @throws Error If the file is not downloaded sufficiently to retrieve the\n\t *               requested information.\n\t * @throws Error If the file is not a SWF file.\n\t */\n\tpublic var frameRate (default, null):Float;\n\t\n\t/**\n\t * The nominal height of the loaded file. This value might differ from the\n\t * actual height at which the content is displayed, since the loaded content\n\t * or its parent display objects might be scaled.\n\t * \n\t * @throws Error If the file is not downloaded sufficiently to retrieve the\n\t *               requested information.\n\t */\n\tpublic var height (default, null):Int;\n\t\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic var loader (default, null):Loader;\n\t\n\t/**\n\t * The URL of the SWF file that initiated the loading of the media described\n\t * by this LoaderInfo object. For the instance of the main class of the SWF\n\t * file, this URL is the same as the SWF file's own URL.\n\t */\n\tpublic var loaderURL (default, null):String;\n\t\n\t/**\n\t * An object that contains name-value pairs that represent the parameters\n\t * provided to the loaded SWF file.\n\t *\n\t * <p>You can use a <code>for-in</code> loop to extract all the names and\n\t * values from the <code>parameters</code> object.</p>\n\t *\n\t * <p>The two sources of parameters are: the query string in the URL of the\n\t * main SWF file, and the value of the <code>FlashVars</code> HTML parameter\n\t * (this affects only the main SWF file).</p>\n\t *\n\t * <p>The <code>parameters</code> property replaces the ActionScript 1.0 and\n\t * 2.0 technique of providing SWF file parameters as properties of the main\n\t * timeline.</p>\n\t *\n\t * <p>The value of the <code>parameters</code> property is null for Loader\n\t * objects that contain SWF files that use ActionScript 1.0 or 2.0. It is\n\t * only non-null for Loader objects that contain SWF files that use\n\t * ActionScript 3.0.</p>\n\t */\n\tpublic var parameters (default, null):Dynamic<String>;\n\t\n\t/**\n\t * Expresses the trust relationship from Loader(parent) to the content\n\t * (child). If the parent has allowed the child access, <code>true</code>;\n\t * otherwise, <code>false</code>. This property is set to <code>true</code>\n\t * if the parent object called the <code>allowDomain()</code> method to grant\n\t * permission to the child domain or if a URL policy file is loaded at the\n\t * parent domain granting permission to the child domain. If child and parent\n\t * are in the same domain, this property is set to <code>true</code>.\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t * \n\t * @throws Error Thrown if the file is not downloaded sufficiently to\n\t *               retrieve the requested information.\n\t */\n\tpublic var parentAllowsChild (default, null):Bool;\n\t\n\t/**\n\t * Expresses the domain relationship between the loader and the content:\n\t * <code>true</code> if they have the same origin domain; <code>false</code>\n\t * otherwise.\n\t * \n\t * @throws Error Thrown if the file is not downloaded sufficiently to\n\t *               retrieve the requested information.\n\t */\n\tpublic var sameDomain (default, null):Bool;\n\t\n\t/**\n\t * An EventDispatcher instance that can be used to exchange events across\n\t * security boundaries. Even when the Loader object and the loaded content\n\t * originate from security domains that do not trust one another, both can\n\t * access <code>sharedEvents</code> and send and receive events via this\n\t * object.\n\t */\n\tpublic var sharedEvents (default, null):EventDispatcher;\n\t\n\t/**\n\t * An object that dispatches an <code>uncaughtError</code> event when an\n\t * unhandled error occurs in code in this LoaderInfo object's SWF file. An\n\t * uncaught error happens when an error is thrown outside of any\n\t * <code>try..catch</code> blocks or when an ErrorEvent object is dispatched\n\t * with no registered listeners.\n\t *\n\t * <p>This property is created when the SWF associated with this LoaderInfo\n\t * has finished loading. Until then the <code>uncaughtErrorEvents</code>\n\t * property is <code>null</code>. In an ActionScript-only project, you can\n\t * access this property during or after the execution of the constructor\n\t * function of the main class of the SWF file. For a Flex project, the\n\t * <code>uncaughtErrorEvents</code> property is available after the\n\t * <code>applicationComplete</code> event is dispatched.</p>\n\t */\n\tpublic var uncaughtErrorEvents (default, null):UncaughtErrorEvents;\n\t\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic var url (default, null):String;\n\t\n\t/**\n\t * The nominal width of the loaded content. This value might differ from the\n\t * actual width at which the content is displayed, since the loaded content\n\t * or its parent display objects might be scaled.\n\t * \n\t * @throws Error If the file is not downloaded sufficiently to retrieve the\n\t *               requested information.\n\t */\n\tpublic var width (default, null):Int;\n\t//static function getLoaderInfoByDefinition(object : Dynamic) : LoaderInfo;\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tapplicationDomain = ApplicationDomain.currentDomain;\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tchildAllowsParent = true;\n\t\tparameters = {};\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (loader:Loader):LoaderInfo {\n\t\t\n\t\tvar loaderInfo = new LoaderInfo ();\n\t\tloaderInfo.uncaughtErrorEvents = new UncaughtErrorEvents ();\n\t\t\n\t\tif (loader != null) {\n\t\t\t\n\t\t\tloaderInfo.loader = loader;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tloaderInfo.url = __rootURL;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn loaderInfo;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef LoaderInfo = openfl._v2.display.LoaderInfo;\n#end\n#else\ntypedef LoaderInfo = flash.display.LoaderInfo;\n#end","package openfl.system; #if !flash\n\n\nclass ApplicationDomain {\n\t\n\t\n\tpublic static var currentDomain (default, null) = new ApplicationDomain (null);\n\t\n\tpublic var parentDomain (default, null):ApplicationDomain;\n\t\n\t\n\tpublic function new (parentDomain:ApplicationDomain = null) {\n\t\t\n\t\tif (parentDomain != null) {\n\t\t\t\n\t\t\tthis.parentDomain = parentDomain;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.parentDomain = currentDomain;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getDefinition (name:String):Dynamic {\n\t\t\n\t\treturn Type.resolveClass (name);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasDefinition (name:String):Bool {\n\t\t\n\t\treturn (Type.resolveClass (name) != null);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef ApplicationDomain = flash.system.ApplicationDomain;\n#end","package openfl.events; #if !flash\n\n\nclass UncaughtErrorEvents extends EventDispatcher {\n\t\n\t\n\t\n}\n\n\n#else\ntypedef UncaughtErrorEvents = flash.events.UncaughtErrorEvents;\n#end","package openfl.geom; #if !flash #if !lime_legacy\n\n\nimport openfl.geom.Point;\nimport lime.utils.Float32Array;\n\n\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n *\n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n *\n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n *\n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n *\n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n *\n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n *\n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n *\n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n *\n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n *\n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nclass Matrix {\n\t\n\t\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic var a:Float;\n\t\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic var b:Float;\n\t\n\t/**\n\t * The value that affects the positioning of pixels along the <i>x</i> axis\n\t * when rotating or skewing an image.\n\t */\n\tpublic var c:Float;\n\t\n\t/**\n\t * The value that affects the positioning of pixels along the <i>y</i> axis\n\t * when scaling or rotating an image.\n\t */\n\tpublic var d:Float;\n\t\n\t/**\n\t * The distance by which to translate each point along the <i>x</i> axis.\n\t */\n\tpublic var tx:Float;\n\t\n\t/**\n\t * The distance by which to translate each point along the <i>y</i> axis.\n\t */\n\tpublic var ty:Float;\n\t\n\t@:noCompletion private var __array:Float32Array;\n\n\t@:noCompletion private static var __identity = new Matrix ();\n\t\n\t\n\t/**\n\t * Creates a new Matrix object with the specified parameters. In matrix\n\t * notation, the properties are organized like this:\n\t *\n\t * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n\t * constructor, it creates an <i>identity matrix</i> with the following\n\t * values:</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t * \n\t * @param a  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when scaling or rotating an image.\n\t * @param b  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when rotating or skewing an image.\n\t * @param c  The value that affects the positioning of pixels along the\n\t *           <i>x</i> axis when rotating or skewing an image.\n\t * @param d  The value that affects the positioning of pixels along the\n\t *           <i>y</i> axis when scaling or rotating an image..\n\t * @param tx The distance by which to translate each point along the <i>x</i>\n\t *           axis.\n\t * @param ty The distance by which to translate each point along the <i>y</i>\n\t *           axis.\n\t */\n\tpublic function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\n\t\t__array = new Float32Array([a, b, c, d, tx, ty, 0, 0, 1]);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a new Matrix object that is a clone of this matrix, with an exact\n\t * copy of the contained object.\n\t * \n\t * @return A Matrix object.\n\t */\n\tpublic inline function clone ():Matrix {\n\t\t\n\t\treturn new Matrix (a, b, c, d, tx, ty);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Concatenates a matrix with the current matrix, effectively combining the\n\t * geometric effects of the two. In mathematical terms, concatenating two\n\t * matrixes is the same as combining them using matrix multiplication.\n\t *\n\t * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n\t * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n\t * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n\t * transforms <code>m1</code> into a matrix that scales an object by a factor\n\t * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n\t *\n\t * <p>This method replaces the source matrix with the concatenated matrix. If\n\t * you want to concatenate two matrixes without altering either of the two\n\t * source matrixes, first copy the source matrix by using the\n\t * <code>clone()</code> method, as shown in the Class Examples section.</p>\n\t * \n\t * @param m The matrix to be concatenated to the source matrix.\n\t */\n\tpublic function concat (m:Matrix):Void {\n\t\t\n\t\tvar a1 = a * m.a + b * m.c;\n\t\tb = a * m.b + b * m.d;\n\t\ta = a1;\n\n\t\tvar c1 = c * m.a + d * m.c;\n\t\td = c * m.b + d * m.d;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * m.a + ty * m.c + m.tx;\n\t\tty = tx * m.b + ty * m.d + m.ty;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\ta = vector3D.x;\n\t\t\tc = vector3D.y;\n\t\t\t\n\t\t}else if (column == 1) {\n\t\t\t\n\t\t\tb = vector3D.x;\n\t\t\td = vector3D.y;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\ttx = vector3D.x;\n\t\t\tty = vector3D.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\tvector3D.x = a;\n\t\t\tvector3D.y = c;\n\t\t\tvector3D.z = 0;\n\t\t\t\n\t\t} else if (column == 1) {\n\t\t\t\n\t\t\tvector3D.x = b;\n\t\t\tvector3D.y = d;\n\t\t\tvector3D.z = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvector3D.x = tx;\n\t\t\tvector3D.y = ty;\n\t\t\tvector3D.z = 1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceMatrix:Matrix):Void {\n\t\t\n\t\ta = sourceMatrix.a;\n\t\tb = sourceMatrix.b;\n\t\tc = sourceMatrix.c;\n\t\td = sourceMatrix.d;\n\t\ttx = sourceMatrix.tx;\n\t\tty = sourceMatrix.ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\ta = vector3D.x;\n\t\t\tc = vector3D.y;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tb = vector3D.x;\n\t\t\td = vector3D.y;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttx = vector3D.x;\n\t\t\tty = vector3D.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\tvector3D.x = a;\n\t\t\tvector3D.y = b;\n\t\t\tvector3D.z = tx;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tvector3D.x = c;\n\t\t\tvector3D.y = d;\n\t\t\tvector3D.z = ty;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\tvector3D.setTo (0, 0, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Includes parameters for scaling, rotation, and translation. When applied\n\t * to a matrix it sets the matrix's values based on those parameters.\n\t *\n\t * <p>Using the <code>createBox()</code> method lets you obtain the same\n\t * matrix as you would if you applied the <code>identity()</code>,\n\t * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n\t * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n\t * 100, 100)</code> has the same effect as the following:</p>\n\t * \n\t * @param scaleX   The factor by which to scale horizontally.\n\t * @param scaleY   The factor by which scale vertically.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The number of pixels to translate(move) to the right\n\t *                 along the <i>x</i> axis.\n\t * @param ty       The number of pixels to translate(move) down along the\n\t *                 <i>y</i> axis.\n\t */\n\tpublic function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\t//identity ();\n\t\t//rotate (rotation);\n\t\t//scale (scaleX, scaleY);\n\t\t//translate (tx, ty);\n\t\t\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\ta = cos * scaleX;\n\t\t\tb = sin * scaleY;\n\t\t\tc = -sin * scaleX;\n\t\t\td = cos * scaleY;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ta = scaleX;\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\td = scaleY;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates the specific style of matrix expected by the\n\t * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n\t * methods of the Graphics class. Width and height are scaled to a\n\t * <code>scaleX</code>/<code>scaleY</code> pair and the\n\t * <code>tx</code>/<code>ty</code> values are offset by half the width and\n\t * height.\n\t *\n\t * <p>For example, consider a gradient with the following\n\t * characteristics:</p>\n\t *\n\t * <ul>\n\t *   <li><code>GradientType.LINEAR</code></li>\n\t *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n\t * 255]</code></li>\n\t *   <li><code>SpreadMethod.PAD</code></li>\n\t *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n\t * </ul>\n\t *\n\t * <p>The following illustrations show gradients in which the matrix was\n\t * defined using the <code>createGradientBox()</code> method with different\n\t * parameter settings:</p>\n\t * \n\t * @param width    The width of the gradient box.\n\t * @param height   The height of the gradient box.\n\t * @param rotation The amount to rotate, in radians.\n\t * @param tx       The distance, in pixels, to translate to the right along\n\t *                 the <i>x</i> axis. This value is offset by half of the\n\t *                 <code>width</code> parameter.\n\t * @param ty       The distance, in pixels, to translate down along the\n\t *                 <i>y</i> axis. This value is offset by half of the\n\t *                 <code>height</code> parameter.\n\t */\n\tpublic function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = width / 1638.4;\n\t\td = height / 1638.4;\n\t\t\n\t\t// rotation is clockwise\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\tb = sin * d;\n\t\t\tc = -sin * a;\n\t\t\ta *= cos;\n\t\t\td *= cos;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx + width / 2;\n\t\tthis.ty = ty + height / 2;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Given a point in the pretransform coordinate space, returns the\n\t * coordinates of that point after the transformation occurs. Unlike the\n\t * standard transformation applied using the <code>transformPoint()</code>\n\t * method, the <code>deltaTransformPoint()</code> method's transformation\n\t * does not consider the translation parameters <code>tx</code> and\n\t * <code>ty</code>.\n\t * \n\t * @param point The point for which you want to get the result of the matrix\n\t *              transformation.\n\t * @return The point resulting from applying the matrix transformation.\n\t */\n\tpublic function deltaTransformPoint (point:Point):Point {\n\t\t\n\t\treturn new Point (point.x * a + point.y * c, point.x * b + point.y * d);\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (matrix):Bool {\n\t\t\n\t\treturn (matrix != null && tx == matrix.tx && ty == matrix.ty && a == matrix.a && b == matrix.b && c == matrix.c && d == matrix.d);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets each matrix property to a value that causes a null transformation. An\n\t * object transformed by applying an identity matrix will be identical to the\n\t * original.\n\t *\n\t * <p>After calling the <code>identity()</code> method, the resulting matrix\n\t * has the following properties: <code>a</code>=1, <code>b</code>=0,\n\t * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n\t * <code>ty</code>=0.</p>\n\t *\n\t * <p>In matrix notation, the identity matrix looks like this:</p>\n\t * \n\t */\n\tpublic function identity ():Void {\n\t\t\n\t\ta = 1;\n\t\tb = 0;\n\t\tc = 0;\n\t\td = 1;\n\t\ttx = 0;\n\t\tty = 0;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Performs the opposite transformation of the original matrix. You can apply\n\t * an inverted matrix to an object to undo the transformation performed when\n\t * applying the original matrix.\n\t * \n\t */\n\tpublic function invert ():Matrix {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\ta = b = c = d = 0;\n\t\t\ttx = -tx;\n\t\t\tty = -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tnorm = 1.0 / norm;\n\t\t\tvar a1 = d * norm;\n\t\t\td = a * norm;\n\t\t\ta = a1;\n\t\t\tb *= -norm;\n\t\t\tc *= -norm;\n\t\t\t\n\t\t\tvar tx1 = - a * tx - c * ty;\n\t\t\tty = - b * tx - d * ty;\n\t\t\ttx = tx1;\n\t\t\t\n\t\t}\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function mult (m:Matrix) {\n\t\t\n\t\tvar result = new Matrix ();\n\n\t\tresult.a = a * m.a + b * m.c;\n\t\tresult.b = a * m.b + b * m.d;\n\t\tresult.c = c * m.a + d * m.c;\n\t\tresult.d = c * m.b + d * m.d;\n\n\t\tresult.tx = tx * m.a + ty * m.c + m.tx;\n\t\tresult.ty = tx * m.b + ty * m.d + m.ty;\n\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Applies a rotation transformation to the Matrix object.\n\t *\n\t * <p>The <code>rotate()</code> method alters the <code>a</code>,\n\t * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n\t * Matrix object. In matrix notation, this is the same as concatenating the\n\t * current matrix with the following:</p>\n\t * \n\t * @param angle The rotation angle in radians.\n\t */\n\tpublic function rotate (theta:Float):Void {\n\t\t\n\t\t/*\n\t\t   Rotate object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  ma mb  0 ]\n\t\t   [  c  d   0 ][  mc md  0 ]\n\t\t   [  tx ty  1 ][  mtx mty 1 ]\n\t\t\t\n\t\t   ma = md = cos\n\t\t   mb = sin\n\t\t   mc = -sin\n\t\t   mtx = my = 0\n\t\t\t\n\t\t */\n\t\t\n\t\tvar cos = Math.cos (theta);\n\t\tvar sin = Math.sin (theta);\n\t\t\n\t\tvar a1 = a * cos - b * sin;\n\t\tb = a * sin + b * cos;\n\t\ta = a1;\n\t\t\n\t\tvar c1 = c * cos - d * sin;\n\t\td = c * sin + d * cos;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * cos - ty * sin;\n\t\tty = tx * sin + ty * cos;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n\t * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n\t * <code>sy</code>.\n\t *\n\t * <p>The <code>scale()</code> method alters the <code>a</code> and\n\t * <code>d</code> properties of the Matrix object. In matrix notation, this\n\t * is the same as concatenating the current matrix with the following\n\t * matrix:</p>\n\t * \n\t * @param sx A multiplier used to scale the object along the <i>x</i> axis.\n\t * @param sy A multiplier used to scale the object along the <i>y</i> axis.\n\t */\n\tpublic function scale (sx:Float, sy:Float) {\n\t\t\n\t\t/*\n\t\t\t\n\t\t   Scale object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  sx  0   0 ]\n\t\t   [  c  d   0 ][  0   sy  0 ]\n\t\t   [  tx ty  1 ][  0   0   1 ]\n\t\t */\n\t\t\n\t\ta *= sx;\n\t\tb *= sy;\n\t\tc *= sx;\n\t\td *= sy;\n\t\ttx *= sx;\n\t\tty *= sy;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tprivate inline function setRotation (theta:Float, scale:Float = 1) {\n\t\t\n\t\ta = Math.cos (theta) * scale;\n\t\tc = Math.sin (theta) * scale;\n\t\tb = -c;\n\t\td = a;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function to3DString (roundPixels:Bool = false):String {\n\t\t\n\t\t// identityMatrix\n\t\t//  [a,b,tx,0],\n\t\t//  [c,d,ty,0],\n\t\t//  [0,0,1, 0],\n\t\t//  [0,0,0, 1]\n\t\t//\n\t\t// matrix3d(a,       b, 0, 0, c, d,       0, 0, 0, 0, 1, 0, tx,     ty, 0, 1)\n\t\t\n\t\tif (roundPixels) {\n\t\t\t\n\t\t\treturn \"matrix3d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + Std.int (tx) + \", \" + Std.int (ty) + \", 0, 1)\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn \"matrix3d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + tx + \", \" + ty + \", 0, 1)\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toMozString () {\n\t\t\n\t\treturn \"matrix(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \"px, \" + ty + \"px)\";\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a text value listing the properties of the Matrix object.\n\t * \n\t * @return A string containing the values of the properties of the Matrix\n\t *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n\t *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n\t */\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn \"matrix(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \", \" + ty + \")\";\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the result of applying the geometric transformation represented by\n\t * the Matrix object to the specified point.\n\t * \n\t * @param point The point for which you want to get the result of the Matrix\n\t *              transformation.\n\t * @return The point resulting from applying the Matrix transformation.\n\t */\n\tpublic function transformPoint (pos:Point) {\n\t\t\n\t\treturn new Point (__transformX (pos), __transformY (pos));\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n\t * by the <code>dx</code> and <code>dy</code> parameters.\n\t * \n\t * @param dx The amount of movement along the <i>x</i> axis to the right, in\n\t *           pixels.\n\t * @param dy The amount of movement down along the <i>y</i> axis, in pixels.\n\t */\n\tpublic function translate (dx:Float, dy:Float) {\n\t\t\n\t\tvar m = new Matrix ();\n\t\tm.tx = dx;\n\t\tm.ty = dy;\n\t\tthis.concat (m);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function toArray (transpose:Bool = false):Float32Array {\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\t__array[0] = a;\n\t\t\t__array[1] = c;\n\t\t\t__array[2] = 0;\n\t\t\t__array[3] = b;\n\t\t\t__array[4] = d;\n\t\t\t__array[5] = 0;\n\t\t\t__array[6] = tx;\n\t\t\t__array[7] = ty;\n\t\t\t__array[8] = 1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__array[0] = a;\n\t\t\t__array[1] = b;\n\t\t\t__array[2] = tx;\n\t\t\t__array[3] = c;\n\t\t\t__array[4] = d;\n\t\t\t__array[5] = ty;\n\t\t\t__array[6] = 0;\n\t\t\t__array[7] = 0;\n\t\t\t__array[8] = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __cleanValues ():Void {\n\t\t\n\t\ta = Math.round (a * 1000) / 1000;\n\t\tb = Math.round (b * 1000) / 1000;\n\t\tc = Math.round (c * 1000) / 1000;\n\t\td = Math.round (d * 1000) / 1000;\n\t\ttx = Math.round (tx * 10) / 10;\n\t\tty = Math.round (ty * 10) / 10;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public inline function __transformX (pos:Point):Float {\n\t\t\n\t\treturn pos.x * a + pos.y * c + tx;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public inline function __transformY (pos:Point):Float {\n\t\t\n\t\treturn pos.x * b + pos.y * d + ty;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public inline function __translateTransformed (pos:Point):Void {\n\t\t\n\t\ttx = __transformX (pos);\n\t\tty = __transformY (pos);\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Matrix = openfl._v2.geom.Matrix;\n#end\n#else\ntypedef Matrix = flash.geom.Matrix;\n#end","package openfl; #if !lime_legacy\n#if !macro\n\n\nimport lime.system.System;\nimport openfl.display.Application;\nimport openfl.display.MovieClip;\nimport openfl.display.Stage;\nimport openfl.net.URLRequest;\n\n#if js\nimport js.html.HtmlElement;\nimport js.Browser;\n#end\n\n\n@:access(openfl.display.Stage) class Lib {\n\t\n\t\n\tpublic static var application:Application;\n\t\n\t#if !flash\n\tpublic static var current (default, null):MovieClip = new MovieClip ();\n\t#else\n\tpublic static var current (get, set):MovieClip;\n\t#end\n\t\n\t@:noCompletion private static var __sentWarnings = new Map<String, Bool> ();\n\t\n\t\n\tpublic static function as<T> (v:Dynamic, c:Class<T>):Null<T> {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.as (v,c);\n\t\t#else\n\t\treturn Std.is (v, c) ? v : null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function attach (name:String):MovieClip {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.attach (name);\n\t\t#else\n\t\treturn new MovieClip ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if js\n\t@:keep @:expose(\"openfl.embed\")\n\tpublic static function embed (elementName:String, width:Null<Int> = null, height:Null<Int> = null, background:String = null, assetsPrefix:String = null) {\n\t\t\n\t\tSystem.embed (elementName, width, height, background, assetsPrefix);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if flash\n\tpublic static function eval (path:String):Dynamic {\n\t\t\n\t\treturn flash.Lib.eval (path);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if flash\n\tpublic static function fscommand (cmd:String, ?param:String) {\n\t\t\n\t\treturn flash.Lib.fscommand (cmd, param);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function getTimer ():Int {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getTimer ();\n\t\t#else\n\t\treturn System.getTimer ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getURL (request:URLRequest, target:String = null) {\n\t\t\n\t\tif (target == null) {\n\t\t\t\n\t\t\ttarget = \"_blank\";\n\t\t\t\n\t\t}\n\t\t\n\t\t#if js\n\t\tBrowser.window.open (request.url, target);\n\t\t#elseif flash\n\t\treturn flash.Lib.getURL (request, target);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function notImplemented (api:String):Void {\n\t\t\n\t\tif (!__sentWarnings.exists (api)) {\n\t\t\t\n\t\t\t__sentWarnings.set (api, true);\n\t\t\t\n\t\t\ttrace (\"Warning: \" + api + \" is not implemented\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function preventDefaultTouchMove ():Void {\n\t\t\n\t\t#if js\n\t\tBrowser.document.addEventListener (\"touchmove\", function (evt:js.html.Event):Void {\n\t\t\t\n\t\t\tevt.preventDefault ();\n\t\t\t\n\t\t}, false);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tpublic static function redirectTraces () {\n\t\t\n\t\treturn flash.Lib.redirectTraces ();\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function trace (arg:Dynamic):Void {\n\t\t\n\t\thaxe.Log.trace (arg);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t#if flash\n\t@:noCompletion private static function get_current ():MovieClip {\n\t\t\n\t\treturn flash.Lib.current;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function set_current (current:MovieClip):MovieClip {\n\t\t\n\t\treturn flash.Lib.current = current;\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n#else\n\n\nimport haxe.macro.Compiler;\nimport haxe.macro.Context;\nimport sys.FileSystem;\n\n\nclass Lib {\n\t\n\t\n\tpublic static function includeBackend (type:String) {\n\t\t\n\t\tif (type == \"native\" || type == \"legacy\") {\n\t\t\t\n\t\t\tCompiler.define (\"openfl\");\n\t\t\tCompiler.define (\"openfl_native\");\n\t\t\t\n\t\t\tvar paths = Context.getClassPath();\n\t\t\t\n\t\t\tfor (path in paths) {\n\t\t\t\t\n\t\t\t\tif (FileSystem.exists (path + \"/legacy/openfl\")) {\n\t\t\t\t\t\n\t\t\t\t\tCompiler.addClassPath (path + \"/legacy\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n#else\ntypedef Lib = openfl._v2.Lib;\n#end\n","package openfl; #if !flash\n\n\n// Haxe abstracts resolve to Dynamic types, which are slower on C++\n// ...by using Array directly, instead of haxe.ds.Vector, we can eliminate\n// some of this performance overhead, but not completely. Should probably\n// switch to the haxe.ds.Vector type for every target when this is resolved\n\n#if java\n\n@:arrayAccess abstract Vector<T>(Array<T>) from Array<T> to Array<T> {\n\t\n\t\n\tpublic var length (get, set):Int;\n\tpublic var fixed (get, set):Bool;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool):Void {\n\t\t\n\t\tthis = new Array<T> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:Array<T>):Vector<T> {\n\t\t\n\t\treturn this.concat (a);\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():Vector<T> {\n\t\t\n\t\treturn this.copy ();\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn this.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String):String {\n\t\t\n\t\treturn this.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\treturn this.pop ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\treturn this.push (x);\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():Void {\n\t\t\n\t\tthis.reverse ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\treturn this.shift ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tthis.unshift (x);\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?pos:Int, ?end:Int):Vector<T> {\n\t\t\n\t\treturn this.slice (pos, end);\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:T -> T -> Int):Void {\n\t\t\n\t\tthis.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\treturn this.splice (pos, len);\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn this.toString ();\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...this.length) {\n\t\t\t\n\t\t\tif (this[i] == x) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = this.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (this[i] == x) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\n\t\t\n\t\treturn new Vector<T> ().concat (cast a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:Array<T>):Vector<U> {\n\t\t\n\t\treturn cast v;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n\n\ntypedef VectorData<T> = Array<T>;\ntypedef VectorDataIterator<T> = Iterator<T>;\n\n\n#elseif (!cpp || display)\n\n\nabstract Vector<T>(VectorData<T>) {\n\t\n\t\n\tpublic var length (get, set):Int;\n\tpublic var fixed (get, set):Bool;\n\t\n\t\n\tpublic inline function new (?length:Int = 0, ?fixed:Bool = false):Void {\n\t\t\n\t\tthis = new VectorData<T> ();\n\t\t#if cpp\n\t\tthis.data = untyped (new Array<T>()).__SetSizeExact(length);\n\t\t#else\n\t\tthis.data = new haxe.ds.Vector<T> (length);\n\t\t#end\n\t\tthis.length = length;\n\t\tthis.fixed = fixed;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function concat (?a:VectorData<T>):Vector<T> {\n\t\t\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = (a != null) ? this.length + a.length : this.length;\n\t\tvectorData.fixed = false;\n\n\t\t#if cpp\n\t\tvectorData.data = this.data.slice (0, this.length).concat (a.data);\n\t\t#else\n\t\tvectorData.data = new haxe.ds.Vector<T> (vectorData.length);\n\t\thaxe.ds.Vector.blit (this.data, 0, vectorData.data, 0, this.length);\n\t\tif (a != null) {\n\t\t\thaxe.ds.Vector.blit (a.data, 0, vectorData.data, this.length, a.length);\n\t\t}\n\t\t#end\n\n\t\treturn cast vectorData;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copy ():Vector<T> {\n\t\t\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = length;\n\t\tvectorData.fixed = fixed;\n\t\t#if cpp\n\t\tvectorData.data = this.data.copy ();\n\t\t#else\n\t\tvectorData.data = new haxe.ds.Vector<T> (length);\n\t\thaxe.ds.Vector.blit (this.data, 0, vectorData.data, 0, this.length);\n\t\t#end\n\t\treturn cast vectorData;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn new VectorDataIterator<T> (this);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function join (sep:String):String {\n\t\t\n\t\tvar output = \"\";\n\n\t\tfor (i in 0...this.length) {\n\t\t\t\n\t\t\tif (i > 0) output += sep;\n\t\t\toutput += this.data[i];\n\n\t\t}\n\n\t\treturn output;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\tvar value = null;\n\n\t\tif (!this.fixed) {\n\t\t\t\n\t\t\tif (this.length > 0) {\n\t\t\t\t\n\t\t\t\tthis.length--;\n\t\t\t\tvalue = this.data[this.length];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\tif (!this.fixed) {\n\t\t\t\n\t\t\tthis.length++;\n\n\t\t\tif (this.data.length < this.length) {\n\t\t\t\t\n\t\t\t\t#if cpp\n\t\t\t\tuntyped (this.data).__SetSizeExact (this.data.length + 10);\n\t\t\t\t#else\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.data.length + 10);\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 0, this.data.length);\n\t\t\t\tthis.data = data;\n\t\t\t\t#end\n\n\t\t\t}\n\n\t\t\tthis.data[this.length - 1] = x;\n\t\t\t\n\t\t}\n\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function reverse ():Void {\n\t\t\n\t\t#if cpp\n\t\tuntyped (this.data).__SetSizeExact (this.length);\n\t\tthis.data.reverse ();\n\t\t#else\n\t\tvar data = new haxe.ds.Vector<T> (this.length);\n\t\tfor (i in 0...this.length) {\n\t\t\tdata[this.length - 1 - i] = this.data[i];\n\t\t}\n\t\tthis.data = data;\n\t\t#end\n\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\tif (!this.fixed && this.length > 0) {\n\t\t\t\n\t\t\tthis.length--;\n\n\t\t\t#if cpp\n\t\t\treturn this.data.shift ();\n\t\t\t#else\n\t\t\tvar value = this.data[0];\n\t\t\thaxe.ds.Vector.blit (this.data, 1, this.data, 0, this.length);\n\t\t\treturn value;\n\t\t\t#end\n\n\t\t}\n\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tif (!this.fixed) {\n\t\t\t\n\t\t\tthis.length++;\n\n\t\t\tif (this.data.length < this.length) {\n\t\t\t\t\n\t\t\t\t#if cpp\n\t\t\t\tuntyped (this.data).__SetSizeExact (this.length + 10);\n\t\t\t\t#else\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.length + 10);\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 1, this.data.length);\n\t\t\t\tthis.data = data;\n\t\t\t\t#end\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if !cpp\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, this.data, 1, this.length - 1);\n\t\t\t\t#end\n\n\t\t\t}\n\n\t\t\t#if cpp\n\t\t\tthis.data.unshift (x);\n\t\t\t#else\n\t\t\tthis.data[0] = x;\n\t\t\t#end\n\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function slice (?pos:Int = 0, ?end:Int = 0):Vector<T> {\n\t\t\n\t\tif (pos < 0) pos += this.length;\n\t\tif (end <= 0) end += this.length;\n\t\tif (end > this.length) end = this.length;\n\t\tvar length = end - pos;\n\t\tif (length <= 0 || length > this.length) length = this.length;\n\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = end - pos;\n\t\tvectorData.fixed = true;\n\t\t#if cpp\n\t\tvectorData.data = this.data.slice (pos, end);\n\t\t#else\n\t\tvectorData.data = new haxe.ds.Vector<T> (length);\n\t\thaxe.ds.Vector.blit (this.data, pos, vectorData.data, 0, length);\n\t\t#end\n\t\treturn cast vectorData;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sort (f:T -> T -> Int):Void {\n\t\t\n\t\t#if cpp\n\t\tthis.data.sort (f);\n\t\t#else\n\t\tvar array = this.data.toArray ();\n\t\tarray.sort (f);\n\t\tthis.data = haxe.ds.Vector.fromArrayCopy (array);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\tif (pos < 0) pos += this.length;\n\t\tif (pos + len > this.length) len = this.length - pos;\n\t\tif (len < 0) len = 0;\n\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = len;\n\t\tvectorData.fixed = false;\n\n\t\t#if cpp\n\t\tvectorData.data = this.data.splice (pos, len);\n\t\t#else\n\t\tvectorData.data = new haxe.ds.Vector<T> (len);\n\t\thaxe.ds.Vector.blit (this.data, pos, vectorData.data, 0, len);\n\t\t#end\n\n\t\tif (len > 0) {\n\t\t\t\n\t\t\tthis.length -= len;\n\t\t\t#if !cpp\n\t\t\thaxe.ds.Vector.blit (this.data, pos + len, this.data, pos, this.length - pos);\n\t\t\t#end\n\n\t\t}\n\n\t\treturn cast vectorData;\n\t\t//return this.splice (pos, len);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\t#if cpp\n\t\treturn this.data.toString ();\n\t\t#else\n\t\treturn this.data.toArray ().toString ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function indexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tvar value = -1;\n\n\t\tfor (i in from...this.length) {\n\t\t\t\n\t\t\tif (this.data[i] == x) {\n\t\t\t\t\n\t\t\t\tvalue = i;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lastIndexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tvar value = -1;\n\t\tvar i = this.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (this.data[i] == x) {\n\t\t\t\t\n\t\t\t\tvalue = i;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\n\t\t\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = a.length;\n\t\tvectorData.fixed = true;\n\t\t#if cpp\n\t\tvectorData.data = cast a.copy ();\n\t\t#else\n\t\tvectorData.data = haxe.ds.Vector.fromArrayCopy (a);\n\t\t#end\n\t\treturn cast vectorData;\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:Vector<T>):Vector<U> {\n\t\t\n\t\treturn cast v;\n\t\t\n\t}\n\n\n\t@:noCompletion @:arrayAccess public inline function get (index:Int):Null<T> {\n\t\t\n\t\treturn this.data[index];\n\n\t}\n\t\n\t\n\t@:noCompletion @:arrayAccess public inline function set (key:Int, value:T):T {\n\t\t\n\t\tif (!this.fixed) {\n\t\t\t\n\t\t\tif (key >= this.length) {\n\t\t\t\tthis.length = key + 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.data.length < this.length) {\n\t\t\t\t\n\t\t\t\tvar data = new haxe.ds.Vector<T> (this.data.length + 10);\n\t\t\t\thaxe.ds.Vector.blit (cast this.data, 0, data, 0, this.data.length);\n\t\t\t\tthis.data = cast data;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\t\t\n\t\t\n\t\treturn this.data[key] = value;\n\t\t\n\t}\n\n\n\t@:noCompletion @:from static public inline function fromArray<T> (value:Array<T>):Vector<T> {\n\t\t\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = value.length;\n\t\tvectorData.fixed = true;\n\t\t#if cpp\n\t\tvectorData.data = value.copy ();\n\t\t#else\n\t\tvectorData.data = haxe.ds.Vector.fromArrayCopy (value);\n\t\t#end\n\t\treturn cast vectorData;\n\n\t}\n\n\n\t@:noCompletion @:to public inline function toArray<T> ():Array<T> {\n\t\t\n\t\t#if cpp\n\t\treturn cast this.data;\n\t\t#else\n\t\tvar value = new Array ();\n\t\tfor (i in 0...this.data.length) {\n\t\t\tvalue.push (this.data[i]);\n\t\t}\n\t\treturn value;\n\t\t#end\n\n\t}\n\n\n\t@:noCompletion @:from static public inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\n\t\t\n\t\tvar vectorData = new VectorData<T> ();\n\t\tvectorData.length = value.length;\n\t\tvectorData.fixed = true;\n\t\t#if cpp\n\t\tvectorData.data = new Array ();\n\t\tuntyped (vectorData.data).__SetSize (value.length);\n\t\tfor (i in 0...value.length) {\n\t\t\tvectorData.data[i] = value[i];\n\t\t}\n\t\t#else\n\t\tvectorData.data = value;\n\t\t#end\n\t\treturn cast vectorData;\n\n\t}\n\n\n\t@:noCompletion @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\n\t\t\n\t\t#if cpp\n\t\treturn haxe.ds.Vector.fromArrayCopy (this.data);\n\t\t#else\n\t\treturn this.data;\n\t\t#end\n\n\t}\n\n\n\t@:noCompletion @:from static public inline function fromVectorData<T> (value:VectorData<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\n\t}\n\n\n\t@:noCompletion @:to public inline function toVectorData<T> ():VectorData<T> {\n\t\t\n\t\treturn cast this;\n\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\tif (value > this.length) {\n\t\t\t\t\n\t\t\t\t#if cpp\n\t\t\t\tuntyped (this.data).__SetSizeExact (value);\n\t\t\t\t#else\n\t\t\t\tvar data = new haxe.ds.Vector<T> (value);\n\t\t\t\thaxe.ds.Vector.blit (this.data, 0, data, 0, Std.int (Math.min (this.data.length, value)));\n\t\t\t\tthis.data = data;\n\t\t\t\t#end\n\n\t\t\t}\n\t\t\t\n\t\t\tthis.length = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn this.fixed;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn this.fixed = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:dox(hide) class VectorData<T> {\n\n\n\t#if cpp\n\tpublic var data:Array<T>;\n\t#else\n\tpublic var data:haxe.ds.Vector<T>;\n\t#end\n\tpublic var fixed:Bool;\n\tpublic var length:Int;\n\n\n\tpublic function new () {\n\t\t\n\t\tlength = 0;\n\t\t\n\t}\n\n\n}\n\n\n@:dox(hide) class VectorDataIterator<T> {\n\n\n\tprivate var index:Int;\n\tprivate var vectorData:VectorData<T>;\n\n\n\tpublic function new (data:VectorData<T>) {\n\t\t\n\t\tindex = 0;\n\t\tvectorData = data;\n\n\t}\n\n\n\tpublic function hasNext ():Bool {\n\t\t\n\t\treturn index < vectorData.length;\n\n\t}\n\n\n\tpublic function next ():T {\n\t\t\n\t\treturn vectorData.data[index++];\n\n\t}\n\n\n}\n\n\n#else\n\n\n#if (haxe_ver > 3.101)\nusing cpp.NativeArray;\n#end\n\n\n@:arrayAccess abstract Vector<T>(Array<T>) from Array<T> to Array<T> {\n\t\n\t\n\tpublic var length (get, set):Int;\n\tpublic var fixed (get, set):Bool;\n\t\n\t\n\tpublic inline function new (?length:Int, ?fixed:Bool):Void {\n\t\t\n\t\tthis = untyped (new Array<T> ()).__SetSizeExact (length);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function concat (?a:Array<T>):Vector<T> {\n\t\t\n\t\treturn this.concat (a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copy ():Vector<T> {\n\t\t\n\t\treturn this.copy ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn this.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function join (sep:String):String {\n\t\t\n\t\treturn this.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\treturn this.pop ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\treturn this.push (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function reverse ():Void {\n\t\t\n\t\tthis.reverse ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\treturn this.shift ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tthis.unshift (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function slice (?pos:Int, ?end:Int):Vector<T> {\n\t\t\n\t\treturn this.slice (pos, end);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sort (f:T -> T -> Int):Void {\n\t\t\n\t\tthis.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\treturn this.splice (pos, len);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn this.toString ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function indexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\treturn this.indexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lastIndexOf (x:T, ?from:Int):Int {\n\t\t\n\t\treturn this.lastIndexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:arrayAccess public inline function get (index:Int):Null<T> {\n\t\t\n\t\t//#if (haxe_ver > 3.100)\n\t\t//return this.unsafeGet (index);\n\t\t//#else\n\t\treturn this[index];\n\t\t//#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:arrayAccess public inline function set (index:Int, value:T):T {\n\t\t\n\t\t//#if (haxe_ver > 3.100)\n\t\t//return this.unsafeSet (index, value);\n\t\t//#else\n\t\treturn this[index] = value;\n\t\t//#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\n\t\t\n\t\treturn new Vector<T> ().concat (cast a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:Array<T>):Vector<U> {\n\t\t\n\t\treturn cast v;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:from static public inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\n\t\t\n\t\treturn cast this;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\tuntyped (this).__SetSizeExact (value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n\n\ntypedef VectorData<T> = Array<T>;\ntypedef VectorDataIterator<T> = Iterator<T>;\n\n\n#end\n#else\n\n\nabstract Vector<T>(VectorData<T>) {\n\t\n\t\n\tpublic var length (get, set):Int;\n\tpublic var fixed (get, set):Bool;\n\t\n\t\n\tpublic inline function new (?length:Int, ?fixed:Bool):Void {\n\t\t\n\t\tthis = new VectorData<T> (length, fixed);\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function concat (?a:VectorData<T>):Vector<T> {\n\t\t\n\t\treturn this.concat (a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copy ():Vector<T> {\n\t\t\n\t\tvar vec = new VectorData<T> (this.length, this.fixed);\n\t\t\n\t\tfor (i in 0...this.length) {\n\t\t\t\n\t\t\tvec[i] = this[i];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn vec;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn new VectorDataIterator<T> (this);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function join (sep:String):String {\n\t\t\n\t\treturn this.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\treturn this.pop ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\treturn this.push (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function reverse ():Void {\n\t\t\n\t\tthis.reverse ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\treturn this.shift ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tthis.unshift (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function slice (?pos:Int, ?end:Int):Vector<T> {\n\t\t\n\t\treturn this.slice (pos, end);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sort (f:T -> T -> Int):Void {\n\t\t\n\t\tthis.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\treturn this.splice (pos, len);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn this.toString ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function indexOf (x:T, ?from:Int):Int {\n\t\t\n\t\treturn this.indexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lastIndexOf (x:T, ?from:Int):Int {\n\t\t\n\t\treturn this.lastIndexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\n\t\t\n\t\treturn VectorData.ofArray (a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:Vector<T>):Vector<U> {\n\t\t\n\t\treturn cast VectorData.convert (v);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:arrayAccess public inline function get (index:Int):Null<T> {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:arrayAccess public inline function set (index:Int, value:T):T {\n\t\t\n\t\treturn this[index] = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:from static public inline function fromArray<T> (value:Array<T>):Vector<T> {\n\t\t\n\t\treturn VectorData.ofArray (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:to public inline function toArray<T> ():Array<T> {\n\t\t\n\t\tvar array = new Array<T> ();\n\t\t\n\t\tfor (value in this) {\n\t\t\t\n\t\t\tarray.push (value);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn array;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:from static public inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\n\t\t\n\t\treturn cast this;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:from static public inline function fromVectorData<T> (value:VectorData<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:to public inline function toVectorData<T> ():VectorData<T> {\n\t\t\n\t\treturn cast this;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\treturn this.length = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn this.fixed;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn this.fixed = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate class VectorDataIterator<T> {\n\n\n\tprivate var index:Int;\n\tprivate var vectorData:VectorData<T>;\n\n\n\tpublic function new (data:VectorData<T>) {\n\t\t\n\t\tindex = 0;\n\t\tvectorData = data;\n\n\t}\n\n\n\tpublic function hasNext ():Bool {\n\t\t\n\t\treturn index < vectorData.length;\n\n\t}\n\n\n\tpublic function next ():T {\n\t\t\n\t\treturn vectorData[index++];\n\n\t}\n\n\n}\n\n\nprivate typedef VectorData<T> = flash.Vector<T>;\n\n\n#end","package openfl._internal.renderer;\n\n\nimport openfl.display.Shape;\nimport openfl.display.Stage;\n\n\nclass AbstractRenderer {\n\t\n\t\n\tpublic var height:Int;\n\tpublic var width:Int;\n\t\n\tprivate var renderSession:RenderSession;\n\t\n\t\n\tprivate function new (width:Int, height:Int) {\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function render (stage:Stage):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function renderShape (shape:Shape):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer; #if !flash\n\n\nimport lime.graphics.CanvasRenderContext;\nimport lime.graphics.DOMRenderContext;\nimport lime.graphics.GLRenderContext;\nimport lime.math.Matrix4;\nimport openfl._internal.renderer.opengl.utils.BlendModeManager;\nimport openfl._internal.renderer.opengl.utils.FilterManager;\nimport openfl._internal.renderer.opengl.utils.MaskManager;\nimport openfl._internal.renderer.opengl.utils.ShaderManager;\nimport openfl._internal.renderer.opengl.utils.SpriteBatch;\nimport openfl._internal.renderer.opengl.utils.StencilManager;\nimport openfl.display.BlendMode;\nimport openfl.geom.Point;\n\n\nclass RenderSession {\n\t\n\t\n\tpublic var context:CanvasRenderContext;\n\tpublic var element:DOMRenderContext;\n\tpublic var gl:GLRenderContext;\n\t//public var glProgram:ShaderProgram;\n\t//public var mask:Bool;\n\t//public var maskManager:MaskManager;\n\tpublic var projectionMatrix:Matrix4;\n\tpublic var renderer:AbstractRenderer;\n\t//public var scaleMode:ScaleMode;\n\tpublic var roundPixels:Bool;\n\tpublic var transformProperty:String;\n\tpublic var transformOriginProperty:String;\n\tpublic var vendorPrefix:String;\n\tpublic var z:Int;\n\t//public var smoothProperty:Null<Bool> = null;\n\t\n\tpublic var drawCount:Int;\n\tpublic var currentBlendMode:BlendMode;\n\tpublic var projection:Point;\n\tpublic var offset:Point;\n\t\n\tpublic var shaderManager:ShaderManager;\n\tpublic var maskManager:Dynamic;\n\tpublic var filterManager:FilterManager;\n\tpublic var blendModeManager:BlendModeManager;\n\tpublic var spriteBatch:SpriteBatch;\n\tpublic var stencilManager:StencilManager;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t//maskManager = new MaskManager (this);\n\t\t\n\t}\n\t\n\t\n} #end","package openfl._internal.renderer.canvas;\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl.display.Graphics;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.Lib;\nimport openfl.Vector;\n\n#if js\nimport js.html.CanvasElement;\nimport js.html.CanvasPattern;\nimport js.html.CanvasRenderingContext2D;\nimport js.Browser;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Tilesheet)\n\n\nclass CanvasGraphics {\n\t\n\t\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\n\t\n\tprivate static var bounds:Rectangle;\n\tprivate static var hasFill:Bool;\n\tprivate static var hasStroke:Bool;\n\tprivate static var inPath:Bool;\n\tprivate static var inversePendingMatrix:Matrix;\n\tprivate static var pendingMatrix:Matrix;\n\tprivate static var positionX:Float;\n\tprivate static var positionY:Float;\n\tprivate static var setFill:Bool;\n\t\n\t#if js\n\tprivate static var context:CanvasRenderingContext2D;\n\tprivate static var pattern:CanvasPattern;\n\t#end\n\t\n\t\n\tprivate static function beginPath ():Void {\n\t\t\n\t\t#if js\n\t\tif (!inPath) {\n\t\t\t\n\t\t\tcontext.beginPath ();\n\t\t\tinPath = true;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function beginPatternFill (bitmapFill:BitmapData, bitmapRepeat:Bool):Void {\n\t\t\n\t\t#if js\n\t\tif (setFill || bitmapFill == null) return;\n\t\t\n\t\tif (pattern == null) {\n\t\t\t\n\t\t\tpattern = context.createPattern (bitmapFill.__image.src, bitmapRepeat ? \"repeat\" : \"no-repeat\");\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.fillStyle = pattern;\n\t\tsetFill = true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function closePath (closeFill:Bool):Void {\n\t\t\n\t\t#if js\n\t\tif (inPath) {\n\t\t\t\n\t\t\tif (hasFill) {\n\t\t\t\t\n\t\t\t\tcontext.translate( -bounds.x, -bounds.y);\n\t\t\t\t\n\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.transform (pendingMatrix.a, pendingMatrix.b, pendingMatrix.c, pendingMatrix.d, pendingMatrix.tx, pendingMatrix.ty);\n\t\t\t\t\tcontext.fill ();\n\t\t\t\t\tcontext.transform (inversePendingMatrix.a, inversePendingMatrix.b, inversePendingMatrix.c, inversePendingMatrix.d, inversePendingMatrix.tx, inversePendingMatrix.ty);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tcontext.fill ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext.translate (bounds.x, bounds.y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcontext.closePath ();\n\t\t\t\n\t\t\tif (hasStroke) {\n\t\t\t\t\n\t\t\t\tcontext.stroke ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tinPath = false;\n\t\t\n\t\tif (closeFill) {\n\t\t\t\n\t\t\thasFill = false;\n\t\t\thasStroke = false;\n\t\t\tpendingMatrix = null;\n\t\t\tinversePendingMatrix = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float):Void {\n\t\t\n\t\t#if js\n\t\tif (ry == -1) ry = rx;\n\t\t\n\t\trx *= 0.5;\n\t\try *= 0.5;\n\t\t\n\t\tif (rx > width / 2) rx = width / 2;\n\t\tif (ry > height / 2) ry = height / 2;\n\t\t\n\t\tvar xe = x + width,\n\t\tye = y + height,\n\t\tcx1 = -rx + (rx * SIN45),\n\t\tcx2 = -rx + (rx * TAN22),\n\t\tcy1 = -ry + (ry * SIN45),\n\t\tcy2 = -ry + (ry * TAN22);\n\t\t\n\t\tcontext.moveTo (xe, ye - ry);\n\t\tcontext.quadraticCurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\n\t\tcontext.quadraticCurveTo (xe + cx2, ye, xe - rx, ye);\n\t\tcontext.lineTo (x + rx, ye);\n\t\tcontext.quadraticCurveTo (x - cx2, ye, x - cx1, ye + cy1);\n\t\tcontext.quadraticCurveTo (x, ye + cy2, x, ye - ry);\n\t\tcontext.lineTo (x, y + ry);\n\t\tcontext.quadraticCurveTo (x, y - cy2, x - cx1, y - cy1);\n\t\tcontext.quadraticCurveTo (x - cx2, y, x + rx, y);\n\t\tcontext.lineTo (xe - rx, y);\n\t\tcontext.quadraticCurveTo (xe + cx2, y, xe + cx1, y - cy1);\n\t\tcontext.quadraticCurveTo (xe, y - cy2, xe, y + ry);\n\t\tcontext.lineTo (xe, ye - ry);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/*#if js\n\tprivate static inline function setFillStyle(data:DrawPath, context:CanvasRenderingContext2D, worldAlpha:Float) {\n\t\tif (data.hasFill) {\n\t\t\t\n\t\t\tcontext.globalAlpha = data.fill.alpha * worldAlpha;\t\t\t\t\t\t\t\n\t\t\tif (data.fill.bitmap != null) {\n\t\t\t\tvar bitmap = data.fill.bitmap;\n\t\t\t\tvar repeat = data.fill.repeat;\n\t\t\t\tvar pattern = context.createPattern (bitmap.__image.src, repeat ? \"repeat\" : \"no-repeat\");\n\t\t\t\tcontext.fillStyle = pattern;\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = '#' + StringTools.hex(data.fill.color, 6);\n\t\t\t}\n\t\t}\n\t}\n\t#end\n\t\n\tpublic static function renderObjectGraphics(object:DisplayObject, renderSession:RenderSession):Void {\n\n\t\t#if js\n\n\t\tvar worldAlpha = object.__worldAlpha;\n\t\tvar graphics = object.__graphics;\n\n\t\tbounds = graphics.__bounds;\n\n\t\tif(!graphics.__dirty) return;\n\n\t\tgraphics.__dirty = false;\n\n\t\tif(bounds == null || bounds.width == 0 || bounds.height == 0) {\n\n\t\t\tgraphics.__canvas = null;\n\t\t\tgraphics.__context = null;\t\t\t\n\n\t\t} else {\n\n\t\t\tif (graphics.__canvas == null) {\n\t\t\t\t\n\t\t\t\tgraphics.__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t\tgraphics.__context = graphics.__canvas.getContext (\"2d\");\n\t\t\t\t//untyped (context).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = false;\n\t\t\t\t//context.imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\n\t\t\tvar context = graphics.__context;\n\n\t\t\tgraphics.__canvas.width = Math.ceil (bounds.width);\n\t\t\tgraphics.__canvas.height = Math.ceil (bounds.height);\n\n\t\t\tvar offsetX = bounds.x;\n\t\t\tvar offsetY = bounds.y;\n\n\t\t\tfor (i in 0...graphics.__graphicsData.length) {\n\n\t\t\t\tvar data = graphics.__graphicsData[i];\n\t\t\t\tvar points = data.points;\n\n\t\t\t\tcontext.strokeStyle = '#' + StringTools.hex (data.line.color, 6);\n\t\t\t\tcontext.lineWidth = data.line.width;\n\t\t\t\tcontext.lineCap = Std.string(data.line.caps);\n\t\t\t\tcontext.lineJoin = Std.string(data.line.joints);\n\t\t\t\tcontext.miterLimit = data.line.miterLimit;\n\n\t\t\t\tsetFillStyle(data, context, worldAlpha);\n\t\t\t\t\n\t\t\t\tswitch(data.type) {\n\n\t\t\t\t\tcase Polygon:\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tcontext.moveTo(points[0] - offsetX, points[1] - offsetY);\n\t\t\t\t\t\tfor(i in 1...Std.int(points.length/2)) {\n\t\t\t\t\t\t\tcontext.lineTo(points[i * 2] - offsetX, points[i * 2 + 1] - offsetY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(data.hasFill) {\n\t\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(data.line.width > 0) {\n\t\t\t\t\t\t\tcontext.globalAlpha = data.line.alpha * worldAlpha;\n\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase Rectangle(round):\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar rx = points[0] - offsetX;\n\t\t\t\t\t\tvar ry = points[1] - offsetY;\n\t\t\t\t\t\tvar width = points[2];\n\t\t\t\t\t\tvar height = points[3];\n\n\t\t\t\t\t\tif(round) {\n\n\t\t\t\t\t\t\tvar radius = points[4];\n\t\t\t\t\t\t\tvar maxRadius = Math.min(width, height) / 2;\n\t\t\t\t\t\t\tradius = (radius > maxRadius) ? maxRadius : radius;\n\n\t\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t\tcontext.moveTo(rx, ry + radius);\n\t\t\t\t\t\t\tcontext.lineTo(rx, ry + height - radius);\n\t\t\t\t\t\t\tcontext.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n\t\t\t\t\t\t\tcontext.lineTo(rx + width - radius, ry + height);\n\t\t\t\t\t\t\tcontext.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n\t\t\t\t\t\t\tcontext.lineTo(rx + width, ry + radius);\n\t\t\t\t\t\t\tcontext.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n\t\t\t\t\t\t\tcontext.lineTo(rx + radius, ry);\n\t\t\t\t\t\t\tcontext.quadraticCurveTo(rx, ry, rx, ry + radius);\n\t\t\t\t\t\t\tcontext.closePath();\n\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\n\t\t\t\t\t\tif (data.hasFill) {\n\t\t\t\t\t\t\tif (round) {\n\t\t\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext.fillRect(rx, ry, width, height);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(data.line.width > 0) {\n\t\t\t\t\t\t\tcontext.globalAlpha = data.line.alpha * worldAlpha;\n\t\t\t\t\t\t\tif(round) {\n\t\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext.strokeRect(rx, ry, width, height);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tcase Circle:\n\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tcontext.arc(points[0] - offsetX, points[1] - offsetY, points[2], 0, 2 * Math.PI, true);\n\t\t\t\t\t\tcontext.closePath();\n\n\t\t\t\t\t\tif(data.hasFill) {\n\t\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(data.line.width > 0) {\n\t\t\t\t\t\t\tcontext.globalAlpha = data.line.alpha * worldAlpha;\n\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase Ellipse:\n\n\t\t\t\t\t\tvar w = points[2];\n\t\t\t\t\t\tvar h = points[3];\n\t\t\t\t\t\tvar x = (points[0] - offsetX);\n\t\t\t\t\t\tvar y = (points[1] - offsetY);\n\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tvar kappa = 0.5522848,\n\t\t\t\t\t\t\tox = (w / 2) * kappa, // control point offset horizontal\n\t\t\t\t\t\t\toy = (h / 2) * kappa, // control point offset vertical\n\t\t\t\t\t\t\txe = x + w, // x-end\n\t\t\t\t\t\t\tye = y + h, // y-end\n\t\t\t\t\t\t\txm = x + w / 2, // x-middle\n\t\t\t\t\t\t\tym = y + h / 2; // y-middle\n\t\t\t\t\t\tcontext.moveTo(x, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\t\tcontext.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\t\tcontext.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\t\tcontext.closePath();\n\n\t\t\t\t\t\tif(data.hasFill) {\n\t\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(data.line.width > 0) {\n\t\t\t\t\t\t\tcontext.globalAlpha = data.line.alpha * worldAlpha;\n\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase _:\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t#end\n\n\t}*/\n\t\n\t\n\tpublic static function render (graphics:Graphics, renderSession:RenderSession):Void {\n\t\t\n\t\t#if js\n\t\t\n\t\tif (graphics.__dirty) {\n\t\t\t\n\t\t\tbounds = graphics.__bounds;\n\t\t\t\n\t\t\thasFill = false;\n\t\t\thasStroke = false;\n\t\t\tinPath = false;\n\t\t\tpositionX = 0;\n\t\t\tpositionY = 0;\n\t\t\t\n\t\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {\n\t\t\t\t\n\t\t\t\tgraphics.__canvas = null;\n\t\t\t\tgraphics.__context = null;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (graphics.__canvas == null) {\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t\t\tgraphics.__context = graphics.__canvas.getContext (\"2d\");\n\t\t\t\t\t//untyped (context).mozImageSmoothingEnabled = false;\n\t\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = false;\n\t\t\t\t\t//context.imageSmoothingEnabled = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext = graphics.__context;\n\t\t\t\t\n\t\t\t\tgraphics.__canvas.width = Math.ceil (bounds.width);\n\t\t\t\tgraphics.__canvas.height = Math.ceil (bounds.height);\n\t\t\t\t\n\t\t\t\tvar offsetX = bounds.x;\n\t\t\t\tvar offsetY = bounds.y;\n\t\t\t\t\n\t\t\t\tvar bitmapFill:BitmapData = null;\n\t\t\t\tvar bitmapRepeat = false;\n\t\t\t\t\n\t\t\t\tfor (command in graphics.__commands) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (command) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase BeginBitmapFill (bitmap, matrix, repeat, smooth):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (bitmap != bitmapFill || repeat != bitmapRepeat) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbitmapFill = bitmap;\n\t\t\t\t\t\t\t\tbitmapRepeat = repeat;\n\t\t\t\t\t\t\t\tpattern = null;\n\t\t\t\t\t\t\t\tsetFill = false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbitmap.__sync ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (matrix != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpendingMatrix = matrix;\n\t\t\t\t\t\t\t\tinversePendingMatrix = matrix.clone ();\n\t\t\t\t\t\t\t\tinversePendingMatrix.invert ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpendingMatrix = null;\n\t\t\t\t\t\t\t\tinversePendingMatrix = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\thasFill = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase BeginFill (rgb, alpha):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (alpha == 1) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (rgb, 6);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar r = (rgb & 0xFF0000) >>> 16;\n\t\t\t\t\t\t\t\tvar g = (rgb & 0x00FF00) >>> 8;\n\t\t\t\t\t\t\t\tvar b = (rgb & 0x0000FF);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.fillStyle = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\t\tsetFill = true;\n\t\t\t\t\t\t\thasFill = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CubicCurveTo (cx1, cy1, cx2, cy2, x, y):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.bezierCurveTo (cx1 - offsetX, cy1 - offsetY, cx2 - offsetX, cy2 - offsetY, x - offsetX, y - offsetY);\n\t\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CurveTo (cx, cy, x, y):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.quadraticCurveTo (cx - offsetX, cy - offsetY, x - offsetX, y - offsetY);\n\t\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawCircle (x, y, radius):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.moveTo (x - offsetX + radius, y - offsetY);\n\t\t\t\t\t\t\tcontext.arc (x - offsetX, y - offsetY, radius, 0, Math.PI * 2, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawEllipse (x, y, width, height):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tx -= offsetX;\n\t\t\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar kappa = .5522848,\n\t\t\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\n\t\t\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\n\t\t\t\t\t\t\t\txe = x + width,           // x-end\n\t\t\t\t\t\t\t\tye = y + height,           // y-end\n\t\t\t\t\t\t\t\txm = x + width / 2,       // x-middle\n\t\t\t\t\t\t\t\tym = y + height / 2;       // y-middle\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.moveTo (x, ym);\n\t\t\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawRect (x, y, width, height):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar optimizationUsed = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (bitmapFill != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar st:Float = 0;\n\t\t\t\t\t\t\t\tvar sr:Float = 0;\n\t\t\t\t\t\t\t\tvar sb:Float = 0;\n\t\t\t\t\t\t\t\tvar sl:Float = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar canOptimizeMatrix = true;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (pendingMatrix.b != 0 || pendingMatrix.c != 0) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcanOptimizeMatrix = false;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar stl = inversePendingMatrix.transformPoint(new Point(x, y));\n\t\t\t\t\t\t\t\t\t\tvar sbr = inversePendingMatrix.transformPoint(new Point(x + width, y + height));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tst = stl.y;\n\t\t\t\t\t\t\t\t\t\tsl = stl.x;\n\t\t\t\t\t\t\t\t\t\tsb = sbr.y;\n\t\t\t\t\t\t\t\t\t\tsr = sbr.x;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tst = y;\n\t\t\t\t\t\t\t\t\tsl = x;\n\t\t\t\t\t\t\t\t\tsb = y + height;\n\t\t\t\t\t\t\t\t\tsr = x + width;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (canOptimizeMatrix && st >= 0 && sl >= 0 && sr <= bitmapFill.width && sb <= bitmapFill.height) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\toptimizationUsed = true;\n\t\t\t\t\t\t\t\t\tcontext.drawImage (bitmapFill.__image.src, sl, st, sr - sl, sb - st, x - offsetX, y - offsetY, width, height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!optimizationUsed) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\t\tcontext.rect (x - offsetX, y - offsetY, width, height);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawRoundRect (x, y, width, height, rx, ry):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill (bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tdrawRoundRect (x - offsetX, y - offsetY, width, height, rx, ry);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawTiles (sheet, tileData, smooth, flags, count):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar useScale = (flags & Graphics.TILE_SCALE) > 0;\n\t\t\t\t\t\t\tvar useRotation = (flags & Graphics.TILE_ROTATION) > 0;\n\t\t\t\t\t\t\tvar useTransform = (flags & Graphics.TILE_TRANS_2x2) > 0;\n\t\t\t\t\t\t\tvar useRGB = (flags & Graphics.TILE_RGB) > 0;\n\t\t\t\t\t\t\tvar useAlpha = (flags & Graphics.TILE_ALPHA) > 0;\n\t\t\t\t\t\t\tvar useRect = (flags & Graphics.TILE_RECT) > 0;\n\t\t\t\t\t\t\tvar useOrigin = (flags & Graphics.TILE_ORIGIN) > 0;\n\t\t\t\t\t\t\tvar useBlendAdd = (flags & Graphics.TILE_BLEND_ADD) > 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (useTransform) { useScale = false; useRotation = false; }\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar scaleIndex = 0;\n\t\t\t\t\t\t\tvar rotationIndex = 0;\n\t\t\t\t\t\t\tvar rgbIndex = 0;\n\t\t\t\t\t\t\tvar alphaIndex = 0;\n\t\t\t\t\t\t\tvar transformIndex = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar numValues = 3;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\n\t\t\t\t\t\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\n\t\t\t\t\t\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\n\t\t\t\t\t\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\n\t\t\t\t\t\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\n\t\t\t\t\t\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar totalCount = tileData.length;\n\t\t\t\t\t\t\tif (count >= 0 && totalCount > count) totalCount = count;\n\t\t\t\t\t\t\tvar itemCount = Std.int (totalCount / numValues);\n\t\t\t\t\t\t\tvar index = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar rect = null;\n\t\t\t\t\t\t\tvar center = null;\n\t\t\t\t\t\t\tvar previousTileID = -1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar surface:Dynamic;\n\t\t\t\t\t\t\tsheet.__bitmap.__sync ();\n\t\t\t\t\t\t\tsurface = sheet.__bitmap.__image.src;\n\n\t\t\t\t\t\t\tif (useBlendAdd)\n\t\t\t\t\t\t\t\tcontext.globalCompositeOperation = \"lighter\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twhile (index < totalCount) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar tileID = (!useRect) ? Std.int (tileData[index + 2]) : -1;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!useRect && tileID != previousTileID) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\trect = sheet.__tileRects[tileID];\n\t\t\t\t\t\t\t\t\tcenter = sheet.__centerPoints[tileID];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpreviousTileID = tileID;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (useRect)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trect = sheet.__rectTile;\n\t\t\t\t\t\t\t\t\trect.setTo(tileData[index + 2], tileData[index + 3], tileData[index + 4], tileData[index + 5]);\n\t\t\t\t\t\t\t\t\tcenter = sheet.__point;\n\t\t\t\t\t\t\t\t\tif (useOrigin)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcenter.setTo(tileData[index + 6], tileData[index + 7]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcenter.setTo(0, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (rect != null && rect.width > 0 && rect.height > 0 && center != null) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.save ();\n\t\t\t\t\t\t\t\t\tcontext.translate (tileData[index], tileData[index + 1]);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (useRotation) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcontext.rotate (tileData[index + rotationIndex]);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar scale = 1.0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (useScale) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tscale = tileData[index + scaleIndex];\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (useTransform) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcontext.transform (tileData[index + transformIndex], tileData[index + transformIndex + 1], tileData[index + transformIndex + 2], tileData[index + transformIndex + 3], 0, 0);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (useAlpha) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcontext.globalAlpha = tileData[index + alphaIndex];\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.drawImage (surface, rect.x, rect.y, rect.width, rect.height, -center.x * scale, -center.y * scale, rect.width * scale, rect.height * scale);\n\t\t\t\t\t\t\t\t\tcontext.restore ();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tindex += numValues;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (useBlendAdd)\n\t\t\t\t\t\t\t\tcontext.globalCompositeOperation = \"source-over\";\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase EndFill:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath (true);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (thickness == null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasStroke = false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.lineWidth = thickness;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.lineJoin = (joints == null ? \"round\" : Std.string (joints).toLowerCase ());\n\t\t\t\t\t\t\t\tcontext.lineCap = (caps == null ? \"round\" : switch (caps) {\n\t\t\t\t\t\t\t\t\tcase CapsStyle.NONE: \"butt\";\n\t\t\t\t\t\t\t\t\tdefault: Std.string (caps).toLowerCase ();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.miterLimit = (miterLimit == null ? 3 : miterLimit);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (alpha == 1 || alpha == null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.strokeStyle = (color == null ? \"#000000\" : \"#\" + StringTools.hex (color & 0x00FFFFFF, 6));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar r = (color & 0xFF0000) >>> 16;\n\t\t\t\t\t\t\t\t\tvar g = (color & 0x00FF00) >>> 8;\n\t\t\t\t\t\t\t\t\tvar b = (color & 0x0000FF);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.strokeStyle = (color == null ? \"#000000\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\");\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\thasStroke = true;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LineTo (x, y):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPatternFill(bitmapFill, bitmapRepeat);\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.lineTo (x - offsetX, y - offsetY);\n\t\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tcase MoveTo (x, y):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbeginPath ();\n\t\t\t\t\t\t\tcontext.moveTo (x - offsetX, y - offsetY);\n\t\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tcase DrawTriangles (vertices, indices, uvtData, culling, _, _):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclosePath(false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar v = vertices;\n\t\t\t\t\t\t\tvar ind = indices;\n\t\t\t\t\t\t\tvar uvt = uvtData;\n\t\t\t\t\t\t\tvar pattern:CanvasElement = null;\n\t\t\t\t\t\t\tvar colorFill = bitmapFill == null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (colorFill && uvt != null) {\n\t\t\t\t\t\t\t\t// Flash doesn't draw anything if the fill isn't a bitmap and there are uvt values\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!colorFill) {\n\t\t\t\t\t\t\t\t//TODO move this to Graphics?\n\t\t\t\t\t\t\t\tif (uvtData == null) {\n\t\t\t\t\t\t\t\t\tuvtData = new Vector<Float>();\n\t\t\t\t\t\t\t\t\tfor (i in 0...(Std.int(v.length / 2))) {\n\t\t\t\t\t\t\t\t\t\tuvtData.push(v[i * 2] / bitmapFill.width);\n\t\t\t\t\t\t\t\t\t\tuvtData.push(v[i * 2 + 1] / bitmapFill.height);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar skipT = uvtData.length != v.length;\n\t\t\t\t\t\t\t\tvar normalizedUvt = normalizeUvt(uvtData, skipT);\n\t\t\t\t\t\t\t\tvar maxUvt = normalizedUvt.max;\n\t\t\t\t\t\t\t\tuvt = normalizedUvt.uvt;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (maxUvt > 1) {\n\t\t\t\t\t\t\t\t\tpattern = createTempPatternCanvas(bitmapFill, bitmapRepeat, bounds.width, bounds.height);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpattern = createTempPatternCanvas(bitmapFill, bitmapRepeat, bitmapFill.width, bitmapFill.height);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar i = 0;\n\t\t\t\t\t\t\tvar l = ind.length;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar a:Int, b:Int, c:Int;\n\t\t\t\t\t\t\tvar iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;\n\t\t\t\t\t\t\tvar x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;\n\t\t\t\t\t\t\tvar uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;\n\t\t\t\t\t\t\tvar denom:Float;\n\t\t\t\t\t\t\tvar t1:Float, t2:Float, t3:Float, t4:Float;\n\t\t\t\t\t\t\tvar dx:Float, dy:Float;\n\t\t\t\t\t\t\t// code from http://tulrich.com/geekstuff/canvas/perspective.html\n\t\t\t\t\t\t\twhile (i < l) {\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\t\tc = i + 2;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tiax = ind[a] * 2;\t\tiay = ind[a] * 2 + 1;\n\t\t\t\t\t\t\t\tibx = ind[b] * 2;\t\tiby = ind[b] * 2 + 1;\n\t\t\t\t\t\t\t\ticx = ind[c] * 2;\t\ticy = ind[c] * 2 + 1;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx1 = v[iax];\ty1 = v[iay];\n\t\t\t\t\t\t\t\tx2 = v[ibx];\ty2 = v[iby];\n\t\t\t\t\t\t\t\tx3 = v[icx];\ty3 = v[icy];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tswitch(culling) {\n\t\t\t\t\t\t\t\t\tcase POSITIVE:\n\t\t\t\t\t\t\t\t\t\tif (!isCCW(x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase NEGATIVE:\n\t\t\t\t\t\t\t\t\t\tif (isCCW(x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (colorFill) {\n\t\t\t\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\t\t\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\t\t\t\t\t\tcontext.lineTo(x3, y3);\n\t\t\t\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\t\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\t\t\t\t\tcontext.lineTo(x3, y3);\n\t\t\t\t\t\t\t\tcontext.closePath();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.clip(); \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuvx1 = uvt[iax] * pattern.width;\n\t\t\t\t\t\t\t\tuvx2 = uvt[ibx] * pattern.width;\n\t\t\t\t\t\t\t\tuvx3 = uvt[icx] * pattern.width;\n\t\t\t\t\t\t\t\tuvy1 = uvt[iay] * pattern.height;\n\t\t\t\t\t\t\t\tuvy2 = uvt[iby] * pattern.height;\n\t\t\t\t\t\t\t\tuvy3 = uvt[icy] * pattern.height;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdenom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;\n\t\t\t\t\t\t\t\tif (denom == 0) {\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tt1 = - (uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;\n\t\t\t\t\t\t\t\tt2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;\n\t\t\t\t\t\t\t\tt3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;\n\t\t\t\t\t\t\t\tt4 = - (uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;\n\t\t\t\t\t\t\t\tdx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;\n\t\t\t\t\t\t\t\tdy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.transform(t1, t2, t3, t4, dx, dy);\n\t\t\t\t\t\t\t\tcontext.drawImage(pattern, 0, 0);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\topenfl.Lib.notImplemented(\"CanvasGraphics\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgraphics.__dirty = false;\n\t\t\tclosePath (false);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function renderMask (graphics:Graphics, renderSession:RenderSession) {\n\t\t\n\t\tif (graphics.__commands.length != 0) {\n\t\t\t\n\t\t\tvar context = renderSession.context;\n\t\t\t\n\t\t\tvar positionX = 0.0;\n\t\t\tvar positionY = 0.0;\n\t\t\t\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\t\t\t\n\t\t\tfor (command in graphics.__commands) {\n\t\t\t\t\n\t\t\t\tswitch (command) {\n\t\t\t\t\t\n\t\t\t\t\tcase CubicCurveTo (cx1, cx2, cy1, cy2, x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.bezierCurveTo (cx1 - offsetX, cy1 - offsetY, cx2 - offsetX, cy2 - offsetY, x - offsetX, y - offsetY);\n\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\n\t\t\t\t\tcase CurveTo (cx, cy, x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.quadraticCurveTo (cx - offsetX, cy - offsetY, x - offsetX, y - offsetY);\n\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\n\t\t\t\t\tcase DrawCircle (x, y, radius):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.arc (x - offsetX, y - offsetY, radius, 0, Math.PI * 2, true);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawEllipse (x, y, width, height):\n\t\t\t\t\t\t\n\t\t\t\t\t\tx -= offsetX;\n\t\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar kappa = .5522848,\n\t\t\t\t\t\t\tox = (width / 2) * kappa, // control point offset horizontal\n\t\t\t\t\t\t\toy = (height / 2) * kappa, // control point offset vertical\n\t\t\t\t\t\t\txe = x + width,           // x-end\n\t\t\t\t\t\t\tye = y + height,           // y-end\n\t\t\t\t\t\t\txm = x + width / 2,       // x-middle\n\t\t\t\t\t\t\tym = y + height / 2;       // y-middle\n\t\t\t\t\t\t\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\t//beginPath ();\n\t\t\t\t\t\tcontext.moveTo (x, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawRect (x, y, width, height):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.rect (x - offsetX, y - offsetY, width, height);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawRoundRect (x, y, width, height, rx, ry):\n\t\t\t\t\t\t\n\t\t\t\t\t\tdrawRoundRect (x - offsetX, y - offsetY, width, height, rx, ry);\n\t\t\t\t\t\n\t\t\t\t\tcase LineTo (x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.lineTo (x - offsetX, y - offsetY);\n\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\t\n\t\t\t\t\tcase MoveTo (x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.moveTo (x - offsetX, y - offsetY);\n\t\t\t\t\t\tpositionX = x;\n\t\t\t\t\t\tpositionY = y;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tprivate static function createTempPatternCanvas(bitmap:BitmapData, repeat:Bool, width:Float, height:Float) {\n\t\t\n\t\t#if js\n\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\n\t\tvar context:CanvasRenderingContext2D = canvas.getContext (\"2d\");\n\t\t\n\t\tcanvas.width = Math.ceil (width);\n\t\tcanvas.height = Math.ceil (height);\n\t\t\n\t\tcontext.fillStyle = context.createPattern(bitmap.__image.src, repeat ? \"repeat\" : \"no-repeat\");\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(0, 0);\n\t\tcontext.lineTo(0, height);\n\t\tcontext.lineTo(width, height);\n\t\tcontext.lineTo(width, 0);\n\t\tcontext.lineTo(0, 0);\n\t\tcontext.closePath();\n\t\tcontext.fill();\n\t\treturn canvas;\n\t\t#end\n\t}\n\t\n\tprivate static inline function isCCW(x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\n\t}\n\t\n\tprivate static function normalizeUvt(uvt:Vector<Float>, skipT:Bool = false):{max:Float, uvt:Vector<Float> } {\n\t\tvar max:Float = Math.NEGATIVE_INFINITY;\n\t\tvar tmp = Math.NEGATIVE_INFINITY;\n\t\tvar len = uvt.length;\n\t\tfor (t in 1...len+1) {\n\t\t\tif (skipT && t % 3 == 0) continue;\n\t\t\ttmp = uvt[t - 1];\n\t\t\tif (max < tmp) max = tmp;\n\t\t}\n\t\t\n\t\tvar result:Vector<Float> = new Vector<Float>();\n\t\tfor (t in 1...len+1) {\n\t\t\tif (skipT && t % 3 == 0) continue;\n\t\t\tresult.push((uvt[t - 1] / max));\n\t\t}\n\t\t\n\t\treturn {max:max, uvt:result};\n\t}\n\t\n}\n","package openfl._internal.renderer.canvas;\n\n\nimport lime.graphics.CanvasRenderContext;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Stage;\n\n@:access(openfl.display.Stage)\n\n\nclass CanvasRenderer extends AbstractRenderer {\n\t\n\t\n\tprivate var context:CanvasRenderContext;\n\t\n\t\n\tpublic function new (width:Int, height:Int, context:CanvasRenderContext) {\n\t\t\n\t\tsuper (width, height);\n\t\t\n\t\tthis.context = context;\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.context = context;\n\t\trenderSession.roundPixels = true;\n\t\trenderSession.renderer = this;\n\t\trenderSession.maskManager = new MaskManager(renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic override function render (stage:Stage):Void {\n\t\t\n\t\tcontext.setTransform (1, 0, 0, 1, 0, 0);\n\t\tcontext.globalAlpha = 1;\n\t\t\n\t\tif (!stage.__transparent && stage.__clearBeforeRender) {\n\t\t\t\n\t\t\tcontext.fillStyle = stage.__colorString;\n\t\t\tcontext.fillRect (0, 0, stage.stageWidth, stage.stageHeight);\n\t\t\t\n\t\t} else if (stage.__transparent && stage.__clearBeforeRender) {\n\t\t\t\n\t\t\tcontext.clearRect (0, 0, stage.stageWidth, stage.stageHeight);\n\t\t\t\n\t\t}\n\t\t\n\t\tstage.__renderCanvas (renderSession);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport openfl.display.DisplayObject;\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n\n\nclass CanvasShape {\n\t\n\t\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if js\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\n\t\t\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (graphics != null) {\n\t\t\t\n\t\t\t//#if old\n\t\t\tCanvasGraphics.render (graphics, renderSession);\n\t\t\t//#else\n\t\t\t//CanvasGraphics.renderObjectGraphics (shape, renderSession);\n\t\t\t//#end\n\t\t\t\n\t\t\tif (graphics.__canvas != null) {\n\t\t\t\t\n\t\t\t\tif (shape.__mask != null) {\n\t\t\t\t\t\n\t\t\t\t\trenderSession.maskManager.pushMask (shape.__mask);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar context = renderSession.context;\n\t\t\t\tvar scrollRect = shape.scrollRect;\n\t\t\t\t\n\t\t\t\tcontext.globalAlpha = shape.__worldAlpha;\n\t\t\t\tvar transform = shape.__worldTransform;\n\t\t\t\t\n\t\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (scrollRect == null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.drawImage (graphics.__canvas, graphics.__bounds.x, graphics.__bounds.y);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tcontext.drawImage (graphics.__canvas, scrollRect.x - graphics.__bounds.x, scrollRect.y - graphics.__bounds.y, scrollRect.width, scrollRect.height, graphics.__bounds.x + scrollRect.x, graphics.__bounds.y + scrollRect.y, scrollRect.width, scrollRect.height);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (shape.__mask != null) {\n\t\t\t\t\t\n\t\t\t\t\trenderSession.maskManager.popMask ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport openfl.display.*;\nimport openfl.geom.*;\n\n@:access(openfl.display.DisplayObject)\n@:keep\n\n\nclass MaskManager {\n\t\n\t\n\tprivate var renderSession:RenderSession;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushMask (mask:DisplayObject):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tcontext.save ();\n\t\t\n\t\t//var cacheAlpha = mask.__worldAlpha;\n\t\tvar transform = mask.__getTransform ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tmask.__renderMask (renderSession);\n\t\t\n\t\tcontext.clip ();\n\t\t\n\t\t//mask.worldAlpha = cacheAlpha;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\tcontext.save ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tcontext.rect (rect.x, rect.y, rect.width, rect.height);\n\t\tcontext.clip ();\n\t\t\n\t}\n\t\n\t\n\tpublic function popMask ():Void {\n\t\t\n\t\trenderSession.context.restore ();\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport lime.graphics.DOMRenderContext;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.DisplayObject;\nimport openfl.display.Stage;\n\n#if js\nimport js.html.Element;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Stage)\n\n\nclass DOMRenderer extends AbstractRenderer {\n\t\n\t\n\tprivate var element:DOMRenderContext;\n\t\n\t\n\tpublic function new (width:Int, height:Int, element:DOMRenderContext) {\n\t\t\n\t\tsuper (width, height);\n\t\t\n\t\tthis.element = element;\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.element = element;\n\t\trenderSession.roundPixels = true;\n\t\t\n\t\t#if js\n\t\tvar prefix = untyped __js__ (\"(function () {\n\t\t  var styles = window.getComputedStyle(document.documentElement, ''),\n\t\t\tpre = (Array.prototype.slice\n\t\t\t  .call(styles)\n\t\t\t  .join('') \n\t\t\t  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n\t\t\t)[1],\n\t\t\tdom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\n\t\t  return {\n\t\t\tdom: dom,\n\t\t\tlowercase: pre,\n\t\t\tcss: '-' + pre + '-',\n\t\t\tjs: pre[0].toUpperCase() + pre.substr(1)\n\t\t  };\n\t\t})\")();\n\t\t\n\t\trenderSession.vendorPrefix = prefix.lowercase;\n\t\trenderSession.transformProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform\" : \"transform\";\n\t\trenderSession.transformOriginProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform-origin\" : \"transform-origin\";\n\t\t#end\n\t\t\n\t\trenderSession.renderer = this;\n\t\t\n\t}\n\t\n\t\n\tpublic static function applyStyle (displayObject:DisplayObject, renderSession:RenderSession, setTransform:Bool, setAlpha:Bool, setClip:Bool):Void {\n\t\t\n\t\t#if js\n\t\tvar style = displayObject.__style;\n\t\t\n\t\tif (setTransform && displayObject.__worldTransformChanged) {\n\t\t\t\n\t\t\tstyle.setProperty (renderSession.transformProperty, displayObject.__worldTransform.to3DString (renderSession.roundPixels), null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__worldZ != ++renderSession.z) {\n\t\t\t\n\t\t\tdisplayObject.__worldZ = renderSession.z;\n\t\t\tstyle.setProperty (\"z-index\", Std.string (displayObject.__worldZ), null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (setAlpha && displayObject.__worldAlphaChanged) {\n\t\t\t\n\t\t\tif (displayObject.__worldAlpha < 1) {\n\t\t\t\t\n\t\t\t\tstyle.setProperty (\"opacity\", Std.string (displayObject.__worldAlpha), null);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tstyle.removeProperty (\"opacity\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (setClip && displayObject.__worldClipChanged) {\n\t\t\t\n\t\t\tif (displayObject.__worldClip == null) {\n\t\t\t\t\n\t\t\t\tstyle.removeProperty (\"clip\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar clip = displayObject.__worldClip.transform (displayObject.__worldTransform.clone ().invert ());\n\t\t\t\tstyle.setProperty (\"clip\", \"rect(\" + clip.y + \"px, \" + clip.right + \"px, \" + clip.bottom + \"px, \" + clip.x + \"px)\", null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if js\n\tpublic static function initializeElement (displayObject:DisplayObject, element:Element, renderSession:RenderSession):Void {\n\t\t\n\t\tvar style = displayObject.__style = element.style;\n\t\t\n\t\tstyle.setProperty (\"position\", \"absolute\", null);\n\t\tstyle.setProperty (\"top\", \"0\", null);\n\t\tstyle.setProperty (\"left\", \"0\", null);\n\t\tstyle.setProperty (renderSession.transformOriginProperty, \"0 0 0\", null);\n\t\t\n\t\trenderSession.element.appendChild (element);\n\t\t\n\t\tdisplayObject.__worldAlphaChanged = true;\n\t\tdisplayObject.__worldClipChanged = true;\n\t\tdisplayObject.__worldTransformChanged = true;\n\t\tdisplayObject.__worldVisibleChanged = true;\n\t\tdisplayObject.__worldZ = -1;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic override function render (stage:Stage):Void {\n\t\t\n\t\telement.style.background = stage.__colorString;\n\t\t\n\t\trenderSession.z = 1;\n\t\tstage.__renderDOM (renderSession);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Matrix;\n\n#if js\nimport js.Browser;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n\n\nclass DOMShape {\n\t\n\t\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if js\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (shape.stage != null && shape.__worldVisible && shape.__renderable && graphics != null) {\n\t\t\t\n\t\t\tif (graphics.__dirty || shape.__worldAlphaChanged || (shape.__canvas == null && graphics.__canvas != null)) {\n\t\t\t\t\n\t\t\t\t//#if old\n\t\t\t\tCanvasGraphics.render (graphics, renderSession);\n\t\t\t\t//#else\n\t\t\t\t//CanvasGraphics.renderObjectGraphics (shape, renderSession);\n\t\t\t\t//#end\n\t\t\t\t\n\t\t\t\tif (graphics.__canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (shape.__canvas == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tshape.__canvas = cast Browser.document.createElement (\"canvas\");\t\n\t\t\t\t\t\tshape.__context = shape.__canvas.getContext (\"2d\");\n\t\t\t\t\t\tDOMRenderer.initializeElement (shape, shape.__canvas, renderSession);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tshape.__canvas.width = graphics.__canvas.width;\n\t\t\t\t\tshape.__canvas.height = graphics.__canvas.height;\n\t\t\t\t\t\n\t\t\t\t\tshape.__context.globalAlpha = shape.__worldAlpha;\n\t\t\t\t\tshape.__context.drawImage (graphics.__canvas, 0, 0);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (shape.__canvas != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\trenderSession.element.removeChild (shape.__canvas);\n\t\t\t\t\t\tshape.__canvas = null;\n\t\t\t\t\t\tshape.__style = null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (shape.__canvas != null) {\n\t\t\t\t\n\t\t\t\tif (shape.__worldTransformChanged || graphics.__transformDirty) {\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__transformDirty = false;\n\t\t\t\t\t\n\t\t\t\t\tvar transform = new Matrix ();\n\t\t\t\t\ttransform.translate (graphics.__bounds.x, graphics.__bounds.y);\n\t\t\t\t\ttransform = transform.mult (shape.__worldTransform);\n\t\t\t\t\t\n\t\t\t\t\tshape.__style.setProperty (renderSession.transformProperty, transform.to3DString (renderSession.roundPixels), null);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDOMRenderer.applyStyle (shape, renderSession, false, false, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (shape.__canvas != null) {\n\t\t\t\t\n\t\t\t\trenderSession.element.removeChild (shape.__canvas);\n\t\t\t\tshape.__canvas = null;\n\t\t\t\tshape.__style = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.opengl.GL;\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.opengl.utils.*;\nimport openfl._internal.renderer.opengl.utils.MaskManager;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BlendMode;\nimport openfl.display.DisplayObject;\nimport openfl.display.Stage;\nimport openfl.errors.Error;\nimport openfl.geom.Point;\n\n@:access(lime.graphics.opengl.GL)\n@:access(openfl.display.Stage)\n\n\nclass GLRenderer extends AbstractRenderer {\n\t\n\t\n\tpublic static var blendModesWebGL:Map <BlendMode, Array<Int>> = null;\n\tpublic static var glContextId:Int = 0;\n\tpublic static var glContexts = [];\n\t\n\tpublic var blendModeManager:BlendModeManager;\n\tpublic var contextLost:Bool;\n\tpublic var filterManager:FilterManager;\n\tpublic var gl:GLRenderContext;\n\tpublic var _glContextId:Int;\n\tpublic var maskManager:MaskManager;\n\tpublic var offset:Point;\n\tpublic var options:Dynamic;\n\tpublic var preserveDrawingBuffer:Bool;\n\tpublic var projection:Point;\n\tpublic var shaderManager:ShaderManager;\n\tpublic var spriteBatch:SpriteBatch;\n\tpublic var stencilManager:StencilManager;\n\tpublic var transparent:Bool;\n\tpublic var view:Dynamic;\n\t\n\tprivate var __stage:Dynamic;\n\t\n\t\n\tpublic function new (width:Int = 800, height:Int = 600, gl:GLRenderContext /*view:Dynamic = null*/, transparent:Bool = false, antialias:Bool = false, preserveDrawingBuffer:Bool = false) {\n\t\t\n\t\tsuper (width, height);\n\t\t\n\t\tthis.transparent = transparent;\n\t\tthis.preserveDrawingBuffer = preserveDrawingBuffer;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tthis.options = {\n\t\t\talpha: transparent,\n\t\t\tantialias: antialias, \n\t\t\tpremultipliedAlpha: transparent,\n\t\t\tstencil: true,\n\t\t\tpreserveDrawingBuffer: preserveDrawingBuffer\n\t\t};\n\t\t\n\t\t_glContextId = glContextId ++;\n\t\tthis.gl = gl;\n\t\t\n\t\tglContexts[_glContextId] = gl;\n\t\t\n\t\tif (blendModesWebGL == null) {\n\t\t\t\n\t\t\tblendModesWebGL = new Map ();\n\t\t\t\n\t\t\tblendModesWebGL.set (BlendMode.NORMAL, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.ADD, [ gl.SRC_ALPHA, gl.DST_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.MULTIPLY, [ gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.SCREEN, [ gl.SRC_ALPHA, gl.ONE ]);\n\t\t\t\n\t\t\tblendModesWebGL.set (BlendMode.ALPHA, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.DARKEN, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.DIFFERENCE, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.ERASE, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.HARDLIGHT, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.INVERT, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.LAYER, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.LIGHTEN, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.OVERLAY, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\tblendModesWebGL.set (BlendMode.SUBTRACT, [ gl.ONE, gl.ONE_MINUS_SRC_ALPHA ]);\n\t\t\t\n\t\t}\n\t\t\n\t\tprojection = new Point ();\n\t\tprojection.x =  this.width / 2;\n\t\tprojection.y =  -this.height / 2;\n\t\t\n\t\toffset = new Point (0, 0);\n\t\t\n\t\tresize (this.width, this.height);\n\t\tcontextLost = false;\n\t\t\n\t\tshaderManager = new ShaderManager (gl);\n\t\tspriteBatch = new SpriteBatch (gl);\n\t\tmaskManager = new openfl._internal.renderer.opengl.utils.MaskManager (gl);\n\t\tfilterManager = new FilterManager (gl, this.transparent);\n\t\tstencilManager = new StencilManager (gl);\n\t\tblendModeManager = new BlendModeManager (gl);\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.gl = this.gl;\n\t\trenderSession.drawCount = 0;\n\t\trenderSession.shaderManager = this.shaderManager;\n\t\trenderSession.maskManager = this.maskManager;\n\t\trenderSession.filterManager = this.filterManager;\n\t\trenderSession.blendModeManager = this.blendModeManager;\n\t\trenderSession.spriteBatch = this.spriteBatch;\n\t\trenderSession.stencilManager = this.stencilManager;\n\t\trenderSession.renderer = this;\n\t\t\n\t\tgl.useProgram (shaderManager.defaultShader.program);\n\t\t\n\t\tgl.disable (gl.DEPTH_TEST);\n\t\tgl.disable (gl.CULL_FACE);\n\t\t\n\t\tgl.enable (gl.BLEND);\n\t\tgl.colorMask (true, true, true, this.transparent);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\t//this.view.removeEventListener('webglcontextlost', this.handleContextLost);\n\t\t//this.view.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\t\t\n\t\tglContexts[_glContextId] = null;\n\t\t\n\t\tprojection = null;\n\t\toffset = null;\n\t\t\n\t\tshaderManager.destroy ();\n\t\tspriteBatch.destroy ();\n\t\tmaskManager.destroy ();\n\t\tfilterManager.destroy ();\n\t\t\n\t\tshaderManager = null;\n\t\tspriteBatch = null;\n\t\tmaskManager = null;\n\t\tfilterManager = null;\n\t\t\n\t\tthis.gl = null;\n\t\t\n\t\trenderSession = null;\n\t\t\n\t}\n\t\n\t\n\t/*private static function destroyTexture (texture:BaseTexture):Void {\n\t\t\n\t\tvar i = texture._glTextures.length - 1;\n\t\t\n\t\twhile (i >= 0) {\n\t\t\t\n\t\t\tvar glTexture = texture._glTextures[i];\n\t\t\tvar gl = glContexts[i];\n\t\t\t\n\t\t\tif (gl != null && glTexture != null) {\n\t\t\t\t\n\t\t\t\tgl.deleteTexture (glTexture);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\ttexture._glTextures = [];\n\t\t\n\t}*/\n\t\n\t\n\tprivate function handleContextLost (event:Dynamic):Void {\n\t\t\n\t\tevent.preventDefault ();\n\t\tcontextLost = true;\n\t\t\n\t}\n\t\n\t\n\tprivate function handleContextRestored ():Void {\n\t\t\n\t\t/*try {\n\t\t\t\n\t\t\tgl = this.view.getContext ('experimental-webgl',  this.options);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tthis.gl = this.view.getContext ('webgl',  this.options);\n\t\t\t\t\n\t\t\t} catch (e2:Dynamic) {\n\t\t\t\t\n\t\t\t\tthrow new Error ('This browser does not support webGL. Try using the canvas renderer' + this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}*/\n\t\t\n\t\tvar gl = this.gl;\n\t\tglContextId++;\n\t\t\n\t\tshaderManager.setContext (gl);\n\t\tspriteBatch.setContext (gl);\n\t\tmaskManager.setContext (gl);\n\t\tfilterManager.setContext (gl);\n\t\t\n\t\trenderSession.gl = gl;\n\t\t\n\t\tgl.disable (gl.DEPTH_TEST);\n\t\tgl.disable (gl.CULL_FACE);\n\t\t\n\t\tgl.enable (gl.BLEND);\n\t\tgl.colorMask (true, true, true, transparent);\n\t\t\n\t\tgl.viewport (0, 0, width, height);\n\t\t\n\t\t/*for (key in Texture.TextureCache.keys ()) {\n\t\t\t\n\t\t\tvar texture = Texture.TextureCache.get (key).baseTexture;\n\t\t\ttexture._glTextures = [];\n\t\t\t\n\t\t}*/\n\t\t\n\t\tcontextLost = false;\n\t\t\n\t}\n\t\n\t\n\tpublic override function render (stage:Stage):Void {\n\t\t\n\t\tif (contextLost) return;\n\t\t\n\t\t//updateTextures ();\n\t\t\n\t\tvar gl = this.gl;\n\t\tgl.viewport (0, 0, width, height);\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, null);\n\t\t\n\t\tif (this.transparent) {\n\t\t\t\n\t\t\tgl.clearColor (0, 0, 0, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl.clearColor (Std.int (stage.__colorSplit[0]), Std.int (stage.__colorSplit[1]), Std.int (stage.__colorSplit[2]), 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\trenderDisplayObject (stage, projection);\n\t\t\n\t}\n\t\n\t\n\tpublic function renderDisplayObject (displayObject:DisplayObject, projection:Point, buffer:GLFramebuffer = null):Void {\n\t\t\n\t\trenderSession.blendModeManager.setBlendMode (BlendMode.NORMAL);\n\t\t\n\t\trenderSession.drawCount = 0;\n\t\trenderSession.currentBlendMode = null;\n\t\t\n\t\trenderSession.projection = projection;\n\t\trenderSession.offset = offset;\n\t\t\n\t\tspriteBatch.begin (renderSession);\n\t\tfilterManager.begin (renderSession, buffer);\n\t\tdisplayObject.__renderGL (renderSession);\n\t\t\n\t\tspriteBatch.end ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function resize (width:Int, height:Int):Void {\n\t\t\n\t\tsuper.resize (width, height);\n\t\t\n\t\tgl.viewport (0, 0, width, height);\n\t\t\n\t\tprojection.x =  width / 2;\n\t\tprojection.y =  -height / 2;\n\t\t\n\t}\n\t\n\t\n\t/*private static function updateTextureFrame (texture:Texture):Void {\n\t\t\n\t\ttexture._updateWebGLuvs ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function updateTextures ():Void {\n\t\t\n\t\tfor (frame in Texture.frameUpdates) {\n\t\t\t\n\t\t\tupdateTextureFrame (frame);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (texture in Texture.texturesToDestroy) {\n\t\t\t\n\t\t\tdestroyTexture (texture);\n\t\t\t\n\t\t}\n\t\t\n\t\tTexture.texturesToUpdate = [];\n\t\tTexture.texturesToDestroy = [];\n\t\tTexture.frameUpdates = [];\n\t\t\n\t}*/\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass AbstractShader {\n\t\n\t\n\tprivate static var __UID = 0;\n\t\n\tpublic var attributes:Array<Int>;\n\tpublic var aTextureCoord:Int;\n\tpublic var aVertexPosition:Int;\n\tpublic var colorAttribute:Int;\n\tpublic var fragmentSrc:Array<String>;\n\tpublic var gl:GLRenderContext;\n\tpublic var program:GLProgram;\n\tpublic var projectionVector:GLUniformLocation;\n\tpublic var uniforms:Map<String, Dynamic>;\n\tpublic var vertexSrc:Array<String>;\n\tpublic var _UID:Int;\n\t\n\t\n\tprivate function new (gl:GLRenderContext) {\n\t\t\n\t\t_UID = __UID++;\n\t\t\n\t\tthis.gl = gl;\n\t\tprogram = null;\n\t\t\n\t\tattributes = [];\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tif (program != null) {\n\t\t\t\n\t\t\tgl.deleteProgram (program);\n\t\t\t\n\t\t}\n\t\t\n\t\tuniforms = null;\n\t\tgl = null;\n\t\tattributes = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function init ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tvar program = AbstractShader.compileProgram (gl, vertexSrc, fragmentSrc);\n\t\tgl.useProgram (program);\n\t\t\n\t\tthis.program = program;\n\t\t\n\t}\n\t\n\t\n\tpublic static function compileProgram (gl:GLRenderContext, vertexSrc, fragmentSrc):Dynamic {\n\t\t\n\t\tvar fragmentShader = AbstractShader.CompileFragmentShader (gl, fragmentSrc);\n\t\tvar vertexShader = AbstractShader.CompileVertexShader (gl, vertexSrc);\n\t\t\n\t\tvar shaderProgram = gl.createProgram ();\n\t\t\n\t\tif (fragmentShader != null && vertexShader != null) {\n\t\t\t\n\t\t\tgl.attachShader (shaderProgram, vertexShader);\n\t\t\tgl.attachShader (shaderProgram, fragmentShader);\n\t\t\tgl.linkProgram (shaderProgram);\n\t\t\t\n\t\t\tif (gl.getProgramParameter(shaderProgram, gl.LINK_STATUS) == 0) {\n\t\t\t\t\n\t\t\t\ttrace (\"Could not initialize shaders\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn shaderProgram;\n\t\t\n\t}\n\t\n\t\n\tpublic static function CompileVertexShader (gl:GLRenderContext, shaderSrc) {\n\t\t\n\t\treturn AbstractShader._CompileShader (gl, shaderSrc, gl.VERTEX_SHADER);\n\t\t\n\t}\n\t\n\t\n\tpublic static function CompileFragmentShader (gl:GLRenderContext, shaderSrc) {\n\t\t\n\t\treturn AbstractShader._CompileShader (gl, shaderSrc, gl.FRAGMENT_SHADER);\n\t\t\n\t}\n\t\n\t\n\tpublic static function _CompileShader (gl:GLRenderContext, shaderSrc, shaderType) {\n\t\t\n\t\tvar src = shaderSrc.join (\"\\n\");\n\t\tvar shader = gl.createShader (shaderType);\n\t\tgl.shaderSource (shader, src);\n\t\tgl.compileShader (shader);\n\t\t\n\t\tif (gl.getShaderParameter (shader, gl.COMPILE_STATUS) == 0) {\n\t\t\t\n\t\t\t//trace (\"Error compiling \" + Type.getClassName (Type.getClass (this)));\n\t\t\ttrace (gl.getShaderInfoLog (shader));\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn shader;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass ComplexPrimitiveShader extends AbstractShader {\n\t\n\t\n\tpublic var alpha:GLUniformLocation;\n\tpublic var color:GLUniformLocation;\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var tintColor:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper (gl);\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'varying vec4 vColor;',\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = vColor;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tvertexSrc  = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t//'attribute vec4 aColor;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t\n\t\t\t'uniform vec3 tint;',\n\t\t\t'uniform float alpha;',\n\t\t\t'uniform vec3 color;',\n\t\t\t\n\t\t\t'varying vec4 vColor;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t'   vColor = vec4(color * alpha * tint, alpha);',//\" * vec4(tint * alpha, alpha);',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\ttintColor = gl.getUniformLocation (program, 'tint');\n\t\tcolor = gl.getUniformLocation (program, 'color');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\t\n\t\tattributes = [aVertexPosition];\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass DefaultShader extends AbstractShader {\n\t\n\t\n\tpublic static var defaultVertexSrc = [\n\t\t'attribute vec2 aVertexPosition;',\n\t\t'attribute vec2 aTextureCoord;',\n\t\t'attribute vec2 aColor;',\n\t\t\n\t\t'uniform vec2 projectionVector;',\n\t\t'uniform vec2 offsetVector;',\n\t\t\n\t\t'varying vec2 vTextureCoord;',\n\t\t'varying vec4 vColor;',\n\t\t\n\t\t'const vec2 center = vec2(-1.0, 1.0);',\n\t\t\n\t\t'void main(void) {',\n\t\t'   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);',\n\t\t'   vTextureCoord = aTextureCoord;',\n\t\t'   vec3 color = mod(vec3(aColor.y/65536.0, aColor.y/256.0, aColor.y), 256.0) / 256.0;',\n\t\t'   vColor = vec4(color * aColor.x, aColor.x);',\n\t\t'}'\n\t];\n\t\n\tpublic var dimensions:GLUniformLocation;\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var textureCount:Int;\n\tpublic var uSampler:GLUniformLocation;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper (gl);\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision lowp float;',\n\t\t\t#end\n\t\t\t'varying vec2 vTextureCoord;',\n\t\t\t'varying vec4 vColor;',\n\t\t\t'uniform sampler2D uSampler;',\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\ttextureCount = 0;\n\t\tattributes = [];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tif (vertexSrc == null) {\n\t\t\t\n\t\t\tvertexSrc = defaultVertexSrc;\n\t\t\t\n\t\t}\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tuSampler = gl.getUniformLocation (program, 'uSampler');\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\tdimensions = gl.getUniformLocation (program, 'dimensions');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\taTextureCoord = gl.getAttribLocation (program, 'aTextureCoord');\n\t\tcolorAttribute = gl.getAttribLocation (program, 'aColor');\n\t\t\n\t\tif (colorAttribute == -1) {\n\t\t\t\n\t\t\tcolorAttribute = 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tattributes = [ aVertexPosition, aTextureCoord, colorAttribute ];\n\t\t\n\t\tif (uniforms != null) {\n\t\t\t\n\t\t\tfor (key in uniforms.keys ()) {\n\t\t\t\t\n\t\t\t\tuniforms.get (key).uniformLocation = gl.getUniformLocation (program, key);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tinitUniforms ();\n\t\t\n\t}\n\t\n\t\n\tpublic function initSampler2D (uniform:Dynamic):Void {\n\t\t\n\t\tif (uniform.value == null || uniform.value.baseTexture == null || uniform.value.baseTexture.hasLoaded == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tgl.activeTexture (Reflect.field (gl, 'TEXTURE' + textureCount));\n\t\tgl.bindTexture (gl.TEXTURE_2D, uniform.value.baseTexture._glTextures[GLRenderer.glContextId]);\n\t\t\n\t\tif (uniform.textureData != null) {\n\t\t\t\n\t\t\tvar data = uniform.textureData;\n\t\t\t\n\t\t\tvar magFilter = (data.magFilter != #if !neko 0 #else null #end) ? data.magFilter : gl.LINEAR;\n\t\t\tvar minFilter = (data.minFilter != #if !neko 0 #else null #end) ? data.minFilter : gl.LINEAR;\n\t\t\tvar wrapS = (data.wrapS != #if !neko 0 #else null #end) ? data.wrapS : gl.CLAMP_TO_EDGE;\n\t\t\tvar wrapT = (data.wrapT != #if !neko 0 #else null #end) ? data.wrapT : gl.CLAMP_TO_EDGE;\n\t\t\tvar format = (data.luminance != #if !neko 0 #else null #end) ? gl.LUMINANCE : gl.RGBA;\n\t\t\t\n\t\t\tif (data.repeat) {\n\t\t\t\t\n\t\t\t\twrapS = gl.REPEAT;\n\t\t\t\twrapT = gl.REPEAT;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.pixelStorei (gl.UNPACK_FLIP_Y_WEBGL, #if !neko data.flip #else data.flip != null ? data.flip : 0 #end);\n\t\t\t\n\t\t\tif (data.width != #if !neko 0 #else null #end) {\n\t\t\t\t\n\t\t\t\tvar width = (data.width != #if !neko 0 #else null #end) ? data.width : 512;\n\t\t\t\tvar height = (data.height != #if !neko 0 #else null #end) ? data.height : 2;\n\t\t\t\tvar border = (data.border != #if !neko 0 #else null #end) ? data.border : 0;\n\t\t\t\t\n\t\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, format, width, height, border, format, gl.UNSIGNED_BYTE, null);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if js\n\t\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, format, gl.RGBA, gl.UNSIGNED_BYTE, uniform.value.baseTexture.source);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.uniform1i (uniform.uniformLocation, textureCount);\n\t\tuniform._init = true;\n\t\ttextureCount++;\n\t\t\n\t}\n\t\n\t\n\tpublic function initUniforms ():Void {\n\t\t\n\t\ttextureCount = 1;\n\t\tvar gl = this.gl;\n\t\tvar uniform:Dynamic;\n\t\t\n\t\tif (uniforms == null) return;\n\t\t\n\t\tfor (key in uniforms.keys ()) {\n\t\t\t\n\t\t\tuniform = uniforms.get (key);\n\t\t\tvar type = uniform.type;\n\t\t\t\n\t\t\tif (type == 'sampler2D') {\n\t\t\t\t\n\t\t\t\tuniform._init = false;\n\t\t\t\t\n\t\t\t\tif (uniform.value != null) {\n\t\t\t\t\t\n\t\t\t\t\tinitSampler2D (uniform);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (type == 'mat2' || type == 'mat3' || type == 'mat4') {\n\t\t\t\t\n\t\t\t\tuniform.glMatrix = true;\n\t\t\t\tuniform.glValueLength = 1;\n\t\t\t\t\n\t\t\t\tif (type == 'mat2') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glFunc = gl.uniformMatrix2fv;\n\t\t\t\t\t\n\t\t\t\t} else if (type == 'mat3') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glFunc = gl.uniformMatrix3fv;\n\t\t\t\t\t\n\t\t\t\t} else if (type == 'mat4') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glFunc = gl.uniformMatrix4fv;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tuniform.glFunc = Reflect.field (gl, 'uniform' + type);\n\t\t\t\t\n\t\t\t\tif (type == '2f' || type == '2i') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glValueLength = 2;\n\t\t\t\t\t\n\t\t\t\t} else if (type == '3f' || type == '3i') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glValueLength = 3;\n\t\t\t\t\t\n\t\t\t\t} else if (type == '4f' || type == '4i') {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glValueLength = 4;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glValueLength = 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function syncUniforms ():Void {\n\t\t\n\t\ttextureCount = 1;\n\t\tvar uniform:Dynamic;\n\t\tvar gl = this.gl;\n\t\t\n\t\tif (uniforms == null) return;\n\t\t\n\t\tfor (key in uniforms.keys ()) {\n\t\t\t\n\t\t\tuniform = uniforms.get (key);\n\t\t\t\n\t\t\tif (uniform.glValueLength == 1) {\n\t\t\t\t\n\t\t\t\tif (uniform.glMatrix == true) {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glFunc.call(gl, uniform.uniformLocation, uniform.transpose, uniform.value);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tuniform.glFunc.call (gl, uniform.uniformLocation, uniform.value);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (uniform.glValueLength == 2) {\n\t\t\t\t\n\t\t\t\tuniform.glFunc.call (gl, uniform.uniformLocation, uniform.value.x, uniform.value.y);\n\t\t\t\t\n\t\t\t} else if (uniform.glValueLength == 3) {\n\t\t\t\t\n\t\t\t\tuniform.glFunc.call (gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z);\n\t\t\t\t\n\t\t\t} else if (uniform.glValueLength == 4) {\n\t\t\t\t\n\t\t\t\tuniform.glFunc.call (gl, uniform.uniformLocation, uniform.value.x, uniform.value.y, uniform.value.z, uniform.value.w);\n\t\t\t\t\n\t\t\t} else if (uniform.type == 'sampler2D') {\n\t\t\t\t\n\t\t\t\tif (uniform._init) {\n\t\t\t\t\t\n\t\t\t\t\tgl.activeTexture (Reflect.field (gl, 'TEXTURE' + textureCount));\n\t\t\t\t\tvar tex = uniform.value.getTexture ();\n\t\t\t\t\t//var tex = uniform.value.baseTexture._glTextures[GLRenderer.glContextId];\n\t\t\t\t\t//if (tex == null) tex = Texture.createWebGLTexture (cast uniform.value.baseTexture, gl);\n\t\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, tex);\n\t\t\t\t\tgl.uniform1i (uniform.uniformLocation, textureCount);\n\t\t\t\t\ttextureCount++;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tinitSampler2D (uniform);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLUniformLocation;\n\nclass DrawTrianglesShader extends AbstractShader {\n\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\tpublic var patternTL:GLUniformLocation;\n\tpublic var patternBR:GLUniformLocation;\n\tpublic var sampler:GLUniformLocation;\n\tpublic var color:GLUniformLocation;\n\tpublic var useTexture:GLUniformLocation;\n\tpublic var alpha:GLUniformLocation;\n\t\n\tpublic function new(gl:GLRenderContext) {\n\t\tsuper(gl);\n\t\t\n\t\tvertexSrc = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'attribute vec2 aTextureCoord;',\n\t\t\t'attribute vec4 aColor;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t\n\t\t\t'varying vec2 vPos;',\n\t\t\t'varying vec4 vColor;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t//'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   vec3 v = vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t'   vPos = aTextureCoord;',\n\t\t\t'   vColor = aColor;',\n\t\t\t'}',\n\n\t\t];\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'uniform sampler2D sampler;',\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform bool useTexture;',\n\t\t\t'uniform float alpha;',\n\t\t\t\n\t\t\t'varying vec2 vPos;',\n\t\t\t'varying vec4 vColor;',\n\t\t\t\n\t\t\t'vec4 tmp;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   if(useTexture) {',\n\t\t\t'       tmp = texture2D(sampler, vPos);',\n\t\t\t'   } else {',\n\t\t\t'       tmp = vec4(color, 1.);',\n\t\t\t'   }',\n\t\t\t'   float a = tmp.a * vColor.a * alpha;',\n\t\t\t'   gl_FragColor = vec4(vec3((tmp.rgb * vColor.rgb) * a), a);',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\t\n\t\tsampler = gl.getUniformLocation (program, 'sampler');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t\tcolor = gl.getUniformLocation (program, 'color');\n\t\tuseTexture = gl.getUniformLocation (program, 'useTexture');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\taTextureCoord = gl.getAttribLocation (program, 'aTextureCoord');\n\t\tcolorAttribute = gl.getAttribLocation (program, 'aColor');\n\t\t\n\t\tattributes = [aVertexPosition, aTextureCoord, colorAttribute];\n\t\t\n\t}\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass FastShader extends AbstractShader {\n\t\n\t\n\tpublic var aPositionCoord:Int;\n\tpublic var aRotation:Int;\n\tpublic var aScale:Int;\n\tpublic var dimensions:GLUniformLocation;\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var textureCount:Int;\n\tpublic var uMatrix:GLUniformLocation;\n\tpublic var uSampler:GLUniformLocation;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper (gl);\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision lowp float;',\n\t\t\t#end\n\t\t\t'varying vec2 vTextureCoord;',\n\t\t\t'varying float vColor;',\n\t\t\t'uniform sampler2D uSampler;',\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tvertexSrc = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'attribute vec2 aPositionCoord;',\n\t\t\t'attribute vec2 aScale;',\n\t\t\t'attribute float aRotation;',\n\t\t\t'attribute vec2 aTextureCoord;',\n\t\t\t'attribute float aColor;',\n\t\t\t\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t'uniform mat3 uMatrix;',\n\t\t\t\n\t\t\t'varying vec2 vTextureCoord;',\n\t\t\t'varying float vColor;',\n\t\t\t\n\t\t\t'const vec2 center = vec2(-1.0, 1.0);',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec2 v;',\n\t\t\t'   vec2 sv = aVertexPosition * aScale;',\n\t\t\t'   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);',\n\t\t\t'   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);',\n\t\t\t'   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;',\n\t\t\t'   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);',\n\t\t\t'   vTextureCoord = aTextureCoord;',\n\t\t\t//  '   vec3 color = mod(vec3(aColor.y/65536.0, aColor.y/256.0, aColor.y), 256.0) / 256.0;',\n\t\t\t'   vColor = aColor;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\ttextureCount = 0;\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tuSampler = gl.getUniformLocation (program, 'uSampler');\n\t\t\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\tdimensions = gl.getUniformLocation (program, 'dimensions');\n\t\tuMatrix = gl.getUniformLocation (program, 'uMatrix');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\taPositionCoord = gl.getAttribLocation (program, 'aPositionCoord');\n\t\t\n\t\taScale = gl.getAttribLocation (program, 'aScale');\n\t\taRotation = gl.getAttribLocation (program, 'aRotation');\n\t\t\n\t\taTextureCoord = gl.getAttribLocation (program, 'aTextureCoord');\n\t\tcolorAttribute = gl.getAttribLocation (program, 'aColor');\n\t\t\n\t\tif (colorAttribute == -1) {\n\t\t\t\n\t\t\tcolorAttribute = 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tattributes = [ aVertexPosition, aPositionCoord, aScale, aRotation, aTextureCoord, colorAttribute ];\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLUniformLocation;\n\nclass FillShader extends AbstractShader {\n\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\tpublic var alpha:GLUniformLocation;\n\tpublic var color:GLUniformLocation;\n\t\n\tpublic function new(gl:GLRenderContext) {\n\t\tsuper(gl);\n\t\t\n\t\tvertexSrc = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t'}'\n\n\t\t];\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform float alpha;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = vec4((color * alpha), alpha);',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\t\n\t\tcolor = gl.getUniformLocation (program, 'color');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\t\n\t\tattributes = [aVertexPosition];\n\t\t\n\t}\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLUniformLocation;\n\nclass PatternFillShader extends AbstractShader {\n\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\tpublic var patternMatrix:GLUniformLocation;\n\tpublic var patternTL:GLUniformLocation;\n\tpublic var patternBR:GLUniformLocation;\n\tpublic var sampler:GLUniformLocation;\n\tpublic var alpha:GLUniformLocation;\n\t\n\tpublic function new(gl:GLRenderContext) {\n\t\tsuper(gl);\n\t\t\n\t\tvertexSrc = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t'uniform mat3 patternMatrix;',\n\t\t\t\n\t\t\t'varying vec2 vPos;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t'   vPos = (patternMatrix * vec3(aVertexPosition, 1)).xy;',\n\t\t\t'}'\n\n\t\t];\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'uniform float alpha;',\n\t\t\t'uniform vec2 patternTL;',\n\t\t\t'uniform vec2 patternBR;',\n\t\t\t'uniform sampler2D sampler;',\n\t\t\t\n\t\t\t'varying vec2 vPos;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec2 pos = mix(patternTL, patternBR, vPos);',\n\t\t\t'   vec4 tcol = texture2D(sampler, pos);',\n\t\t\t'   gl_FragColor = vec4(tcol.rgb * alpha, tcol.a * alpha);',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\t\n\t\tpatternMatrix = gl.getUniformLocation (program, 'patternMatrix');\n\t\tpatternTL = gl.getUniformLocation (program, 'patternTL');\n\t\tpatternBR = gl.getUniformLocation (program, 'patternBR');\n\t\tsampler = gl.getUniformLocation (program, 'sampler');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\t\n\t\tattributes = [aVertexPosition];\n\t\t\n\t}\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass PrimitiveShader extends AbstractShader {\n\t\n\t\n\tpublic var alpha:GLUniformLocation;\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var tintColor:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper (gl);\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'varying vec4 vColor;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = vColor;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tvertexSrc  = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'attribute vec4 aColor;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t'uniform float alpha;',\n\t\t\t'uniform vec3 tint;',\n\t\t\t'varying vec4 vColor;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t//'   vColor = aColor * vec4(tint * alpha, alpha);',\n\t\t\t'   vColor = aColor;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\ttintColor = gl.getUniformLocation (program, 'tint');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\tcolorAttribute = gl.getAttribLocation (program, 'aColor');\n\t\t\n\t\tattributes = [ aVertexPosition, colorAttribute ];\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.shaders;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\n\n\nclass StripShader extends AbstractShader {\n\t\n\t\n\tpublic var alpha:GLUniformLocation;\n\tpublic var offsetVector:GLUniformLocation;\n\tpublic var translationMatrix:GLUniformLocation;\n\tpublic var uSampler:GLUniformLocation;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper (gl);\n\t\t\n\t\tfragmentSrc = [\n\t\t\t#if !desktop\n\t\t\t'precision mediump float;',\n\t\t\t#end\n\t\t\t'varying vec2 vTextureCoord;',\n\t\t\t//   'varying float vColor;',\n\t\t\t'uniform float alpha;',\n\t\t\t'uniform sampler2D uSampler;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y));',\n\t\t\t//  '   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);',//gl_FragColor * alpha;',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tvertexSrc  = [\n\t\t\t'attribute vec2 aVertexPosition;',\n\t\t\t'attribute vec2 aTextureCoord;',\n\t\t\t'uniform mat3 translationMatrix;',\n\t\t\t'uniform vec2 projectionVector;',\n\t\t\t'uniform vec2 offsetVector;',\n\t\t\t//  'uniform float alpha;',\n\t\t\t// 'uniform vec3 tint;',\n\t\t\t'varying vec2 vTextureCoord;',\n\t\t\t//  'varying vec4 vColor;',\n\t\t\t\n\t\t\t'void main(void) {',\n\t\t\t'   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);',\n\t\t\t'   v -= offsetVector.xyx;',\n\t\t\t'   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);',\n\t\t\t'   vTextureCoord = aTextureCoord;',\n\t\t\t// '   vColor = aColor * vec4(tint * alpha, alpha);',\n\t\t\t'}'\n\t\t];\n\t\t\n\t\tinit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function init ():Void {\n\t\t\n\t\tsuper.init ();\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tuSampler = gl.getUniformLocation (program, 'uSampler');\n\t\tprojectionVector = gl.getUniformLocation (program, 'projectionVector');\n\t\toffsetVector = gl.getUniformLocation (program, 'offsetVector');\n\t\tcolorAttribute = gl.getAttribLocation (program, 'aColor');\n\t\t\n\t\taVertexPosition = gl.getAttribLocation (program, 'aVertexPosition');\n\t\taTextureCoord = gl.getAttribLocation (program, 'aTextureCoord');\n\t\t\n\t\tattributes = [ aVertexPosition, aTextureCoord ];\n\t\t\n\t\ttranslationMatrix = gl.getUniformLocation (program, 'translationMatrix');\n\t\talpha = gl.getUniformLocation (program, 'alpha');\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.utils;\n\n\nimport lime.graphics.GLRenderContext;\nimport openfl.display.BlendMode;\n\n\nclass BlendModeManager {\n\t\n\t\n\tpublic var currentBlendMode:BlendMode;\n\tpublic var gl:GLRenderContext;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tthis.gl = gl;\n\t\tcurrentBlendMode = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tgl = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function setBlendMode (blendMode:BlendMode):Bool {\n\t\t\n\t\tif (blendMode == null) blendMode = BlendMode.NORMAL;\n\t\tif (currentBlendMode == blendMode) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tcurrentBlendMode = blendMode;\n\t\t\n\t\tvar blendModeWebGL = GLRenderer.blendModesWebGL[currentBlendMode];\n\t\tgl.blendFunc (blendModeWebGL[0], blendModeWebGL[1]);\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.utils;\n\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.GLStack;\nimport openfl.display.Graphics;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.BlendMode;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl.display.Graphics;\nimport openfl.display.JointStyle;\nimport openfl.display.LineScaleMode;\nimport openfl.display.TriangleCulling;\nimport openfl.display.Tilesheet;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.Vector;\n\nclass DrawPath {\n\n\npublic var line:LineStyle;\npublic var fill:FillType;\npublic var fillIndex:Int = 0;\npublic var isRemovable:Bool = true;\n\npublic var points:Array<Float> = [];\n\n\npublic var type:GraphicType = Polygon;\n\npublic function new() {\n\tline = new LineStyle();\n\tfill = None;\n}\n\npublic function update(line:LineStyle, fill:FillType, fillIndex:Int):Void {\n\tupdateLine(line);\n\tthis.fill = fill;\n\tthis.fillIndex = fillIndex;\n}\n\npublic function updateLine(line:LineStyle):Void {\n\tthis.line.width = line.width;\n\tthis.line.color = #if neko line.color == null ? 0 : #end line.color & 0x00FFFFFF;\n\tthis.line.alpha = line.alpha == null ? 1 : line.alpha;\n\tthis.line.scaleMode = line.scaleMode == null ? LineScaleMode.NORMAL : line.scaleMode;\n\tthis.line.caps = line.caps == null ? CapsStyle.ROUND : line.caps;\n\tthis.line.joints = line.joints == null ? JointStyle.ROUND : line.joints;\n\tthis.line.miterLimit = line.miterLimit;\n}\n\npublic static function getStack(graphics:Graphics, gl:GLRenderContext):GLStack {\n\treturn PathBuiler.build(graphics, gl);\n}\n\n}\n\n@:access(openfl._internal.renderer.opengl.utils.GraphicsRenderer)\n@:access(openfl.display.Graphics)\nclass PathBuiler {\n\n\tprivate static var __currentPath:DrawPath;\n\tprivate static var __drawPaths:Array<DrawPath>;\n\tprivate static var __line:LineStyle;\n\tprivate static var __fill:FillType;\n\tprivate static var __fillIndex:Int = 0;\n\n\tprivate static function closePath():Void {\n\t\tvar l = __currentPath.points.length;\n\t\tif (l <= 0) return;\n\t\t// the paths are only closed when the type is a polygon and there is a fill\n\t\tif (__currentPath.type == Polygon && __currentPath.fill != None) {\n\t\t\tvar sx = __currentPath.points[0];\n\t\t\tvar sy = __currentPath.points[1];\n\t\t\tvar ex = __currentPath.points[l - 2];\n\t\t\tvar ey = __currentPath.points[l - 1];\n\t\t\t\n\t\t\tif (!(sx == ex && sy == ey)) {\n\t\t\t\t__currentPath.points.push (sx);\n\t\t\t\t__currentPath.points.push (sy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function endFill ():Void {\n\t\t\n\t\t__fill = None;\n\t\t__fillIndex++;\n\t\t\n\t}\n\n\tprivate static function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\tgraphicDataPop ();\n\t\t__currentPath = new DrawPath ();\n\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t__currentPath.type = Polygon;\n\t\t__currentPath.points.push (x);\n\t\t__currentPath.points.push (y);\n\t\t\n\t\t__drawPaths.push (__currentPath);\n\t\t\n\t}\n\n\tprivate inline static function graphicDataPop ():Void {\n\t\t\n\t\tif (__currentPath.isRemovable && __currentPath.points.length == 0) {\n\t\t\t__drawPaths.pop ();\n\t\t} else {\n\t\t\tclosePath();\n\t\t}\n\t\t\n\t}\n\n\tpublic static function build(graphics:Graphics, gl:GLRenderContext):GLStack {\n\t\t\n\t\tvar glStack:GLStack = null;\n\t\tvar bounds = graphics.__bounds;\n\t\t\n\t\t__drawPaths = new Array ();\n\t\t__currentPath = new DrawPath ();\n\t\t__line = new LineStyle();\n\t\t__fill = None;\n\t\t__fillIndex = 0;\n\t\t\n\t\tglStack = graphics.__glStack[GLRenderer.glContextId];\n\t\t\t\n\t\tif (glStack == null) {\n\t\t\t\n\t\t\tglStack = graphics.__glStack[GLRenderer.glContextId] = new GLStack (gl);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0) {\n\t\t\t\n\t\t\t//glStack = graphics.__glStack[GLRenderer.glContextId] = new GLStack (gl);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (command in graphics.__commands) {\n\t\t\t\t\n\t\t\t\tswitch (command) {\n\t\t\t\t\t\n\t\t\t\t\tcase BeginBitmapFill (bitmap, matrix, repeat, smooth):\n\t\t\t\t\t\t\n\t\t\t\t\t\tendFill();\n\t\t\t\t\t\t__fill = bitmap != null ? Texture(bitmap, matrix, repeat, smooth) : None;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (__currentPath.points.length == 0) {\n\t\t\t\t\t\t\tgraphicDataPop();\n\t\t\t\t\t\t\t__currentPath = new DrawPath();\n\t\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t\t__currentPath.points = [];\n\t\t\t\t\t\t\t__currentPath.type = Polygon;\n\t\t\t\t\t\t\t__drawPaths.push(__currentPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase BeginFill (rgb, alpha):\n\n\t\t\t\t\t\tendFill();\n\t\t\t\t\t\t__fill = alpha > 0 ? Color(rgb & 0xFFFFFF, alpha) : None;\n\n\t\t\t\t\t\tif (__currentPath.points.length == 0) {\n\t\t\t\t\t\t\tgraphicDataPop();\n\t\t\t\t\t\t\t__currentPath = new DrawPath();\n\t\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t\t__currentPath.points = [];\n\t\t\t\t\t\t\t__currentPath.type = Polygon;\n\t\t\t\t\t\t\t__drawPaths.push(__currentPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase CubicCurveTo (cx, cy, cx2, cy2, x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (__currentPath.points.length == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmoveTo (0, 0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar n = 20;\n\t\t\t\t\t\tvar dt:Float = 0;\n\t\t\t\t\t\tvar dt2:Float = 0;\n\t\t\t\t\t\tvar dt3:Float = 0;\n\t\t\t\t\t\tvar t2:Float = 0;\n\t\t\t\t\t\tvar t3:Float = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar points = __currentPath.points;\n\t\t\t\t\t\tvar fromX = points[points.length-2];\n\t\t\t\t\t\tvar fromY = points[points.length-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar px:Float = 0;\n\t\t\t\t\t\tvar py:Float = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar tmp:Float = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 1...(n + 1)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = i / n;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdt = 1 - tmp;\n\t\t\t\t\t\t\tdt2 = dt * dt;\n\t\t\t\t\t\t\tdt3 = dt2 * dt;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tt2 = tmp * tmp;\n\t\t\t\t\t\t\tt3 = t2 * tmp;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpx = dt3 * fromX + 3 * dt2 * tmp * cx + 3 * dt * t2 * cx2 + t3 * x;\n\t\t\t\t\t\t\tpy = dt3 * fromY + 3 * dt2 * tmp * cy + 3 * dt * t2 * cy2 + t3 * y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpoints.push (px);\n\t\t\t\t\t\t\tpoints.push (py);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase CurveTo (cx, cy, x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (__currentPath.points.length == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmoveTo (0, 0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar xa:Float = 0;\n\t\t\t\t\t\tvar ya:Float = 0;\n\t\t\t\t\t\tvar n = 20;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar points = __currentPath.points;\n\t\t\t\t\t\tvar fromX = points[points.length-2];\n\t\t\t\t\t\tvar fromY = points[points.length-1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar px:Float = 0;\n\t\t\t\t\t\tvar py:Float = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar tmp:Float = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 1...(n + 1)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = i / n;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\txa = fromX + ((cx - fromX) * tmp);\n\t\t\t\t\t\t\tya = fromY + ((cy - fromY) * tmp);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpx = xa + (((cx + (x - cx) * tmp)) - xa) * tmp;\n\t\t\t\t\t\t\tpy = ya + (((cy + (y - cy) * tmp)) - ya) * tmp;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpoints.push (px);\n\t\t\t\t\t\t\tpoints.push (py);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DrawCircle (x, y, radius):\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.type = Circle;\n\t\t\t\t\t\t__currentPath.points = [ x, y, radius ];\n\t\t\t\t\t\t\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawEllipse (x, y, width, height):\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.type = Ellipse;\n\t\t\t\t\t\t__currentPath.points = [ x, y, width, height ];\n\t\t\t\t\t\t\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawRect (x, y, width, height):\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.type = Rectangle (false);\n\t\t\t\t\t\t__currentPath.points = [ x, y, width, height ];\n\t\t\t\t\t\t\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawRoundRect (x, y, width, height, rx, ry):\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (ry == -1) ry = rx;\n\t\t\t\t\t\t\n\t\t\t\t\t\trx *= 0.5;\n\t\t\t\t\t\try *= 0.5;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (rx > width / 2) rx = width / 2;\n\t\t\t\t\t\tif (ry > height / 2) ry = height / 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.type = Rectangle (true);\n\t\t\t\t\t\t__currentPath.points = [ x, y, width, height, rx, ry ];\n\t\t\t\t\t\t\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase EndFill:\n\t\t\t\t\t\t\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\n\t\t\t\t\tcase LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\n\t\t\t\t\t\t\n\t\t\t\t\t\t__line = new LineStyle();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (thickness == null || thickness == Math.NaN || thickness < 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__line.width = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (thickness == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__line.width = 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__line.width = thickness;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__line.color = color;\n\t\t\t\t\t\t__line.alpha = alpha;\n\t\t\t\t\t\t__line.scaleMode = scaleMode;\n\t\t\t\t\t\t__line.caps = caps;\n\t\t\t\t\t\t__line.joints = joints;\n\t\t\t\t\t\t__line.miterLimit = miterLimit;\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update(__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.points = [];\n\t\t\t\t\t\t__currentPath.type = GraphicType.Polygon;\n\t\t\t\t\t\t\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase LineTo (x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath.points.push (x);\n\t\t\t\t\t\t__currentPath.points.push (y);\n\t\t\t\t\t\n\t\t\t\t\tcase MoveTo (x, y):\n\t\t\t\t\t\t\n\t\t\t\t\t\tmoveTo(x, y);\n\t\t\t\t\t\t\n\t\t\t\t\tcase DrawTriangles (vertices, indices, uvtData, culling, colors, blendMode):\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar isColor = switch(__fill) { case Color(_, _): true; case _: false; };\n\t\t\t\t\t\tif (isColor && uvtData != null) {\n\t\t\t\t\t\t\t\t// Flash doesn't draw anything if the fill isn't a bitmap and there are uvt values\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex);\n\t\t\t\t\t\tif (uvtData == null) {\n\t\t\t\t\t\t\tuvtData = new Vector<Float>();\n\t\t\t\t\t\t\tswitch(__fill) {\n\t\t\t\t\t\t\t\tcase Texture(b, _):\n\t\t\t\t\t\t\t\t\tfor (i in 0...Std.int(vertices.length / 2)) {\n\t\t\t\t\t\t\t\t\t\tuvtData.push(vertices[i * 2] / b.width);\n\t\t\t\t\t\t\t\t\t\tuvtData.push(vertices[i * 2 + 1] / b.height);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__currentPath.type = GraphicType.DrawTriangles (vertices, indices, uvtData, culling, colors, blendMode);\n\t\t\t\t\t\t__currentPath.isRemovable = false;\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\n\t\t\t\t\tcase DrawTiles (sheet, tileData, smooth, flags, count):\n\t\t\t\t\t\tgraphicDataPop ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__fillIndex++;\n\t\t\t\t\t\t__currentPath = new DrawPath ();\n\t\t\t\t\t\t__currentPath.update (__line, __fill, __fillIndex);\n\t\t\t\t\t\t__currentPath.type = GraphicType.DrawTiles(sheet, tileData, smooth, flags, count);\n\t\t\t\t\t\t__currentPath.isRemovable = false;\n\t\t\t\t\t\t__drawPaths.push (__currentPath);\n\t\t\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tclosePath();\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__drawPaths = __drawPaths;\n\t\t\n\t\treturn glStack;\n\t}\n\n}\n\nclass LineStyle {\n\n\tpublic var width:Float;\n\tpublic var color:Int;\n\tpublic var alpha:Null<Float>;\n\n\tpublic var scaleMode:LineScaleMode;\n\tpublic var caps:CapsStyle;\n\tpublic var joints:JointStyle;\n\tpublic var miterLimit:Float;\n\t\n\tpublic function new() {\n\t\twidth = 0;\n\t\tcolor = 0;\n\t\talpha = 1;\n\t\tscaleMode = LineScaleMode.NORMAL;\n\t\tcaps = CapsStyle.ROUND;\n\t\tjoints = JointStyle.ROUND;\n\t\tmiterLimit = 3;\n\t}\n\n}\n\n\nenum FillType {\nNone;\nColor(color:Int, alpha:Float);\nTexture(bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool);\nGradient;\n}","package openfl._internal.renderer.opengl.utils;\n\n\nimport lime.graphics.opengl.GLBuffer;\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.graphics.GLRenderContext;\nimport lime.utils.Float32Array;\nimport lime.utils.UInt16Array;\nimport openfl._internal.renderer.opengl.shaders.AbstractShader;\nimport openfl._internal.renderer.opengl.shaders.DefaultShader;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.geom.Rectangle;\n\n\nclass FilterManager {\n\t\n\t\n\tpublic var buffer:GLFramebuffer;\n\tpublic var colorArray:Float32Array;\n\tpublic var colorBuffer:GLBuffer;\n\tpublic var defaultShader:DefaultShader;\n\tpublic var filterStack:Array<Dynamic>;\n\tpublic var gl:GLRenderContext;\n\tpublic var height:Int;\n\tpublic var indexBuffer:GLBuffer;\n\tpublic var offsetX:Float;\n\tpublic var offsetY:Float;\n\tpublic var renderSession:RenderSession;\n\tpublic var texturePool:Array<FilterTexture>;\n\tpublic var transparent:Bool;\n\tpublic var uvArray:Float32Array;\n\tpublic var uvBuffer:GLBuffer;\n\tpublic var vertexArray:Float32Array;\n\tpublic var vertexBuffer:GLBuffer;\n\tpublic var width:Int;\n\t\n\t\n\tpublic function new (gl:GLRenderContext, transparent:Bool) {\n\t\t\n\t\tthis.transparent = transparent;\n\t\t\n\t\tfilterStack = [];\n\t\t\n\t\toffsetX = 0;\n\t\toffsetY = 0;\n\t\t\n\t\tsetContext (gl);\n\t\t\n\t}\n\t\n\t\n\tpublic function applyFilterPass (filter:Dynamic, filterArea:Rectangle, width:Int, height:Int):Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\tvar shader:DefaultShader = cast filter.shaders[GLRenderer.glContextId];\n\t\t\n\t\tif (shader == null) {\n\t\t\t\n\t\t\tshader = new DefaultShader (gl);\n\t\t\tshader.fragmentSrc = filter.fragmentSrc;\n\t\t\tshader.uniforms = filter.uniforms;\n\t\t\tshader.init ();\n\t\t\t\n\t\t\tfilter.shaders[GLRenderer.glContextId] = shader;\n\t\t\t\n\t\t}\n\t\t\n\t\trenderSession.shaderManager.setShader (shader);\n\t\t\n\t\tgl.uniform2f (shader.projectionVector, width / 2, -height / 2);\n\t\tgl.uniform2f (shader.offsetVector, 0, 0);\n\t\t\n\t\tif (filter.uniforms.dimensions != null) {\n\t\t\t\n\t\t\tfilter.uniforms.dimensions.value[0] = this.width + 0.0;\n\t\t\tfilter.uniforms.dimensions.value[1] = this.height + 0.0;\n\t\t\tfilter.uniforms.dimensions.value[2] = this.vertexArray[0];\n\t\t\tfilter.uniforms.dimensions.value[3] = this.vertexArray[5];\n\t\t\t\n\t\t}\n\t\t\n\t\tshader.syncUniforms ();\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\n\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\n\t\tgl.vertexAttribPointer (shader.aTextureCoord, 2, gl.FLOAT, false, 0, 0);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, colorBuffer);\n\t\tgl.vertexAttribPointer (shader.colorAttribute, 2, gl.FLOAT, false, 0, 0);\n\t\t\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\t\n\t\tgl.drawElements (gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n\t\trenderSession.drawCount++;\n\t\t\n\t}\n\t\n\t\n\tpublic function begin (renderSession:RenderSession, buffer:GLFramebuffer = null):Void {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\tdefaultShader = renderSession.shaderManager.defaultShader;\n\t\t\n\t\tvar projection = renderSession.projection;\n\t\t\n\t\twidth = Std.int (projection.x * 2);\n\t\theight = Std.int (-projection.y * 2);\n\t\tthis.buffer = buffer;\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tfilterStack = null;\n\t\t\n\t\toffsetX = 0;\n\t\toffsetY = 0;\n\t\t\n\t\tfor (texture in texturePool) {\n\t\t\t\n\t\t\ttexture.destroy ();\n\t\t\t\n\t\t}\n\t\t\n\t\ttexturePool = null;\n\t\t\n\t\tgl.deleteBuffer (vertexBuffer);\n\t\tgl.deleteBuffer (uvBuffer);\n\t\tgl.deleteBuffer (colorBuffer);\n\t\tgl.deleteBuffer (indexBuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function initShaderBuffers ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tvertexBuffer = gl.createBuffer ();\n\t\tuvBuffer = gl.createBuffer ();\n\t\tcolorBuffer = gl.createBuffer ();\n\t\tindexBuffer = gl.createBuffer ();\n\t\t\n\t\tvertexArray = new Float32Array ([ 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0 ]);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\n\t\tgl.bufferData (gl.ARRAY_BUFFER, vertexArray, gl.STATIC_DRAW);\n\t\t\n\t\tuvArray = new Float32Array ([ 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0 ]);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\n\t\tgl.bufferData (gl.ARRAY_BUFFER, uvArray, gl.STATIC_DRAW);\n\t\t\n\t\tcolorArray = new Float32Array ([ 1.0, 0xFFFFFF, 1.0, 0xFFFFFF, 1.0, 0xFFFFFF, 1.0, 0xFFFFFF ]);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, colorBuffer);\n\t\tgl.bufferData (gl.ARRAY_BUFFER, colorArray, gl.STATIC_DRAW);\n\t\t\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, new UInt16Array ([ 0, 1, 2, 1, 3, 2 ]), gl.STATIC_DRAW);\n\t\t\n\t}\n\t\n\t\n\tpublic function popFilter ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\tvar filterBlock = filterStack.pop();\n\t\tvar filterArea:Rectangle = filterBlock._filterArea;\n\t\tvar texture = filterBlock._glFilterTexture;\n\t\tvar projection = renderSession.projection;\n\t\tvar offset = renderSession.offset;\n\t\t\n\t\tif (filterBlock.filterPasses.length > 1) {\n\t\t\t\n\t\t\tgl.viewport (0, 0, Std.int (filterArea.width), Std.int (filterArea.height));\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\n\t\t\t\n\t\t\tthis.vertexArray[0] = 0;\n\t\t\tthis.vertexArray[1] = filterArea.height;\n\t\t\tthis.vertexArray[2] = filterArea.width;\n\t\t\tthis.vertexArray[3] = filterArea.height;\n\t\t\tthis.vertexArray[4] = 0;\n\t\t\tthis.vertexArray[5] = 0;\n\t\t\tthis.vertexArray[6] = filterArea.width;\n\t\t\tthis.vertexArray[7] = 0;\n\t\t\t\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, vertexArray);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\n\t\t\t\n\t\t\tthis.uvArray[2] = filterArea.width / width;\n\t\t\tthis.uvArray[5] = filterArea.height / height;\n\t\t\tthis.uvArray[6] = filterArea.width / width;\n\t\t\tthis.uvArray[7] = filterArea.height / height;\n\t\t\t\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, uvArray);\n\t\t\t\n\t\t\tvar inputTexture:FilterTexture = texture;\n\t\t\tvar outputTexture:FilterTexture = texturePool.pop ();\n\t\t\t\n\t\t\tif (outputTexture == null) {\n\t\t\t\t\n\t\t\t\toutputTexture = new FilterTexture (gl, width, height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\toutputTexture.resize (width, height);\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, outputTexture.frameBuffer);\n\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\n\t\t\tgl.disable (gl.BLEND);\n\t\t\t\n\t\t\tfor (i in 0...Std.int (filterBlock.filterPasses.length - 1)) {\n\t\t\t\t\n\t\t\t\tvar filterPass = filterBlock.filterPasses[i];\n\t\t\t\t\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, outputTexture.frameBuffer);\n\t\t\t\t\n\t\t\t\tgl.activeTexture (gl.TEXTURE0);\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, inputTexture.texture);\n\t\t\t\t\n\t\t\t\tapplyFilterPass (filterPass, filterArea, Std.int (filterArea.width), Std.int (filterArea.height));\n\t\t\t\t\n\t\t\t\tvar temp = inputTexture;\n\t\t\t\tinputTexture = outputTexture;\n\t\t\t\toutputTexture = temp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.enable (gl.BLEND);\n\t\t\t\n\t\t\ttexture = inputTexture;\n\t\t\ttexturePool.push (outputTexture);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar filter = filterBlock.filterPasses[Std.int (filterBlock.filterPasses.length - 1)];\n\t\t\n\t\tthis.offsetX -= filterArea.x;\n\t\tthis.offsetY -= filterArea.y;\n\t\t\n\t\tvar sizeX = width;\n\t\tvar sizeY = height;\n\t\t\n\t\tvar offsetX = 0.0;\n\t\tvar offsetY = 0.0;\n\t\t\n\t\tvar buffer = this.buffer;\n\t\t\n\t\tif (filterStack.length == 0) {\n\t\t\t\n\t\t\tgl.colorMask (true, true, true, true);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar currentFilter = filterStack[filterStack.length-1];\n\t\t\tfilterArea = currentFilter._filterArea;\n\t\t\t\n\t\t\tsizeX = Std.int (filterArea.width);\n\t\t\tsizeY = Std.int (filterArea.height);\n\t\t\t\n\t\t\toffsetX = filterArea.x;\n\t\t\toffsetY = filterArea.y;\n\t\t\t\n\t\t\tbuffer = currentFilter._glFilterTexture.frameBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\tprojection.x = sizeX / 2;\n\t\tprojection.y = -sizeY / 2;\n\t\t\n\t\toffset.x = offsetX;\n\t\toffset.y = offsetY;\n\t\t\n\t\tfilterArea = filterBlock._filterArea;\n\t\t\n\t\tvar x = filterArea.x - offsetX;\n\t\tvar y = filterArea.y - offsetY;\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, this.vertexBuffer);\n\t\t\n\t\tvertexArray[0] = x;\n\t\tvertexArray[1] = y + filterArea.height;\n\t\tvertexArray[2] = x + filterArea.width;\n\t\tvertexArray[3] = y + filterArea.height;\n\t\tvertexArray[4] = x;\n\t\tvertexArray[5] = y;\n\t\tvertexArray[6] = x + filterArea.width;\n\t\tvertexArray[7] = y;\n\t\t\n\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, vertexArray);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, uvBuffer);\n\t\t\n\t\tthis.uvArray[2] = filterArea.width / width;\n\t\tthis.uvArray[5] = filterArea.height / height;\n\t\tthis.uvArray[6] = filterArea.width / width;\n\t\tthis.uvArray[7] = filterArea.height / height;\n\t\t\n\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, uvArray);\n\t\t\n\t\tgl.viewport (0, 0, sizeX, sizeY);\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, buffer);\n\t\t\n\t\tgl.activeTexture (gl.TEXTURE0);\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture.texture);\n\t\t\n\t\tapplyFilterPass (filter, filterArea, sizeX, sizeY);\n\t\t\n\t\trenderSession.shaderManager.setShader (defaultShader);\n\t\tgl.uniform2f (defaultShader.projectionVector, sizeX / 2, -sizeY / 2);\n\t\tgl.uniform2f (defaultShader.offsetVector, -offsetX, -offsetY);\n\t\t\n\t\ttexturePool.push (texture);\n\t\tfilterBlock._glFilterTexture = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushFilter (filterBlock:Dynamic):Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tvar projection = renderSession.projection;\n\t\tvar offset =  renderSession.offset;\n\t\t\n\t\tif (filterBlock.target.filterArea != null) {\n\t\t\t\n\t\t\tfilterBlock._filterArea = filterBlock.target.filterArea;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfilterBlock._filterArea = filterBlock.target.getBounds ();\n\t\t\t\n\t\t}\n\t\t\n\t\tfilterStack.push (filterBlock);\n\t\t\n\t\tvar filter = filterBlock.filterPasses[0];\n\t\t\n\t\toffsetX += filterBlock._filterArea.x;\n\t\toffsetY += filterBlock._filterArea.y;\n\t\t\n\t\tvar texture = this.texturePool.pop ();\n\t\t\n\t\tif (texture == null) {\n\t\t\t\n\t\t\ttexture = new FilterTexture (gl, width, height);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttexture.resize (width, height);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture.texture);\n\t\t\n\t\tvar filterArea:Rectangle = filterBlock._filterArea;\n\t\t\n\t\tvar padding = filter.padding;\n\t\tfilterArea.x -= padding;\n\t\tfilterArea.y -= padding;\n\t\tfilterArea.width += padding * 2;\n\t\tfilterArea.height += padding * 2;\n\t\t\n\t\tif (filterArea.x < 0) filterArea.x = 0;\n\t\tif (filterArea.width > this.width) filterArea.width = this.width;\n\t\tif (filterArea.y < 0) filterArea.y = 0;\n\t\tif (filterArea.height > this.height) filterArea.height = this.height;\n\t\t\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, texture.frameBuffer);\n\t\t\n\t\tgl.viewport (0, 0, Std.int (filterArea.width), Std.int (filterArea.height));\n\t\t\n\t\tprojection.x = filterArea.width / 2;\n\t\tprojection.y = -filterArea.height / 2;\n\t\t\n\t\toffset.x = -filterArea.x;\n\t\toffset.y = -filterArea.y;\n\t\t\n\t\trenderSession.shaderManager.setShader (defaultShader);\n\t\tgl.uniform2f (defaultShader.projectionVector, filterArea.width / 2, -filterArea.height / 2);\n\t\tgl.uniform2f (defaultShader.offsetVector, -filterArea.x, -filterArea.y);\n\t\t\n\t\tgl.colorMask (true, true, true, true);\n\t\tgl.clearColor (0, 0, 0, 0);\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\n\t\tfilterBlock._glFilterTexture = texture;\n\t\t\n\t}\n\t\n\t\n\tpublic function setContext (gl:GLRenderContext):Void {\n\t\t\n\t\tthis.gl = gl;\n\t\ttexturePool = [];\n\t\t\n\t\tinitShaderBuffers ();\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.utils ;\n\n\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.graphics.opengl.GLRenderbuffer;\nimport lime.graphics.opengl.GLTexture;\nimport lime.graphics.GLRenderContext;\n\n\nclass FilterTexture {\n\t\n\t\n\tpublic var frameBuffer:GLFramebuffer;\n\tpublic var gl:GLRenderContext;\n\tpublic var renderBuffer:GLRenderbuffer;\n\tpublic var smoothing:Bool;\n\tpublic var texture:GLTexture;\n\tpublic var width:Int;\n\tpublic var height:Int;\n\t\n\t\n\tpublic function new (gl:GLRenderContext, width:Int, height:Int, smoothing = true) {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tframeBuffer = gl.createFramebuffer ();\n\t\ttexture = gl.createTexture ();\n\t\t\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture);\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, smoothing ? gl.LINEAR : gl.NEAREST);\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, smoothing ? gl.LINEAR : gl.NEAREST);\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, frameBuffer);\n\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t\n\t\trenderBuffer = gl.createRenderbuffer ();\n\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, renderBuffer);\n\t\tgl.framebufferRenderbuffer (gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, renderBuffer);\n\t\t\n\t\tresize (width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tgl.clearColor (0, 0, 0, 0);\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\tgl.deleteFramebuffer (frameBuffer);\n\t\tgl.deleteTexture (texture);\n\t\t\n\t\tframeBuffer = null;\n\t\ttexture = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\tif (this.width == width && this.height == height) return;\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tgl.bindTexture (gl.TEXTURE_2D, texture);\n\t\tgl.texImage2D (gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\n\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, renderBuffer);\n\t\tgl.renderbufferStorage (gl.RENDERBUFFER, gl.DEPTH_STENCIL, width, height);\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom; #if !flash #if !lime_legacy\n\n\nimport lime.math.Rectangle in LimeRectangle;\n\n\n/**\n * A Rectangle object is an area defined by its position, as indicated by its\n * top-left corner point(<i>x</i>, <i>y</i>) and by its width and its height.\n *\n *\n * <p>The <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the Rectangle class are independent of\n * each other; changing the value of one property has no effect on the others.\n * However, the <code>right</code> and <code>bottom</code> properties are\n * integrally related to those four properties. For example, if you change the\n * value of the <code>right</code> property, the value of the\n * <code>width</code> property changes; if you change the <code>bottom</code>\n * property, the value of the <code>height</code> property changes. </p>\n *\n * <p>The following methods and properties use Rectangle objects:</p>\n *\n * <ul>\n *   <li>The <code>applyFilter()</code>, <code>colorTransform()</code>,\n * <code>copyChannel()</code>, <code>copyPixels()</code>, <code>draw()</code>,\n * <code>fillRect()</code>, <code>generateFilterRect()</code>,\n * <code>getColorBoundsRect()</code>, <code>getPixels()</code>,\n * <code>merge()</code>, <code>paletteMap()</code>,\n * <code>pixelDisolve()</code>, <code>setPixels()</code>, and\n * <code>threshold()</code> methods, and the <code>rect</code> property of the\n * BitmapData class</li>\n *   <li>The <code>getBounds()</code> and <code>getRect()</code> methods, and\n * the <code>scrollRect</code> and <code>scale9Grid</code> properties of the\n * DisplayObject class</li>\n *   <li>The <code>getCharBoundaries()</code> method of the TextField\n * class</li>\n *   <li>The <code>pixelBounds</code> property of the Transform class</li>\n *   <li>The <code>bounds</code> parameter for the <code>startDrag()</code>\n * method of the Sprite class</li>\n *   <li>The <code>printArea</code> parameter of the <code>addPage()</code>\n * method of the PrintJob class</li>\n * </ul>\n *\n * <p>You can use the <code>new Rectangle()</code> constructor to create a\n * Rectangle object.</p>\n *\n * <p><b>Note:</b> The Rectangle class does not define a rectangular Shape\n * display object. To draw a rectangular Shape object onscreen, use the\n * <code>drawRect()</code> method of the Graphics class.</p>\n */\nclass Rectangle {\n\t\n\t\n\t/**\n\t * The sum of the <code>y</code> and <code>height</code> properties.\n\t */\n\tpublic var bottom (get, set):Float;\n\t\n\t/**\n\t * The location of the Rectangle object's bottom-right corner, determined by\n\t * the values of the <code>right</code> and <code>bottom</code> properties.\n\t */\n\tpublic var bottomRight (get, set):Point;\n\t\n\t/**\n\t * The height of the rectangle, in pixels. Changing the <code>height</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>width</code> properties.\n\t */\n\tpublic var height:Float;\n\t\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>left</code> property of a Rectangle object has no effect on the\n\t * <code>y</code> and <code>height</code> properties. However it does affect\n\t * the <code>width</code> property, whereas changing the <code>x</code> value\n\t * does <i>not</i> affect the <code>width</code> property.\n\t *\n\t * <p>The value of the <code>left</code> property is equal to the value of\n\t * the <code>x</code> property.</p>\n\t */\n\tpublic var left (get, set):Float;\n\t\n\t/**\n\t * The sum of the <code>x</code> and <code>width</code> properties.\n\t */\n\tpublic var right (get, set):Float;\n\t\n\t/**\n\t * The size of the Rectangle object, expressed as a Point object with the\n\t * values of the <code>width</code> and <code>height</code> properties.\n\t */\n\tpublic var size (get, set):Point;\n\t\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the <code>top</code> property of a Rectangle object has no effect on the\n\t * <code>x</code> and <code>width</code> properties. However it does affect\n\t * the <code>height</code> property, whereas changing the <code>y</code>\n\t * value does <i>not</i> affect the <code>height</code> property.\n\t *\n\t * <p>The value of the <code>top</code> property is equal to the value of the\n\t * <code>y</code> property.</p>\n\t */\n\tpublic var top (get, set):Float;\n\t\n\t/**\n\t * The location of the Rectangle object's top-left corner, determined by the\n\t * <i>x</i> and <i>y</i> coordinates of the point.\n\t */\n\tpublic var topLeft (get, set):Point;\n\t\n\t/**\n\t * The width of the rectangle, in pixels. Changing the <code>width</code>\n\t * value of a Rectangle object has no effect on the <code>x</code>,\n\t * <code>y</code>, and <code>height</code> properties.\n\t */\n\tpublic var width:Float;\n\t\n\t/**\n\t * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>x</code> property of a Rectangle object has no\n\t * effect on the <code>y</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>x</code> property is equal to the value of the\n\t * <code>left</code> property.</p>\n\t */\n\tpublic var x:Float;\n\t\n\t/**\n\t * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n\t * the value of the <code>y</code> property of a Rectangle object has no\n\t * effect on the <code>x</code>, <code>width</code>, and <code>height</code>\n\t * properties.\n\t *\n\t * <p>The value of the <code>y</code> property is equal to the value of the\n\t * <code>top</code> property.</p>\n\t */\n\tpublic var y:Float;\n\t\n\t\n\t/**\n\t * Creates a new Rectangle object with the top-left corner specified by the\n\t * <code>x</code> and <code>y</code> parameters and with the specified\n\t * <code>width</code> and <code>height</code> parameters. If you call this\n\t * function without parameters, a rectangle with <code>x</code>,\n\t * <code>y</code>, <code>width</code>, and <code>height</code> properties set\n\t * to 0 is created.\n\t * \n\t * @param x      The <i>x</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param y      The <i>y</i> coordinate of the top-left corner of the\n\t *               rectangle.\n\t * @param width  The width of the rectangle, in pixels.\n\t * @param height The height of the rectangle, in pixels.\n\t */\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a new Rectangle object with the same values for the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties as the original Rectangle object.\n\t * \n\t * @return A new Rectangle object with the same values for the\n\t *         <code>x</code>, <code>y</code>, <code>width</code>, and\n\t *         <code>height</code> properties as the original Rectangle object.\n\t */\n\tpublic function clone ():Rectangle {\n\t\t\n\t\treturn new Rectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object.\n\t * \n\t * @param x The <i>x</i> coordinate(horizontal position) of the point.\n\t * @param y The <i>y</i> coordinate(vertical position) of the point.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic function contains (x:Float, y:Float):Bool {\n\t\t\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the specified point is contained within the rectangular\n\t * region defined by this Rectangle object. This method is similar to the\n\t * <code>Rectangle.contains()</code> method, except that it takes a Point\n\t * object as a parameter.\n\t * \n\t * @param point The point, as represented by its <i>x</i> and <i>y</i>\n\t *              coordinates.\n\t * @return A value of <code>true</code> if the Rectangle object contains the\n\t *         specified point; otherwise <code>false</code>.\n\t */\n\tpublic function containsPoint (point:Point):Bool {\n\t\t\n\t\treturn contains (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the Rectangle object specified by the <code>rect</code>\n\t * parameter is contained within this Rectangle object. A Rectangle object is\n\t * said to contain another if the second Rectangle object falls entirely\n\t * within the boundaries of the first.\n\t * \n\t * @param rect The Rectangle object being checked.\n\t * @return A value of <code>true</code> if the Rectangle object that you\n\t *         specify is contained by this Rectangle object; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic function containsRect (rect:Rectangle):Bool {\n\t\t\n\t\tif (rect.width <= 0 || rect.height <= 0) {\n\t\t\t\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\n\t\t\n\t\tx = sourceRect.x;\n\t\ty = sourceRect.y;\n\t\twidth = sourceRect.width;\n\t\theight = sourceRect.height;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the object specified in the <code>toCompare</code>\n\t * parameter is equal to this Rectangle object. This method compares the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of an object against the same properties of\n\t * this Rectangle object.\n\t * \n\t * @param toCompare The rectangle to compare to this Rectangle object.\n\t * @return A value of <code>true</code> if the object has exactly the same\n\t *         values for the <code>x</code>, <code>y</code>, <code>width</code>,\n\t *         and <code>height</code> properties as this Rectangle object;\n\t *         otherwise <code>false</code>.\n\t */\n\tpublic function equals (toCompare:Rectangle):Bool {\n\t\t\n\t\treturn toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Increases the size of the Rectangle object by the specified amounts, in\n\t * pixels. The center point of the Rectangle object stays the same, and its\n\t * size increases to the left and right by the <code>dx</code> value, and to\n\t * the top and the bottom by the <code>dy</code> value.\n\t * \n\t * @param dx The value to be added to the left and the right of the Rectangle\n\t *           object. The following equation is used to calculate the new\n\t *           width and position of the rectangle:\n\t * @param dy The value to be added to the top and the bottom of the\n\t *           Rectangle. The following equation is used to calculate the new\n\t *           height and position of the rectangle:\n\t */\n\tpublic function inflate (dx:Float, dy:Float):Void {\n\t\t\n\t\tx -= dx; width += dx * 2;\n\t\ty -= dy; height += dy * 2;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Increases the size of the Rectangle object. This method is similar to the\n\t * <code>Rectangle.inflate()</code> method except it takes a Point object as\n\t * a parameter.\n\t *\n\t * <p>The following two code examples give the same result:</p>\n\t * \n\t * @param point The <code>x</code> property of this Point object is used to\n\t *              increase the horizontal dimension of the Rectangle object.\n\t *              The <code>y</code> property is used to increase the vertical\n\t *              dimension of the Rectangle object.\n\t */\n\tpublic function inflatePoint (point:Point):Void {\n\t\t\n\t\tinflate (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * If the Rectangle object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object, returns the area of\n\t * intersection as a Rectangle object. If the rectangles do not intersect,\n\t * this method returns an empty Rectangle object with its properties set to\n\t * 0.\n\t * \n\t * @param toIntersect The Rectangle object to compare against to see if it\n\t *                    intersects with this Rectangle object.\n\t * @return A Rectangle object that equals the area of intersection. If the\n\t *         rectangles do not intersect, this method returns an empty\n\t *         Rectangle object; that is, a rectangle with its <code>x</code>,\n\t *         <code>y</code>, <code>width</code>, and <code>height</code>\n\t *         properties set to 0.\n\t */\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\tif (y1 <= y0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether the object specified in the <code>toIntersect</code>\n\t * parameter intersects with this Rectangle object. This method checks the\n\t * <code>x</code>, <code>y</code>, <code>width</code>, and\n\t * <code>height</code> properties of the specified Rectangle object to see if\n\t * it intersects with this Rectangle object.\n\t * \n\t * @param toIntersect The Rectangle object to compare against this Rectangle\n\t *                    object.\n\t * @return A value of <code>true</code> if the specified object intersects\n\t *         with this Rectangle object; otherwise <code>false</code>.\n\t */\n\tpublic function intersects (toIntersect:Rectangle):Bool {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\treturn y1 > y0;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether or not this Rectangle object is empty.\n\t * \n\t * @return A value of <code>true</code> if the Rectangle object's width or\n\t *         height is less than or equal to 0; otherwise <code>false</code>.\n\t */\n\tpublic function isEmpty ():Bool {\n\t\t\n\t\treturn (width <= 0 || height <= 0);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adjusts the location of the Rectangle object, as determined by its\n\t * top-left corner, by the specified amounts.\n\t * \n\t * @param dx Moves the <i>x</i> value of the Rectangle object by this amount.\n\t * @param dy Moves the <i>y</i> value of the Rectangle object by this amount.\n\t */\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adjusts the location of the Rectangle object using a Point object as a\n\t * parameter. This method is similar to the <code>Rectangle.offset()</code>\n\t * method, except that it takes a Point object as a parameter.\n\t * \n\t * @param point A Point object to use to offset this Rectangle object.\n\t */\n\tpublic function offsetPoint (point:Point):Void {\n\t\t\n\t\tx += point.x;\n\t\ty += point.y;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n\t * empty if its width or height is less than or equal to 0.\n\t *\n\t * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n\t * <code>width</code>, and <code>height</code> properties to 0.</p>\n\t * \n\t */\n\tpublic function setEmpty ():Void {\n\t\t\n\t\tx = y = width = height = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\twidth = widtha;\n\t\theight = heighta;\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (m:Matrix):Rectangle {\n\t\t\n\t\tvar tx0 = m.a * x + m.c * y;\n\t\tvar tx1 = tx0;\n\t\tvar ty0 = m.b * x + m.d * y;\n\t\tvar ty1 = tx0;\n\n\t\tvar tx = m.a * (x + width) + m.c * y;\n\t\tvar ty = m.b * (x + width) + m.d * y;\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * (x + width) + m.c * (y + height);\n\t\tty = m.b * (x + width) + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\n\t\ttx = m.a * x + m.c * (y + height);\n\t\tty = m.b * x + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\treturn new Rectangle (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds two rectangles together to create a new Rectangle object, by filling\n\t * in the horizontal and vertical space between the two rectangles.\n\t *\n\t * <p><b>Note:</b> The <code>union()</code> method ignores rectangles with\n\t * <code>0</code> as the height or width value, such as: <code>var\n\t * rect2:Rectangle = new Rectangle(300,300,50,0);</code></p>\n\t * \n\t * @param toUnion A Rectangle object to add to this Rectangle object.\n\t * @return A new Rectangle object that is the union of the two rectangles.\n\t */\n\tpublic function union (toUnion:Rectangle):Rectangle {\n\t\t\n\t\tif (width == 0 || height == 0) {\n\t\t\t\n\t\t\treturn toUnion.clone ();\n\t\t\t\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\n\t\t\t\n\t\t\treturn clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function __contract (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x < x) this.x = x;\n\t\tif (this.y < y) this.y = y;\n\t\tif (this.right > x + width) this.width = x + width - this.x;\n\t\tif (this.bottom > y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function __expand (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x > x)\n\t\t{\n\t\t\tthis.x = x;\n\t\t\tthis.width = cacheRight - x;\n\t\t}\n\t\tif (this.y > y)\n\t\t{\n\t\t\tthis.y = y;\n\t\t\tthis.height = cacheBottom - y;\n\t\t}\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __toLimeRectangle ():LimeRectangle {\n\t\t\n\t\treturn new LimeRectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_bottom ():Float { return y + height; }\n\t@:noCompletion private function set_bottom (b:Float):Float { height = b - y; return b; }\n\t@:noCompletion private function get_bottomRight ():Point { return new Point (x + width, y + height); }\n\t@:noCompletion private function set_bottomRight (p:Point):Point { width = p.x - x; height = p.y - y; return p.clone (); }\n\t@:noCompletion private function get_left ():Float { return x; }\n\t@:noCompletion private function set_left (l:Float):Float { width -= l - x; x = l; return l; }\n\t@:noCompletion private function get_right ():Float { return x + width; }\n\t@:noCompletion private function set_right (r:Float):Float { width = r - x; return r; }\n\t@:noCompletion private function get_size ():Point { return new Point (width, height); }\n\t@:noCompletion private function set_size (p:Point):Point { width = p.x; height = p.y; return p.clone (); }\n\t@:noCompletion private function get_top ():Float { return y; }\n\t@:noCompletion private function set_top (t:Float):Float { height -= t - y; y = t; return t; }\n\t@:noCompletion private function get_topLeft ():Point { return new Point (x, y); }\n\t@:noCompletion private function set_topLeft (p:Point):Point { x = p.x; y = p.y; return p.clone (); }\n\t\n\t\n}\n\n\n#else\ntypedef Rectangle = openfl._v2.geom.Rectangle;\n#end\n#else\ntypedef Rectangle = flash.geom.Rectangle;\n#end","package openfl.geom; #if !flash #if !lime_legacy\n\n\nimport lime.math.Vector2;\n\n\n/**\n * The Point object represents a location in a two-dimensional coordinate\n * system, where <i>x</i> represents the horizontal axis and <i>y</i>\n * represents the vertical axis.\n *\n * <p>The following code creates a point at(0,0):</p>\n *\n * <p>Methods and properties of the following classes use Point objects:</p>\n *\n * <ul>\n *   <li>BitmapData</li>\n *   <li>DisplayObject</li>\n *   <li>DisplayObjectContainer</li>\n *   <li>DisplacementMapFilter</li>\n *   <li>NativeWindow</li>\n *   <li>Matrix</li>\n *   <li>Rectangle</li>\n * </ul>\n *\n * <p>You can use the <code>new Point()</code> constructor to create a Point\n * object.</p>\n */\nclass Point {\n\t\n\t\n\t/**\n\t * The length of the line segment from(0,0) to this point.\n\t */\n\tpublic var length (get, null):Float;\n\t\n\t/**\n\t * The horizontal coordinate of the point. The default value is 0.\n\t */\n\tpublic var x:Float;\n\t\n\t/**\n\t * The vertical coordinate of the point. The default value is 0.\n\t */\n\tpublic var y:Float;\n\t\n\t\n\t/**\n\t * Creates a new point. If you pass no parameters to this method, a point is\n\t * created at(0,0).\n\t * \n\t * @param x The horizontal coordinate.\n\t * @param y The vertical coordinate.\n\t */\n\tpublic function new (x:Float = 0, y:Float = 0) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds the coordinates of another point to the coordinates of this point to\n\t * create a new point.\n\t * \n\t * @param v The point to be added.\n\t * @return The new point.\n\t */\n\tpublic function add (v:Point):Point {\n\t\t\n\t\treturn new Point (v.x + x, v.y + y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates a copy of this Point object.\n\t * \n\t * @return The new Point object.\n\t */\n\tpublic function clone ():Point {\n\t\t\n\t\treturn new Point (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourcePoint:Point):Void {\n\t\t\n\t\tx = sourcePoint.x;\n\t\ty = sourcePoint.y;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the distance between <code>pt1</code> and <code>pt2</code>.\n\t * \n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @return The distance between the first and second points.\n\t */\n\tpublic static function distance (pt1:Point, pt2:Point):Float {\n\t\t\n\t\tvar dx = pt1.x - pt2.x;\n\t\tvar dy = pt1.y - pt2.y;\n\t\treturn Math.sqrt (dx * dx + dy * dy);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines whether two points are equal. Two points are equal if they have\n\t * the same <i>x</i> and <i>y</i> values.\n\t * \n\t * @param toCompare The point to be compared.\n\t * @return A value of <code>true</code> if the object is equal to this Point\n\t *         object; <code>false</code> if it is not equal.\n\t */\n\tpublic function equals (toCompare:Point):Bool {\n\t\t\n\t\treturn toCompare != null && toCompare.x == x && toCompare.y == y;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines a point between two specified points. The parameter\n\t * <code>f</code> determines where the new interpolated point is located\n\t * relative to the two end points specified by parameters <code>pt1</code>\n\t * and <code>pt2</code>. The closer the value of the parameter <code>f</code>\n\t * is to <code>1.0</code>, the closer the interpolated point is to the first\n\t * point(parameter <code>pt1</code>). The closer the value of the parameter\n\t * <code>f</code> is to 0, the closer the interpolated point is to the second\n\t * point(parameter <code>pt2</code>).\n\t * \n\t * @param pt1 The first point.\n\t * @param pt2 The second point.\n\t * @param f   The level of interpolation between the two points. Indicates\n\t *            where the new point will be, along the line between\n\t *            <code>pt1</code> and <code>pt2</code>. If <code>f</code>=1,\n\t *            <code>pt1</code> is returned; if <code>f</code>=0,\n\t *            <code>pt2</code> is returned.\n\t * @return The new, interpolated point.\n\t */\n\tpublic static function interpolate (pt1:Point, pt2:Point, f:Float):Point {\n\t\t\n\t\treturn new Point (pt2.x + f * (pt1.x - pt2.x), pt2.y + f * (pt1.y - pt2.y));\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Scales the line segment between(0,0) and the current point to a set\n\t * length.\n\t * \n\t * @param thickness The scaling value. For example, if the current point is\n\t *                 (0,5), and you normalize it to 1, the point returned is\n\t *                  at(0,1).\n\t * @return The normalized point.\n\t */\n\tpublic function normalize (thickness:Float):Void {\n\t\t\n\t\tif (x == 0 && y == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar norm = thickness / Math.sqrt (x * x + y * y);\n\t\t\tx *= norm;\n\t\t\ty *= norm;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Offsets the Point object by the specified amount. The value of\n\t * <code>dx</code> is added to the original value of <i>x</i> to create the\n\t * new <i>x</i> value. The value of <code>dy</code> is added to the original\n\t * value of <i>y</i> to create the new <i>y</i> value.\n\t * \n\t * @param dx The amount by which to offset the horizontal coordinate,\n\t *           <i>x</i>.\n\t * @param dy The amount by which to offset the vertical coordinate, <i>y</i>.\n\t */\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Converts a pair of polar coordinates to a Cartesian point coordinate.\n\t * \n\t * @param len   The length coordinate of the polar pair.\n\t * @param angle The angle, in radians, of the polar pair.\n\t * @return The Cartesian point.\n\t */\n\tpublic static function polar (len:Float, angle:Float):Point {\n\t\t\n\t\treturn new Point (len * Math.cos (angle), len * Math.sin (angle));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function setTo (xa:Float, ya:Float):Void {\t\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t}\n\t\n\t\n\t/**\n\t * Subtracts the coordinates of another point from the coordinates of this\n\t * point to create a new point.\n\t * \n\t * @param v The point to be subtracted.\n\t * @return The new point.\n\t */\n\tpublic function subtract (v:Point):Point {\n\t\t\n\t\treturn new Point (x - v.x, y - v.y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a string that contains the values of the <i>x</i> and <i>y</i>\n\t * coordinates. The string has the form <code>\"(x=<i>x</i>,\n\t * y=<i>y</i>)\"</code>, so calling the <code>toString()</code> method for a\n\t * point at 23,17 would return <code>\"(x=23, y=17)\"</code>.\n\t * \n\t * @return The string representation of the coordinates.\n\t */\n\tpublic function toString ():String {\n\t\t\n\t\treturn \"(x=\" + x + \", y=\" + y + \")\";\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __toLimeVector2 ():Vector2 {\n\t\t\n\t\treturn new Vector2 (x, y);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Point = openfl._v2.geom.Point;\n#end\n#else\ntypedef Point = flash.geom.Point;\n#end\n","package openfl._internal.renderer.opengl.utils;\n\n\nimport haxe.EnumFlags;\nimport lime.graphics.opengl.GLBuffer;\nimport lime.graphics.GLRenderContext;\nimport lime.utils.Float32Array;\nimport lime.utils.UInt16Array;\nimport openfl._internal.renderer.opengl.shaders.DrawTrianglesShader;\nimport openfl._internal.renderer.opengl.shaders.FillShader;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.GLBucketData;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer.RenderMode;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.BlendMode;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl.display.Graphics;\nimport openfl.display.JointStyle;\nimport openfl.display.LineScaleMode;\nimport openfl.display.TriangleCulling;\nimport openfl.display.Tilesheet;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.gl.GLTexture;\nimport openfl.utils.Int16Array;\nimport openfl.Vector;\n\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.BitmapData)\n@:access(openfl.geom.Matrix)\n\n\nclass GraphicsRenderer {\n\t\n\t\n\tpublic static var graphicsDataPool:Array<GLGraphicsData> = [];\n\tpublic static var bucketPool:Array<GLBucket> = [];\n\t\n\tprivate static var objectPosition:Point = new Point();\n\tprivate static var objectBounds:Rectangle = new Rectangle();\n\t\n\tprivate static var lastVertsBuffer:GLBuffer;\n\tprivate static var lastBucketMode:BucketMode;\n\tprivate static var lastTexture:GLTexture;\n\tprivate static var lastTextureRepeat:Bool;\n\tprivate static var lastTextureSmooth:Bool;\n\t\n\tpublic static function buildCircle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\n\t\tvar rectData = path.points;\n\n\t\tvar x = rectData[0];\n\t\tvar y = rectData[1];\n\t\tvar width = rectData[2];\n\t\tvar height = (rectData.length == 3) ? width : rectData[3];\n\t\t\n\t\tif (path.type == Ellipse) {\n\t\t\twidth /= 2;\n\t\t\theight /= 2;\n\t\t\tx += width;\n\t\t\ty += height;\n\t\t}\n\n\t\tif(localCoords) {\n\t\t\tx -= objectBounds.x;\n\t\t\ty -= objectBounds.y;\n\t\t}\n\n\t\tvar totalSegs = 40;\n\t\tvar seg = (Math.PI * 2) / totalSegs;\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\n\t\t\n\t\tif(bucket != null) {\n\t\t\tvar verts = bucket.verts;\n\t\t\tvar indices = bucket.indices;\n\t\t\t\n\t\t\tvar vertPos = Std.int (verts.length / 2);\n\t\t\t\n\t\t\tindices.push (vertPos);\n\t\t\t\n\t\t\tfor (i in 0...totalSegs + 1) {\n\t\t\t\t\n\t\t\t\tverts.push (x);\n\t\t\t\tverts.push (y);\n\t\t\t\t\n\t\t\t\tverts.push (x + Math.sin (seg * i) * width);\n\t\t\t\tverts.push (y + Math.cos (seg * i) * height);\n\t\t\t\t\n\t\t\t\tindices.push (vertPos++);\n\t\t\t\tindices.push (vertPos++);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tindices.push (vertPos - 1);\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tif (path.line.width > 0) {\n\t\t\t\n\t\t\tvar tempPoints = path.points;\n\t\t\tpath.points = [];\n\t\t\t\n\t\t\tfor (i in 0...totalSegs + 1) {\n\t\t\t\t\n\t\t\t\tpath.points.push (x + Math.sin (seg * i) * width);\n\t\t\t\tpath.points.push (y + Math.cos (seg * i) * height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuildLine (path, bucket.line);\n\t\t\tpath.points = tempPoints;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static function buildComplexPoly (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\n\t\tif (path.points.length < 6) return;\n\t\tvar points = path.points.copy();\n\t\t\n\t\tif(localCoords) {\n\t\t\tfor (i in 0...Std.int(points.length / 2)) {\n\t\t\t\tpoints[i * 2] -= objectBounds.x;\n\t\t\t\tpoints[i * 2 + 1] -= objectBounds.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\t\tbucket.drawMode = glStack.gl.TRIANGLE_FAN;\n\t\tbucket.verts = points;\n\t\t\n\t\tvar indices = bucket.indices;\n\t\tvar length = Std.int (points.length / 2);\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tindices.push (i);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (path.line.width > 0) {\n\t\t\t\n\t\t\tbuildLine (path, bucket.line, localCoords);\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static function buildLine (path:DrawPath, bucket:GLBucketData, localCoords:Bool = false):Void {\n\t\tvar points = path.points;\n\t\tif (points.length == 0) return;\n\t\t\n\t\tif (localCoords) {\n\t\t\tfor (i in 0...Std.int(points.length / 2)) {\n\t\t\t\tpoints[i * 2] -= objectBounds.x;\n\t\t\t\tpoints[i * 2 + 1] -= objectBounds.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (path.line.width % 2 > 0) {\n\t\t\t\n\t\t\tfor (i in 0...points.length) {\n\t\t\t\t\n\t\t\t\tpoints[i] += 0.5;\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\tvar firstPoint = new Point (points[0], points[1]);\n\t\tvar lastPoint = new Point (points[Std.int (points.length - 2)], points[Std.int (points.length - 1)]);\n\t\t\n\t\tif (firstPoint.x == lastPoint.x && firstPoint.y == lastPoint.y) {\n\t\t\t\n\t\t\tpoints = points.copy ();\n\t\t\t\n\t\t\tpoints.pop ();\n\t\t\tpoints.pop ();\n\t\t\t\n\t\t\tlastPoint = new Point (points[Std.int (points.length - 2)], points[Std.int (points.length - 1)]);\n\t\t\t\n\t\t\tvar midPointX = lastPoint.x + (firstPoint.x - lastPoint.x) * 0.5;\n\t\t\tvar midPointY = lastPoint.y + (firstPoint.y - lastPoint.y) * 0.5;\n\t\t\t\n\t\t\tpoints.unshift (midPointY);\n\t\t\tpoints.unshift (midPointX);\n\t\t\tpoints.push (midPointX);\n\t\t\tpoints.push (midPointY);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar verts = bucket.verts;\n\t\tvar indices = bucket.indices;\n\t\tvar length = Std.int (points.length / 2);\n\t\tvar indexCount = points.length;\n\t\tvar indexStart = Std.int (verts.length / 6);\n\t\t\n\t\tvar width = path.line.width / 2;\n\t\t\n\t\tvar color = hex2rgb (path.line.color);\n\t\tvar alpha = path.line.alpha;\n\t\tvar r = color[0] * alpha;\n\t\tvar g = color[1] * alpha;\n\t\tvar b = color[2] * alpha;\n\t\t\n\t\tvar px:Float, py:Float, p1x:Float, p1y:Float, p2x:Float, p2y:Float, p3x:Float, p3y:Float;\n\t\tvar perpx:Float, perpy:Float, perp2x:Float, perp2y:Float, perp3x:Float, perp3y:Float;\n\t\tvar a1:Float, b1:Float, c1:Float, a2:Float, b2:Float, c2:Float;\n\t\tvar denom:Float, pdist:Float, dist:Float;\n\t\t\n\t\tp1x = points[0];\n\t\tp1y = points[1];\n\t\t\n\t\tp2x = points[2];\n\t\tp2y = points[3];\n\t\t\n\t\tperpx = -(p1y - p2y);\n\t\tperpy =  p1x - p2x;\n\t\t\n\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\n\t\t\n\t\tperpx = perpx / dist;\n\t\tperpy = perpy / dist;\n\t\tperpx = perpx * width;\n\t\tperpy = perpy * width;\n\t\t\n\t\tverts.push (p1x - perpx);\n\t\tverts.push (p1y - perpy);\n\t\tverts.push (r);\n\t\tverts.push (g);\n\t\tverts.push (b);\n\t\tverts.push (alpha);\n\t\t\n\t\tverts.push (p1x + perpx);\n\t\tverts.push (p1y + perpy);\n\t\tverts.push (r);\n\t\tverts.push (g);\n\t\tverts.push (b);\n\t\tverts.push (alpha);\n\t\t\n\t\tfor (i in 1...(length - 1)) {\n\t\t\t\n\t\t\tp1x = points[(i - 1) * 2];\n\t\t\tp1y = points[(i - 1) * 2 + 1];\n\t\t\tp2x = points[(i) * 2];\n\t\t\tp2y = points[(i) * 2 + 1];\n\t\t\tp3x = points[(i + 1) * 2];\n\t\t\tp3y = points[(i + 1) * 2 + 1];\n\t\t\t\n\t\t\tperpx = -(p1y - p2y);\n\t\t\tperpy = p1x - p2x;\n\t\t\t\n\t\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\n\t\t\tperpx = perpx / dist;\n\t\t\tperpy = perpy / dist;\n\t\t\tperpx = perpx * width;\n\t\t\tperpy = perpy * width;\n\t\t\t\n\t\t\tperp2x = -(p2y - p3y);\n\t\t\tperp2y = p2x - p3x;\n\t\t\t\n\t\t\tdist = Math.sqrt (Math.abs((perp2x * perp2x) + (perp2y * perp2y)));\n\t\t\tperp2x = perp2x / dist;\n\t\t\tperp2y = perp2y / dist;\n\t\t\tperp2x = perp2x * width;\n\t\t\tperp2y = perp2y * width;\n\t\t\t\n\t\t\ta1 = (-perpy + p1y) - (-perpy + p2y);\n\t\t\tb1 = (-perpx + p2x) - (-perpx + p1x);\n\t\t\tc1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\n\t\t\ta2 = (-perp2y + p3y) - (-perp2y + p2y);\n\t\t\tb2 = (-perp2x + p2x) - (-perp2x + p3x);\n\t\t\tc2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\n\t\t\t\n\t\t\tdenom = (a1 * b2) - (a2 * b1);\n\t\t\t\n\t\t\tif (Math.abs (denom) < 0.1) {\n\t\t\t\t\n\t\t\t\tdenom += 10.1;\n\t\t\t\t\n\t\t\t\tverts.push (p2x - perpx);\n\t\t\t\tverts.push (p2y - perpy);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tverts.push (p2x + perpx);\n\t\t\t\tverts.push (p2y + perpy);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpx = ((b1 * c2) - (b2 * c1)) / denom;\n\t\t\tpy = ((a2 * c1) - (a1 * c2)) / denom;\n\t\t\t\n\t\t\tpdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);\n\t\t\t\n\t\t\tif (pdist > 140 * 140) {\n\t\t\t\t\n\t\t\t\tperp3x = perpx - perp2x;\n\t\t\t\tperp3y = perpy - perp2y;\n\t\t\t\t\n\t\t\t\tdist = Math.sqrt (Math.abs((perp3x * perp3x) + (perp3y * perp3y)));\n\t\t\t\tperp3x = perp3x / dist;\n\t\t\t\tperp3y = perp3y / dist;\n\t\t\t\tperp3x = perp3x * width;\n\t\t\t\tperp3y = perp3y * width;\n\t\t\t\t\n\t\t\t\tverts.push (p2x - perp3x);\n\t\t\t\tverts.push (p2y - perp3y);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tverts.push (p2x + perp3x);\n\t\t\t\tverts.push (p2y + perp3y);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tverts.push (p2x - perp3x);\n\t\t\t\tverts.push (p2y -perp3y);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tindexCount++;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tverts.push (px);\n\t\t\t\tverts.push (py);\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t\tverts.push (p2x - (px - p2x));\n\t\t\t\tverts.push (p2y - (py - p2y));\n\t\t\t\tverts.push (r);\n\t\t\t\tverts.push (g);\n\t\t\t\tverts.push (b);\n\t\t\t\tverts.push (alpha);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tp1x = points[(length - 2) * 2];\n\t\tp1y = points[(length - 2) * 2 + 1];\n\t\tp2x = points[(length - 1) * 2];\n\t\tp2y = points[(length - 1) * 2 + 1];\n\t\tperpx = -(p1y - p2y);\n\t\tperpy = p1x - p2x;\n\t\t\n\t\tdist = Math.sqrt (Math.abs((perpx * perpx) + (perpy * perpy)));\n\t\tif (!Math.isFinite(dist)) trace(((perpx * perpx) + (perpy * perpy)));\n\t\tperpx = perpx / dist;\n\t\tperpy = perpy / dist;\n\t\tperpx = perpx * width;\n\t\tperpy = perpy * width;\n\t\t\n\t\tverts.push (p2x - perpx);\n\t\tverts.push (p2y - perpy);\n\t\tverts.push (r);\n\t\tverts.push (g);\n\t\tverts.push (b);\n\t\tverts.push (alpha);\n\t\t\n\t\tverts.push (p2x + perpx);\n\t\tverts.push (p2y + perpy);\n\t\tverts.push (r);\n\t\tverts.push (g);\n\t\tverts.push (b);\n\t\tverts.push (alpha);\n\t\t\n\t\tindices.push (indexStart);\n\t\t\n\t\tfor (i in 0...indexCount) {\n\t\t\t\n\t\t\tindices.push (indexStart++);\n\t\t\t\n\t\t}\n\t\t\n\t\tindices.push (indexStart - 1);\n\t}\n\t\n\tpublic static function buildPoly (path:DrawPath, glStack:GLStack):Void {\n\t\tif (path.points.length < 6) return;\n\t\tvar points = path.points;\n\t\t\n\t\tvar l = points.length;\n\t\tvar sx = points[0];\t\tvar sy = points[1];\n\t\tvar ex = points[l - 2];\tvar ey = points[l - 1];\n\t\t// close polygon\n\t\tif (sx != ex || sy != ey) {\n\t\t\tpoints.push(sx);\n\t\t\tpoints.push(sy);\n\t\t}\n\t\t\n\t\tvar length = Std.int (points.length / 2);\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\t\tvar verts = bucket.verts;\n\t\tvar indices = bucket.indices;\n\t\t\n\t\tif (bucket != null) {\n\t\t\tvar triangles = PolyK.triangulate (points);\n\t\t\tvar vertPos = verts.length / 2;\n\t\t\t\n\t\t\tvar i = 0;\n\t\t\twhile (i < triangles.length) {\n\t\t\t\t\n\t\t\t\tindices.push (Std.int (triangles[i] + vertPos));\n\t\t\t\tindices.push (Std.int (triangles[i] + vertPos));\n\t\t\t\tindices.push (Std.int (triangles[i+1] + vertPos));\n\t\t\t\tindices.push (Std.int (triangles[i+2] + vertPos));\n\t\t\t\tindices.push (Std.int (triangles[i+2] + vertPos));\n\t\t\t\ti += 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tverts.push (points[i * 2]);\n\t\t\t\tverts.push (points[i * 2 + 1]);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (path.line.width > 0) {\n\t\t\t\n\t\t\tbuildLine (path, bucket.line);\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static function buildRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\n\t\tvar rectData = path.points;\n\t\tvar x = rectData[0];\n\t\tvar y = rectData[1];\n\t\tvar width = rectData[2];\n\t\tvar height = rectData[3];\n\t\t\n\t\tif (localCoords) {\n\t\t\tx -= objectBounds.x;\n\t\t\ty -= objectBounds.y;\n\t\t}\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\t\t\n\t\tif(bucket != null) {\n\t\t\tvar verts = bucket.verts;\n\t\t\tvar indices = bucket.indices;\n\t\t\t\n\t\t\tvar vertPos = Std.int (verts.length / 2);\n\t\t\t\n\t\t\tverts.push (x); \n\t\t\tverts.push (y);\n\t\t\tverts.push (x + width);\n\t\t\tverts.push (y);\n\t\t\tverts.push (x);\n\t\t\tverts.push (y + height);\n\t\t\tverts.push (x + width);\n\t\t\tverts.push (y + height);\n\t\t\t\n\t\t\tindices.push (vertPos);\n\t\t\tindices.push (vertPos);\n\t\t\tindices.push (vertPos + 1);\n\t\t\tindices.push (vertPos + 2);\n\t\t\tindices.push (vertPos + 3);\n\t\t\tindices.push (vertPos + 3);\n\t\t}\n\t\t\n\t\t\n\t\tif (path.line.width > 0) {\n\t\t\t\n\t\t\tvar tempPoints = path.points;\n\t\t\tpath.points = [ x, y, x + width, y, x + width, y + height, x, y + height, x, y];\n\t\t\tbuildLine (path, bucket.line);\n\t\t\tpath.points = tempPoints;\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static function buildRoundedRectangle (path:DrawPath, glStack:GLStack, localCoords:Bool = false):Void {\n\t\tvar points = path.points.copy();\n\t\tvar x = points[0];\n\t\tvar y = points[1];\n\t\tvar width = points[2];\n\t\tvar height = points[3];\n\t\tvar radius = points[4];\n\t\t\n\t\tif (localCoords) {\n\t\t\tx -= objectBounds.x;\n\t\t\ty -= objectBounds.y;\n\t\t}\n\t\t\n\t\tvar recPoints:Array<Float> = [];\n\t\trecPoints.push (x);\n\t\trecPoints.push (y + radius);\n\t\t\n\t\trecPoints = recPoints.concat (quadraticBezierCurve (x, y + height - radius, x, y + height, x + radius, y + height));\n\t\trecPoints = recPoints.concat (quadraticBezierCurve (x + width - radius, y + height, x + width, y + height, x + width, y + height - radius));\n\t\trecPoints = recPoints.concat (quadraticBezierCurve (x + width, y + radius, x + width, y, x + width - radius, y));\n\t\trecPoints = recPoints.concat (quadraticBezierCurve (x + radius, y, x, y, x, y + radius));\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\t\t\n\t\tif (bucket != null) {\n\t\t\tvar verts = bucket.verts;\n\t\t\tvar indices = bucket.indices;\n\t\t\t\n\t\t\tvar vecPos = verts.length / 2;\n\t\t\t\n\t\t\tvar triangles = PolyK.triangulate (recPoints);\n\t\t\t\n\t\t\tvar i = 0;\n\t\t\twhile (i < triangles.length) {\n\t\t\t\t\n\t\t\t\tindices.push (Std.int (triangles[i] + vecPos));\n\t\t\t\tindices.push (Std.int (triangles[i] + vecPos));\n\t\t\t\tindices.push (Std.int (triangles[i + 1] + vecPos));\n\t\t\t\tindices.push (Std.int (triangles[i + 2] + vecPos));\n\t\t\t\tindices.push (Std.int (triangles[i + 2] + vecPos));\n\t\t\t\ti += 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ti = 0;\n\t\t\twhile (i < recPoints.length) {\n\t\t\t\t\n\t\t\t\tverts.push (recPoints[i]);\n\t\t\t\tverts.push (recPoints[++i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (path.line.width > 0) {\n\t\t\t\n\t\t\tvar tempPoints = path.points;\n\t\t\tpath.points = recPoints;\n\t\t\tbuildLine (path, bucket.line);\n\t\t\tpath.points = tempPoints;\n\t\t\t\n\t\t}\n\t}\n\t\n\tpublic static function buildDrawTriangles (path:DrawPath, object:DisplayObject, glStack:GLStack, localCoords:Bool = false):Void {\n\t\t\n\t\tvar args = Type.enumParameters(path.type);\n\t\t\n\t\tvar vertices:Vector<Float> = cast args[0];\n\t\tvar indices:Vector<Int> = cast args[1];\n\t\tvar uvtData:Vector<Float> = cast args[2];\n\t\tvar culling:TriangleCulling = cast args[3];\n\t\tvar colors:Vector<Int> = cast args[4];\n\t\tvar blendMode:Int = args[5];\n\t\t\n\t\tvar a, b, c, d, tx, ty;\n\t\t\n\t\tif (localCoords) {\n\t\t\ta = 1.0;\n\t\t\tb = 0.0;\n\t\t\tc = 0.0;\n\t\t\td = 1.0;\n\t\t\ttx = 0.0;\n\t\t\tty = 0.0;\n\t\t} else {\n\t\t\ta = object.__worldTransform.a;\n\t\t\tb = object.__worldTransform.b;\n\t\t\tc = object.__worldTransform.c;\n\t\t\td = object.__worldTransform.d;\n\t\t\ttx = object.__worldTransform.tx;\n\t\t\tty = object.__worldTransform.ty;\n\t\t}\n\t\t\n\t\tvar hasColors = colors != null && colors.length > 0;\n\t\t\n\t\tvar bucket = prepareBucket(path, glStack);\n\t\tbucket.rawVerts = true;\n\t\tbucket.glLength = indices.length;\n\t\tbucket.stride = 8;\n\t\t\n\t\tvar vertsLength = bucket.glLength * bucket.stride;\n\t\tvar verts:Float32Array;\n\t\t\n\t\tif (bucket.glVerts == null || bucket.glVerts.length < vertsLength) {\n\t\t\tverts = new Float32Array(vertsLength);\n\t\t\tbucket.glVerts = verts;\n\t\t} else {\n\t\t\tverts = bucket.glVerts;\n\t\t}\n\t\t\n\t\tvar v0 = 0; var v1 = 0; var v2 = 0;\n\t\tvar i0 = 0; var i1 = 0; var i2 = 0;\n\t\t\n\t\tvar x0 = 0.0; var y0 = 0.0;\n\t\tvar x1 = 0.0; var y1 = 0.0;\n\t\tvar x2 = 0.0; var y2 = 0.0;\n\t\t\n\t\tvar idx = 0;\n\t\tvar color = hex2rgba(0xFFFFFFFF);\n\t\tvar ctmp = color;\n\t\tfor (i in 0...Std.int(indices.length / 3)) {\n\t\t\t\n\t\t\ti0 = indices[i * 3]; i1 = indices[i * 3 + 1]; i2 = indices[i * 3 + 2];\t\n\t\t\tv0 = i0 * 2; v1 = i1 * 2; v2 = i2 * 2;\n\t\t\t\n\t\t\tx0 = vertices[v0];\ty0 = vertices[v0 + 1];\n\t\t\tx1 = vertices[v1];\ty1 = vertices[v1 + 1];\n\t\t\tx2 = vertices[v2];\ty2 = vertices[v2 + 1];\n\t\t\t\n\t\t\tif (localCoords) {\n\t\t\t\tx0 -= objectBounds.x;\n\t\t\t\ty0 -= objectBounds.y;\n\t\t\t\tx1 -= objectBounds.x;\n\t\t\t\ty1 -= objectBounds.y;\n\t\t\t\tx2 -= objectBounds.x;\n\t\t\t\ty2 -= objectBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tswitch(culling) {\n\t\t\t\tcase POSITIVE:\n\t\t\t\t\tif (!isCCW(x0, y0, x1, y1, x2, y2)) continue;\n\t\t\t\tcase NEGATIVE:\n\t\t\t\t\tif (isCCW(x0, y0, x1, y1, x2, y2)) continue;\n\t\t\t\tcase _:\n\t\t\t}\n\t\t\t\n\t\t\tverts[idx++] = a * x0 + c * y0 + tx;\n\t\t\tverts[idx++] = b * x0 + d * y0 + ty;\n\t\t\tverts[idx++] = uvtData[v0];\n\t\t\tverts[idx++] = uvtData[v0 + 1];\n\t\t\tif (hasColors) {\n\t\t\t\tctmp = hex2rgba(colors[i0]);\n\t\t\t\tverts[idx++] = ctmp[0];\n\t\t\t\tverts[idx++] = ctmp[1];\n\t\t\t\tverts[idx++] = ctmp[2];\n\t\t\t\tverts[idx++] = ctmp[3];\n\t\t\t} else {\n\t\t\t\tverts[idx++] = color[0];\n\t\t\t\tverts[idx++] = color[1];\n\t\t\t\tverts[idx++] = color[2];\n\t\t\t\tverts[idx++] = color[3];\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tverts[idx++] = a * x1 + c * y1 + tx;\n\t\t\tverts[idx++] = b * x1 + d * y1 + ty;\n\t\t\tverts[idx++] = uvtData[v1];\n\t\t\tverts[idx++] = uvtData[v1 + 1];\n\t\t\tif (hasColors) {\n\t\t\t\tctmp = hex2rgba(colors[i1]);\n\t\t\t\tverts[idx++] = ctmp[0];\n\t\t\t\tverts[idx++] = ctmp[1];\n\t\t\t\tverts[idx++] = ctmp[2];\n\t\t\t\tverts[idx++] = ctmp[3];\n\t\t\t} else {\n\t\t\t\tverts[idx++] = color[0];\n\t\t\t\tverts[idx++] = color[1];\n\t\t\t\tverts[idx++] = color[2];\n\t\t\t\tverts[idx++] = color[3];\n\t\t\t}\n\t\t\t\n\t\t\tverts[idx++] = a * x2 + c * y2 + tx;\n\t\t\tverts[idx++] = b * x2 + d * y2 + ty;\n\t\t\tverts[idx++] = uvtData[v2];\n\t\t\tverts[idx++] = uvtData[v2 + 1];\n\t\t\tif (hasColors) {\n\t\t\t\tctmp = hex2rgba(colors[i2]);\n\t\t\t\tverts[idx++] = ctmp[0];\n\t\t\t\tverts[idx++] = ctmp[1];\n\t\t\t\tverts[idx++] = ctmp[2];\n\t\t\t\tverts[idx++] = ctmp[3];\n\t\t\t} else {\n\t\t\t\tverts[idx++] = color[0];\n\t\t\t\tverts[idx++] = color[1];\n\t\t\t\tverts[idx++] = color[2];\n\t\t\t\tverts[idx++] = color[3];\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static inline function buildDrawTiles (path:DrawPath, glStack:GLStack):Void {\n\t\tprepareBucket(path, glStack);\n\t}\n\t\n\tprivate static function quadraticBezierCurve (fromX:Float, fromY:Float, cpX:Float, cpY:Float, toX:Float, toY:Float):Array<Float> {\n\t\t\n\t\tvar xa, ya, xb, yb, x, y;\n\t\tvar n = 20;\n\t\tvar points = [];\n\t\t\n\t\tvar getPt = function (n1:Float , n2:Float, perc:Float):Float {\n\t\t\t\n\t\t\tvar diff = n2 - n1;\n\t\t\treturn n1 + (diff * perc);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar j = 0.0;\n\t\tfor (i in 0...(n + 1)) {\n\t\t\t\n\t\t\tj = i / n;\n\t\t\t\n\t\t\txa = getPt (fromX, cpX, j);\n\t\t\tya = getPt (fromY, cpY, j);\n\t\t\txb = getPt (cpX, toX, j);\n\t\t\tyb = getPt (cpY, toY, j);\n\t\t\t\n\t\t\tx = getPt (xa, xb, j);\n\t\t\ty = getPt (ya, yb, j);\n\t\t\t\n\t\t\tpoints.push (x);\n\t\t\tpoints.push (y);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn points;\n\t\t\n\t}\n\t\n\tpublic static function render (object:DisplayObject, renderSession:RenderSession):Void {\n\t\tvar graphics = object.__graphics;\n\t\tvar spritebatch = renderSession.spriteBatch;\n\t\tvar dirty = graphics.__dirty;\n\t\tif (graphics.__commands.length <= 0) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (dirty) {\n\t\t\tupdateGraphics (object, renderSession.gl, object.cacheAsBitmap);\n\t\t}\n\t\t\n\t\t//TODO find a way to remove drawTiles calls\n\t\tif (object.cacheAsBitmap) {\n\t\t\t\n\t\t\tif (dirty) {\n\t\t\t\t\n\t\t\t\tvar gl = renderSession.gl;\n\t\t\t\tvar bounds = graphics.__bounds;\n\t\t\t\tvar texture = graphics.__cachedTexture;\n\t\t\t\t\n\t\t\t\tvar w = Math.floor(bounds.width + 0.5);\n\t\t\t\tvar h = Math.floor(bounds.height+ 0.5);\n\n\t\t\t\tif (texture == null) {\n\t\t\t\t\ttexture = new FilterTexture(gl, w, h, false);\n\t\t\t\t\tgraphics.__cachedTexture = texture;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttexture.resize(w, h);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, texture.frameBuffer);\n\t\t\t\tgl.viewport (0, 0, w, h);\n\t\t\t\ttexture.clear();\n\t\t\t\trenderGraphics(object, renderSession, new Point(w / 2, -h / 2), true);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\t\n\t\t\t\tgl.viewport(0, 0, renderSession.renderer.width, renderSession.renderer.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (!spritebatch.drawing) {\n\t\t\t\tspritebatch.begin(renderSession);\n\t\t\t}\n\t\t\t\n\t\t\tspritebatch.renderCachedGraphics(object);\n\t\t\t\n\t\t} else {\n\t\t\trenderGraphics(object, renderSession, renderSession.projection, false);\n\t\t}\n\n\t}\n\t\n\tpublic static function renderGraphics (object:DisplayObject, renderSession:RenderSession, projection:Point, ?localCoords:Bool = false):Void {\n\t\tvar graphics = object.__graphics;\n\t\tvar gl = renderSession.gl;\n\t\tvar offset = renderSession.offset;\n\t\t\n\t\tvar glStack = graphics.__glStack[GLRenderer.glContextId];\n\t\tvar bucket:GLBucket;\n\t\t\n\t\tvar translationMatrix:Matrix;\n\t\tif (localCoords) {\n\t\t\ttranslationMatrix = Matrix.__identity;\n\t\t} else {\n\t\t\ttranslationMatrix = object.__worldTransform;\n\t\t}\n\t\t\n\t\tvar batchDrawing = renderSession.spriteBatch.drawing;\n\t\t\n\t\tfor (i in 0...glStack.buckets.length) {\n\t\t\tbatchDrawing = renderSession.spriteBatch.drawing;\n\t\t\tbucket = glStack.buckets[i];\n\t\t\tswitch(bucket.mode) {\n\t\t\t\tcase Fill, PatternFill:\n\t\t\t\t\tif (batchDrawing && !localCoords) {\n\t\t\t\t\t\trenderSession.spriteBatch.end();\n\t\t\t\t\t}\n\t\t\t\t\trenderSession.stencilManager.pushBucket(bucket, renderSession, projection, translationMatrix.toArray(true));\n\t\t\t\t\tvar shader = prepareShader(bucket, renderSession, object, projection, translationMatrix.toArray(false));\n\t\t\t\t\trenderFill(bucket, shader, renderSession);\n\t\t\t\t\trenderSession.stencilManager.popBucket(object, bucket, renderSession);\n\t\t\t\tcase DrawTriangles:\n\t\t\t\t\tif (batchDrawing && !localCoords) {\n\t\t\t\t\t\trenderSession.spriteBatch.end();\n\t\t\t\t\t}\n\t\t\t\t\tvar shader = prepareShader(bucket, renderSession, object, projection, null);\n\t\t\t\t\trenderDrawTriangles(bucket, cast shader, renderSession);\n\t\t\t\tcase DrawTiles:\n\t\t\t\t\tif (!batchDrawing) {\n\t\t\t\t\t\trenderSession.spriteBatch.begin(renderSession);\n\t\t\t\t\t}\n\t\t\t\t\trenderDrawTiles(object, bucket, renderSession);\n\t\t\t\tcase _:\n\t\t\t}\n\t\t\t\n\t\t\tfor (data in bucket.data) {\n\t\t\t\tif (data.line != null && data.line.verts.length > 0) {\n\t\t\t\t\tbatchDrawing = renderSession.spriteBatch.drawing;\n\t\t\t\t\tif (batchDrawing && !localCoords) {\n\t\t\t\t\t\trenderSession.spriteBatch.end();\n\t\t\t\t\t}\n\t\t\t\t\tvar shader = renderSession.shaderManager.primitiveShader;\n\t\t\t\t\n\t\t\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\t\t\n\t\t\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, translationMatrix.toArray(true));\n\t\t\t\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\n\t\t\t\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\n\t\t\t\t\tgl.uniform1f (shader.alpha, object.__worldAlpha);\n\t\t\t\t\t\n\t\t\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, data.line.vertsBuffer);\n\n\t\t\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n\t\t\t\t\tgl.vertexAttribPointer (shader.colorAttribute, 4, gl.FLOAT, false, 4 * 6, 2 * 4);\n\t\t\t\t\t\n\t\t\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, data.line.indexBuffer);\n\t\t\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, data.line.indices.length, gl.UNSIGNED_SHORT, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tbatchDrawing = renderSession.spriteBatch.drawing;\n\t\t\tif (!batchDrawing && !localCoords) {\n\t\t\t\trenderSession.spriteBatch.begin(renderSession);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static function updateGraphics (object:DisplayObject, gl:GLRenderContext, ?localCoords:Bool = false):Void {\n\t\t\n\t\tvar graphics = object.__graphics;\n\t\tobjectPosition.setTo(object.x, object.y);\n\t\tif (graphics.__bounds != null) objectBounds.copyFrom(graphics.__bounds);\n\t\tvar glStack:GLStack = null;\n\t\t\n\t\tif (graphics.__dirty) {\n\t\t\t\n\t\t\tglStack = DrawPath.getStack(graphics, gl);\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__dirty = false;\n\t\t\n\t\tfor (data in glStack.buckets) {\n\t\t\tdata.reset();\n\t\t\tbucketPool.push(data);\n\t\t}\n\t\t\n\t\tglStack.reset();\n\t\t\n\t\tfor (i in glStack.lastIndex...graphics.__drawPaths.length) {\n\t\t\tvar path = graphics.__drawPaths[i];\n\t\t\t\n\t\t\tswitch(path.type) {\n\t\t\t\tcase Polygon:\n\t\t\t\t\tbuildComplexPoly (path, glStack, localCoords);\n\t\t\t\tcase Rectangle(rounded):\n\t\t\t\t\tif (rounded) {\n\t\t\t\t\t\tbuildRoundedRectangle (path, glStack, localCoords);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuildRectangle (path, glStack, localCoords);\n\t\t\t\t\t}\n\t\t\t\tcase Circle, Ellipse:\n\t\t\t\t\tbuildCircle (path, glStack, localCoords);\n\t\t\t\tcase DrawTriangles(_):\n\t\t\t\t\tbuildDrawTriangles(path, object, glStack, localCoords);\n\t\t\t\tcase DrawTiles(_):\n\t\t\t\t\tbuildDrawTiles(path, glStack);\n\t\t\t\tcase _:\n\t\t\t}\n\t\t\t\n\t\t\tglStack.lastIndex++;\n\t\t}\n\t\t\n\t\tglStack.upload();\n\t\t\n\t}\n\t\n\tprivate static function prepareBucket(path:DrawPath, glStack:GLStack):GLBucketData {\n\t\tvar bucket:GLBucket = null;\n\t\t\n\t\tswitch(path.fill) {\n\t\t\tcase Color(c, a):\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, Fill);\n\t\t\t\tbucket.color = hex2rgb(c);\n\t\t\t\tbucket.alpha = a;\n\t\t\t\tbucket.uploadTileBuffer = true;\n\t\t\t\t\n\t\t\tcase Texture(b, m, r, s):\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, PatternFill);\n\t\t\t\tbucket.bitmap = b;\n\t\t\t\tbucket.textureRepeat = r;\n\t\t\t\tbucket.textureSmooth = s;\n\t\t\t\tbucket.texture = b.getTexture(glStack.gl);\n\t\t\t\tbucket.uploadTileBuffer = true;\n\t\t\t\t\n\t\t\t\t//prepare the matrix\n\t\t\t\tvar tMatrix = bucket.textureMatrix;\n\t\t\t\ttMatrix.identity();\n\t\t\t\tvar pMatrix:Matrix;\n\t\t\t\tif (m == null) {\n\t\t\t\t\tpMatrix = new Matrix();\n\t\t\t\t} else {\n\t\t\t\t\tpMatrix = m.clone();\n\t\t\t\t}\n\n\t\t\t\tpMatrix = pMatrix.invert();\n\t\t\t\tpMatrix.__translateTransformed(new Point( -objectPosition.x, -objectPosition.y));\n\t\t\t\tvar tx = (pMatrix.tx) / (b.width);\n\t\t\t\tvar ty = (pMatrix.ty) / (b.height);\n\t\t\t\ttMatrix.concat(pMatrix);\n\t\t\t\tbucket.textureTL.x = tx;\n\t\t\t\tbucket.textureTL.y = ty;\n\t\t\t\tbucket.textureBR.x = tx + 1;\n\t\t\t\tbucket.textureBR.y = ty + 1;\n\t\t\t\t\n\t\t\t\ttMatrix.scale(1 / b.width, 1 / b.height);\n\t\t\t\t\n\t\t\t\tbucket.textureMatrix = tMatrix;\n\t\t\tcase _:\n\t\t\t\tbucket = switchBucket(path.fillIndex, glStack, Line);\n\t\t\t\tbucket.uploadTileBuffer = false;\n\t\t}\n\t\t\n\t\tswitch(path.type) {\n\t\t\tcase DrawTriangles(_):\n\t\t\t\tbucket.mode = DrawTriangles;\n\t\t\t\tbucket.uploadTileBuffer = false;\n\t\t\tcase DrawTiles(_):\n\t\t\t\tbucket.mode = DrawTiles;\n\t\t\t\tbucket.uploadTileBuffer = false;\n\t\t\tcase _:\n\t\t}\n\t\t\n\t\tbucket.graphicType = path.type;\n\t\tvar bucketData = bucket.getData();\n\t\t\n\t\treturn bucketData;\n\t}\n\t\n\tprivate static function getBucket(glStack:GLStack, mode:BucketMode):GLBucket {\n\t\tvar b = bucketPool.pop();\n\t\tif (b == null) {\n\t\t\tb = new GLBucket(glStack.gl);\n\t\t}\n\t\tb.mode = mode;\n\t\tglStack.buckets.push(b);\n\t\treturn b;\n\t}\n\t\n\tprivate static function switchBucket (fillIndex:Int, glStack:GLStack, mode:BucketMode):GLBucket {\n\t\tvar bucket:GLBucket;\n\t\t\n\t\tif (glStack.buckets.length == 0) {\n\t\t\tbucket = getBucket(glStack, mode);\n\t\t} else {\n\t\t\tbucket = glStack.buckets[glStack.buckets.length - 1];\n\t\t\tif (bucket.fillIndex != fillIndex) {\n\t\t\t\tbucket = getBucket(glStack, mode);\n\t\t\t}\n\t\t}\n\t\t\n\t\tbucket.dirty = true;\n\t\tbucket.fillIndex = fillIndex;\n\t\t\n\t\treturn bucket;\n\t}\n\t\n\tprivate static function prepareShader(bucket:GLBucket, renderSession:RenderSession, object:DisplayObject, projection:Point, translationMatrix:Float32Array) {\n\t\tvar gl = renderSession.gl;\n\t\tvar offset = renderSession.offset;\n\t\tvar shader:Dynamic =  null;\n\t\t\n\t\tshader = switch(bucket.mode) {\n\t\t\tcase Fill:\n\t\t\t\trenderSession.shaderManager.fillShader;\n\t\t\tcase PatternFill:\n\t\t\t\trenderSession.shaderManager.patternFillShader;\n\t\t\tcase DrawTriangles:\n\t\t\t\trenderSession.shaderManager.drawTrianglesShader;\n\t\t\tcase _:\n\t\t\t\tnull;\n\t\t}\n\t\t\n\t\tif (shader == null) return null;\n\t\t\n\t\tvar newShader = renderSession.shaderManager.setShader(shader);\n\t\t\n\t\t//if (!newShader && lastBucketMode == bucket.mode) {\n\t\t\t//return shader;\n\t\t//}\n\t\t//\n\t\t//lastBucketMode = bucket.mode;\n\t\t\n\t\t// common uniforms\n\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\n\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\n\t\tgl.uniform1f (shader.alpha, object.__worldAlpha * bucket.alpha);\n\t\t\n\t\t// specific uniforms\n\t\tswitch(bucket.mode) {\n\t\t\tcase Fill:\n\t\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, translationMatrix);\n\t\t\t\tgl.uniform3fv (shader.color, new Float32Array (bucket.color));\n\t\t\tcase PatternFill:\n\t\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, translationMatrix);\t\t\n\t\t\t\tgl.uniform1i(shader.sampler, 0);\n\t\t\t\tgl.uniform2f(shader.patternTL, bucket.textureTL.x, bucket.textureTL.y);\n\t\t\t\tgl.uniform2f(shader.patternBR, bucket.textureBR.x, bucket.textureBR.y);\n\t\t\t\tgl.uniformMatrix3fv(shader.patternMatrix, false, bucket.textureMatrix.toArray(false));\n\t\t\tcase DrawTriangles:\n\t\t\t\tif (bucket.texture != null) {\n\t\t\t\t\tgl.uniform1i(shader.useTexture, 1);\n\t\t\t\t\tgl.uniform1i(shader.sampler, 0);\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1i(shader.useTexture, 0);\n\t\t\t\t\tgl.uniform3fv(shader.color, new Float32Array (bucket.color));\n\t\t\t\t}\n\t\t\tcase _:\n\t\t}\n\t\t\n\t\treturn shader;\n\t}\n\t\n\tprivate static function renderFill(bucket:GLBucket, shader:Dynamic, renderSession:RenderSession) {\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tif (bucket.mode == PatternFill && bucket.texture != null) {\n\t\t\tbindTexture(gl, bucket);\n\t\t}\n\t\t\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, bucket.tileBuffer);\n\t\tgl.vertexAttribPointer (shader.aVertexPosition, 4, gl.SHORT, false, 0, 0);\n\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t}\n\t\n\tprivate static function renderDrawTriangles(bucket:GLBucket, shader:DrawTrianglesShader, renderSession:RenderSession) {\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tfor (data in bucket.data) {\n\t\t\tif (data.destroyed) continue;\n\t\t\t\n\t\t\tif (bucket.texture == null) {\n\t\t\t\t// TODO draw it with color\n\t\t\t} else {\n\t\t\t\tbindTexture(gl, bucket);\n\t\t\t}\n\t\t\t\n\t\t\tbindDrawTrianglesBuffer(gl, shader, data);\n\t\t\tgl.drawArrays(gl.TRIANGLES, data.glStart, data.glLength);\n\t\t}\n\t}\n\t\n\tprivate static inline function renderDrawTiles(object:DisplayObject, bucket:GLBucket, renderSession:RenderSession) {\n\t\tvar args = Type.enumParameters(bucket.graphicType);\t\t\n\t\trenderSession.spriteBatch.renderTiles(object, cast args[0], cast args[1], cast args[2], cast args[3], cast args[4]);\n\t}\n\t\n\tprivate static function bindDrawTrianglesBuffer(gl:GLRenderContext, shader:DrawTrianglesShader, data:GLBucketData) {\n\t\t//if (lastVertsBuffer == data.vertsBuffer) {\n\t\t\t//return;\n\t\t//}\n\t\t//lastVertsBuffer = data.vertsBuffer;\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, data.vertsBuffer);\n\t\tvar stride =  data.stride * 4;\n\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.vertexAttribPointer (shader.aTextureCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.vertexAttribPointer (shader.colorAttribute, 4, gl.FLOAT, false, stride, 4 * 4);\n\t}\n\t\n\tprivate static function bindTexture(gl:GLRenderContext, bucket:GLBucket) {\n\t\t//if (bucket.texture == lastTexture && bucket.textureRepeat == lastTextureRepeat && bucket.textureSmooth == lastTextureSmooth) {\n\t\t\t//return;\n\t\t//}\n\t\t//lastTexture = bucket.texture;\n\t\t//lastTextureRepeat = bucket.textureRepeat;\n\t\t//lastTextureSmooth = bucket.textureSmooth;\n\t\t\n\t\tgl.bindTexture(gl.TEXTURE_2D, bucket.texture);\n\t\t\n\t\t// TODO Fix this: webgl can only repeat textures that are power of two\n\t\tif (bucket.textureRepeat #if js && bucket.bitmap.__image.powerOfTwo #end) {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t\t} else {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t}\n\t\t\n\t\tif (bucket.textureSmooth) {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t} else {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\t\t\t\t\t\t\n\t\t}\n\t}\n\n\tprivate static inline function isCCW(x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\n\t}\n\t\n\tpublic static inline function hex2rgb (hex:Null<Int>):Array<Float> {\n\t\treturn hex == #if java 0 #else null #end ? [0,0,0] : [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF) / 255];\n\t}\n\t\n\tpublic static inline function hex2rgba (hex:Null<Int>):Array<Float> {\n\t\treturn hex == #if java 0 #else null #end ? [1,1,1,1] : [(hex >> 16 & 0xFF) / 255, ( hex >> 8 & 0xFF) / 255, (hex & 0xFF) / 255, (hex >> 24 & 0xFF) / 255];\n\t}\n\n}\n\nclass GLStack {\n\n\tpublic var lastIndex:Int = 0;\n\tpublic var buckets:Array<GLBucket>;\n\tpublic var gl:GLRenderContext;\n\n\tpublic function new (gl:GLRenderContext) {\n\t\tthis.gl = gl;\n\t\tbuckets = [];\n\t\tlastIndex = 0;\n\t}\n\t\n\tpublic function reset() {\n\t\tbuckets = [];\n\t\tlastIndex = 0;\n\t}\n\t\n\tpublic function upload() {\n\t\tfor (bucket in buckets) {\n\t\t\t\n\t\t\tif (bucket.dirty) bucket.upload ();\n\t\t\t\n\t\t}\n\t}\n\n}\n\nclass GLBucket {\n\tpublic var gl:GLRenderContext;\n\tpublic var color:Array<Float>;\n\tpublic var alpha:Float;\t\n\tpublic var dirty:Bool;\n\tpublic var graphicType:GraphicType;\n\t\n\tpublic var lastIndex:Int;\n\t\n\tpublic var fillIndex:Int = 0;\n\t\n\tpublic var mode:BucketMode;\n\t\n\tpublic var data:Array<GLBucketData> = [];\n\t\n\tpublic var bitmap:BitmapData;\n\tpublic var texture:GLTexture;\n\tpublic var textureMatrix:Matrix;\n\tpublic var textureRepeat:Bool = false;\n\tpublic var textureSmooth:Bool = true;\n\tpublic var textureTL:Point;\n\tpublic var textureBR:Point;\n\t\n\tpublic var tileBuffer:GLBuffer;\n\tpublic var glTile:Int16Array;\n\tpublic var tile:Array<Int>;\n\t\n\tpublic var uploadTileBuffer = true;\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tcolor = [0, 0, 0];\n\t\tlastIndex = 0;\n\t\talpha = 1;\n\t\tdirty = true;\n\t\t\n\t\tmode = Fill;\n\t\t\n\t\ttextureMatrix = new Matrix();\n\t\ttextureTL = new Point();\n\t\ttextureBR = new Point(1, 1);\n\t}\n\t\n\tpublic function getData():GLBucketData {\n\t\tvar result:GLBucketData = null;\n\t\tvar remove = false;\n\t\tfor (d in data) {\n\t\t\tif (d.destroyed) {\n\t\t\t\tresult = d;\n\t\t\t\tremove = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null) {\n\t\t\tresult = new GLBucketData(gl);\n\t\t}\n\t\t\n\t\tresult.destroyed = false;\n\t\tresult.parent = this;\n\t\t\n\t\tif(remove) data.remove(result);\n\t\tdata.push(result);\n\t\t\n\t\treturn result;\n\t}\n\t\n\tpublic function reset ():Void {\n\t\tfor (d in data) {\n\t\t\td.destroy();\n\t\t}\n\t\tfillIndex = 0;\n\t\tuploadTileBuffer = true;\n\t\tgraphicType = GraphicType.Polygon;\n\t}\n\t\n\tpublic function upload ():Void {\n\t\t\n\t\tif (uploadTileBuffer) {\n\t\t\tif(tileBuffer == null) {\n\t\t\t\ttileBuffer = gl.createBuffer();\n\t\t\t\ttile = [\n\t\t\t\t\t0, 0, \t\t0, 0,\n\t\t\t\t\t4096, 0, \t1, 0,\n\t\t\t\t\t0, 4096, \t0, 1,\n\t\t\t\t\t4096, 4096, 1, 1\n\t\t\t\t];\n\t\t\t\tglTile = new Int16Array (tile);\n\t\t\t}\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, tileBuffer);\n\t\t\tgl.bufferData (gl.ARRAY_BUFFER, glTile, gl.STATIC_DRAW);\n\t\t\tuploadTileBuffer = false;\n\t\t}\n\n\t\tfor (d in data) {\n\t\t\tif (!d.destroyed) {\n\t\t\t\td.upload();\n\t\t\t}\n\t\t}\n\t\t\n\t\tdirty = false;\n\t\t\n\t}\n}\n\nclass GLBucketData {\n\tpublic var gl:GLRenderContext;\n\tpublic var drawMode:Int;\n\tpublic var glLength:Int = 0;\n\tpublic var glStart:Int = 0;\n\t\n\tpublic var vertsBuffer:GLBuffer;\n\tpublic var lastVertsSize:Int = 0;\n\tpublic var glVerts:Float32Array;\n\tpublic var verts:Array<Float>;\n\tpublic var rawVerts:Bool = false;\n\tpublic var stride:Int = 0;\n\t\n\tpublic var indexBuffer:GLBuffer;\n\tpublic var glIndices:UInt16Array;\n\tpublic var indices:Array<Int>;\n\tpublic var rawIndices:Bool = false;\n\t\n\tpublic var line:GLBucketData;\n\tpublic var destroyed:Bool = false;\n\t\n\tpublic var parent:GLBucket;\n\t\n\tpublic function new (gl:GLRenderContext, ?initLine = true) {\n\t\tthis.gl = gl;\n\t\tdrawMode = gl.TRIANGLE_STRIP;\n\t\tverts = [];\n\t\tvertsBuffer = gl.createBuffer ();\n\t\tindices = [];\n\t\tindexBuffer = gl.createBuffer ();\n\t\t\n\t\tif(initLine) {\n\t\t\tline = new GLBucketData(gl, false);\n\t\t}\n\t}\n\t\n\tpublic function destroy():Void {\n\t\tdestroyed = true;\n\t\tverts = [];\n\t\tindices = [];\n\t\tglLength = 0;\n\t\tglStart = 0;\n\t\tstride = 0;\n\t\trawVerts = false;\n\t\trawIndices = false;\n\t\tif (line != null) line.destroy();\n\t}\n\t\n\tpublic function upload():Void {\n\t\t\n\t\t// only upload a verts buffer if verts has anything inside\n\t\tif ((rawVerts && glVerts != null && glVerts.length > 0) || verts.length > 0) {\n\t\t\tif (!rawVerts) glVerts = new Float32Array (verts);\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertsBuffer);\n\t\t\tif (glVerts.length <= lastVertsSize) {\n\t\t\t\tvar end = glLength * 4 * stride;\n\t\t\t\tif (glLength > 0 && lastVertsSize > end) {\n\t\t\t\t\tvar view = glVerts.subarray(0, end);\n\t\t\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, view);\n\t\t\t\t\tview = null;\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, glVerts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgl.bufferData (gl.ARRAY_BUFFER, glVerts, gl.STREAM_DRAW);\n\t\t\t\tlastVertsSize = glVerts.length;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// only upload a index buffer is there is no length provided and indices has anything inside\n\t\tif (glLength == 0 && ((rawIndices && glIndices != null && glIndices.length > 0) || indices.length > 0)) {\n\t\t\tif(!rawIndices) glIndices = new UInt16Array (indices);\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, glIndices, gl.STREAM_DRAW);\n\t\t}\n\t\t\n\t\tif (line != null) line.upload();\n\t}\n}\n\nenum BucketMode {\n\tNone;\n\tFill;\n\tPatternFill;\n\tLine;\n\tPatternLine;\n\tDrawTriangles;\n\tDrawTiles;\n}\n\n\nclass GLGraphicsData {\n\t\n\tpublic var gl:GLRenderContext;\n\t\n\tpublic var tint:Array<Float> = [1.0, 1.0, 1.0];\n\tpublic var alpha:Float = 1.0;\n\tpublic var dirty:Bool = true;\n\tpublic var mode:RenderMode = RenderMode.DEFAULT;\n\tpublic var lastIndex:Int = 0;\n\t\n\tpublic var data:Array<Float> = [];\n\tpublic var glData:Float32Array;\n\tpublic var dataBuffer:GLBuffer;\n\t\n\tpublic var indices:Array<Int> = [];\n\tpublic var glIndices:UInt16Array;\n\tpublic var indexBuffer:GLBuffer;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tdataBuffer = gl.createBuffer();\n\t\tindexBuffer = gl.createBuffer();\n\t\t\n\t}\n\t\n\t\n\tpublic function reset ():Void {\n\t\t\n\t\tdata = [];\n\t\tindices = [];\n\t\tlastIndex = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function upload ():Void {\n\t\t\n\t\tglData = new Float32Array (cast data);\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, dataBuffer);\n\t\tgl.bufferData (gl.ARRAY_BUFFER, glData, gl.STATIC_DRAW);\n\t\t\n\t\t\n\t\tglIndices = new UInt16Array (cast indices);\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, glIndices, gl.STATIC_DRAW);\n\t\t\n\t\tdirty = false;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass PolyK {\n\t\n\t\n\tpublic static function triangulate (p:Array<Float>):Array<Int> {\n\t\t\n\t\tvar sign = true;\n\n\t\tvar n = p.length >> 1;\n\t\tif (n < 3) return [];\n\t\t\n\t\tvar tgs:Array<Int> = [];\n\t\tvar avl:Array<Int> = [for (i in 0...n) i];\n\t\t\n\t\tvar i = 0;\n\t\tvar al = n;\n\t\tvar earFound = false;\n\t\t\n\t\twhile (al > 3) {\n\t\t\t\n\t\t\tvar i0 = avl[(i + 0) % al];\n\t\t\tvar i1 = avl[(i + 1) % al];\n\t\t\tvar i2 = avl[(i + 2) % al];\n\t\t\t\n\t\t\tvar ax = p[2* i0], ay = p[2 * i0 + 1];\n\t\t\tvar bx = p[2 * i1], by = p[2 * i1 + 1];\n\t\t\tvar cx = p[2 * i2], cy = p[2 * i2 + 1];\n\t\t\t\n\t\t\tearFound = false;\n\t\t\t\n\t\t\tif (PolyK._convex (ax, ay, bx, by, cx, cy, sign)) {\n\t\t\t\t\n\t\t\t\tearFound = true;\n\t\t\t\t\n\t\t\t\tfor (j in 0...al) {\n\t\t\t\t\t\n\t\t\t\t\tvar vi = avl[j];\n\t\t\t\t\tif (vi == i0 || vi == i1 || vi == i2) continue;\n\t\t\t\t\t\n\t\t\t\t\tif (PolyK._PointInTriangle (p[2 * vi], p[2 * vi + 1], ax, ay, bx, by, cx, cy)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tearFound = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (earFound) {\n\t\t\t\t\n\t\t\t\ttgs.push (i0);\n\t\t\t\ttgs.push (i1);\n\t\t\t\ttgs.push (i2);\n\t\t\t\tavl.splice ((i + 1) % al, 1);\n\t\t\t\tal--;\n\t\t\t\ti = 0;\n\t\t\t\t\n\t\t\t} else if (i++ > 3 * al) {\n\t\t\t\t\n\t\t\t\tif (sign) {\n\t\t\t\t\t\n\t\t\t\t\ttgs = [];\n\t\t\t\t\tavl = [for (k in 0...n) k];\n\t\t\t\t\t\n\t\t\t\t\ti = 0;\n\t\t\t\t\tal = n;\n\t\t\t\t\tsign = false;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"Warning: shape too complex to fill\");\n\t\t\t\t\treturn [];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttgs.push (avl[0]);\n\t\ttgs.push (avl[1]);\n\t\ttgs.push (avl[2]);\n\t\treturn tgs;\n\t\t\n\t}\n\t\n\t\n\tpublic static function _PointInTriangle (px:Float, py:Float, ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float) {\n\t\t\n\t\tvar v0x = Std.int(cx-ax);\n\t\tvar v0y = Std.int(cy-ay);\n\t\tvar v1x = Std.int(bx-ax);\n\t\tvar v1y = Std.int(by-ay);\n\t\tvar v2x = Std.int(px-ax);\n\t\tvar v2y = Std.int(py-ay);\n\t\t\n\t\tvar dot00 = (v0x * v0x) + (v0y * v0y);\n\t\tvar dot01 = (v0x * v1x) + (v0y * v1y);\n\t\tvar dot02 = (v0x * v2x) + (v0y * v2y);\n\t\tvar dot11 = (v1x * v1x) + (v1y * v1y);\n\t\tvar dot12 = (v1x * v2x) + (v1y * v2y);\n\t\t\n\t\tvar invDenom = 1 / (dot00 * dot11 - dot01 * dot01);\n\t\tvar u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\tvar v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\t\t\n\t\treturn (u >= 0) && (v >= 0) && (u + v < 1);\n\t\t\n\t}\n\t\n\t\n\tpublic static function _convex (ax:Float, ay:Float, bx:Float, by:Float, cx:Float, cy:Float, sign:Bool) {\n\t\t\n\t\treturn ((ay - by) * (cx - bx) + (bx - ax) * (cy - by) >= 0) == sign;\n\t\t\n\t}\n\t\t\n}\n\n\nenum GraphicType {\n\n\tPolygon;\n\tRectangle(rounded:Bool);\n\tCircle;\n\tEllipse;\n\tDrawTriangles(vertices:Vector<Float>, indices:Vector<Int>, uvtData:Vector<Float>, culling:TriangleCulling, colors:Vector<Int>, blendMode:Int);\n\tDrawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool, flags:Int, count:Int);\n\n}\n\n@:enum abstract RenderMode(Int) {\n\tvar DEFAULT = 0;\n\tvar STENCIL = 1;\n}","package openfl._internal.renderer.opengl.utils;\n\n\nimport lime.graphics.GLRenderContext;\n\n\nclass MaskManager {\n\t\n\t\n\tpublic var count:Int;\n\tpublic var gl:GLRenderContext;\n\tpublic var maskPosition:Int;\n\tpublic var maskStack:Array<Dynamic>;\n\tpublic var reverse:Bool;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tmaskStack = [];\n\t\tmaskPosition = 0;\n\t\t\n\t\tsetContext (gl);\n\t\t\n\t\treverse = false;\n\t\tcount = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tmaskStack = null;\n\t\tgl = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function popMask (maskData:Dynamic, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = this.gl;\n\t\trenderSession.stencilManager.popStencil (maskData, maskData._webGL[GLRenderer.glContextId].data[0], renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function pushMask (maskData:Dynamic, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tif (maskData.dirty) {\n\t\t\t\n\t\t\tGraphicsRenderer.updateGraphics (maskData, gl);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (maskData._webGL[GLRenderer.glContextId].data.length == 0) return;\n\t\trenderSession.stencilManager.pushStencil (maskData, maskData._webGL[GLRenderer.glContextId].data[0], renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function setContext (gl:GLRenderContext):Void {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t}\n\t\n\t\n}\n\n\n/*class MaskManager {\n\t\n\t\n\tprivate var renderSession:RenderSession;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushMask (mask:IBitmapDrawable):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tcontext.save ();\n\t\t\n\t\t//var cacheAlpha = mask.__worldAlpha;\n\t\tvar transform = mask.__worldTransform;\n\t\tif (transform == null) transform = new Matrix ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tmask.__renderMask (renderSession);\n\t\t\n\t\tcontext.clip ();\n\t\t\n\t\t//mask.worldAlpha = cacheAlpha;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\tcontext.save ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.c, transform.b, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tcontext.rect (rect.x, rect.y, rect.width, rect.height);\n\t\tcontext.clip ();\n\t\t\n\t}\n\t\n\t\n\tpublic function popMask ():Void {\n\t\t\n\t\trenderSession.context.restore ();\n\t\t\n\t}\n\t\n\t\n}*/","package openfl._internal.renderer.opengl.utils ;\n\n\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.opengl.shaders.AbstractShader;\nimport openfl._internal.renderer.opengl.shaders.ComplexPrimitiveShader;\nimport openfl._internal.renderer.opengl.shaders.DefaultShader;\nimport openfl._internal.renderer.opengl.shaders.DrawTrianglesShader;\nimport openfl._internal.renderer.opengl.shaders.FastShader;\nimport openfl._internal.renderer.opengl.shaders.FillShader;\nimport openfl._internal.renderer.opengl.shaders.PatternFillShader;\nimport openfl._internal.renderer.opengl.shaders.PrimitiveShader;\nimport openfl._internal.renderer.opengl.shaders.StripShader;\n\n\nclass ShaderManager {\n\t\n\t\n\tpublic var attribState:Array<Bool>;\n\tpublic var complexPrimitiveShader:ComplexPrimitiveShader;\n\tpublic var currentShader:AbstractShader;\n\tpublic var defaultShader:DefaultShader;\n\tpublic var fastShader:FastShader;\n\tpublic var gl:GLRenderContext;\n\tpublic var maxAttibs:Int;\n\tpublic var primitiveShader:PrimitiveShader;\n\t\n\tpublic var fillShader:FillShader;\n\tpublic var patternFillShader:PatternFillShader;\n\tpublic var drawTrianglesShader:DrawTrianglesShader;\n\t\n\tpublic var shaderMap:Array<AbstractShader>;\n\tpublic var stripShader:StripShader;\n\tpublic var tempAttribState:Array<Bool>;\n\t\n\tprivate var _currentId:Int;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tmaxAttibs = 10;\n\t\tattribState = [];\n\t\ttempAttribState = [];\n\t\tshaderMap = [];\n\t\t\n\t\tfor (i in 0...this.maxAttibs) {\n\t\t\t\n\t\t\tattribState[i] = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tsetContext (gl);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tattribState = null;\n\t\ttempAttribState = null;\n\t\tprimitiveShader.destroy ();\n\t\tdefaultShader.destroy ();\n\t\tfastShader.destroy ();\n\t\tstripShader.destroy ();\n\t\t\n\t\tfillShader.destroy();\n\t\tpatternFillShader.destroy();\n\t\tdrawTrianglesShader.destroy();\n\t\t\n\t\tgl = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function setAttribs (attribs:Array<Dynamic>):Void {\n\t\t\n\t\tfor (i in 0...tempAttribState.length) {\n\t\t\t\n\t\t\ttempAttribState[i] = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...attribs.length) {\n\t\t\t\n\t\t\tvar attribId = attribs[i];\n\t\t\ttempAttribState[attribId] = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\tfor (i in 0...attribState.length) {\n\t\t\t\n\t\t\tif (attribState[i] != tempAttribState[i]) {\n\t\t\t\t\n\t\t\t\tattribState[i] = tempAttribState[i];\n\t\t\t\t\n\t\t\t\tif (tempAttribState[i]) {\n\t\t\t\t\t\n\t\t\t\t\tgl.enableVertexAttribArray (i);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.disableVertexAttribArray (i);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setContext (gl:GLRenderContext):Void {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tprimitiveShader = new PrimitiveShader (gl);\n\t\tcomplexPrimitiveShader = new ComplexPrimitiveShader (gl);\n\t\tdefaultShader = new DefaultShader (gl);\n\t\tfastShader = new FastShader (gl);\n\t\tstripShader = new StripShader (gl);\n\t\t\n\t\tfillShader = new FillShader(gl);\n\t\tpatternFillShader = new PatternFillShader(gl);\n\t\tdrawTrianglesShader = new DrawTrianglesShader(gl);\n\t\t\n\t\tsetShader (defaultShader);\n\t\t\n\t}\n\t\n\t\n\tpublic function setShader (shader:AbstractShader):Bool {\n\t\t\n\t\tif (this._currentId == shader._UID) return false;\n\t\t\n\t\tthis._currentId = shader._UID;\n\t\tthis.currentShader = shader;\n\t\t\n\t\tgl.useProgram (shader.program);\n\t\tsetAttribs (shader.attributes);\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl.utils ;\n\n\nimport lime.graphics.opengl.GLBuffer;\nimport lime.graphics.opengl.GLTexture;\nimport lime.graphics.GLRenderContext;\nimport lime.utils.Float32Array;\nimport lime.utils.UInt16Array;\nimport openfl._internal.renderer.opengl.shaders.AbstractShader;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Tilesheet;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.display.DisplayObject;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.BlendMode;\nimport openfl.geom.Rectangle;\n\n\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Tilesheet)\n\n\nclass SpriteBatch {\n\t\n\t\n\tpublic var states:Array<State> = [];\n\tpublic var currentState:State;\n\t\n\tpublic var currentBaseTexture:GLTexture;\n\tpublic var currentBatchSize:Int;\n\tpublic var currentBlendMode:BlendMode;\n\tpublic var dirty:Bool;\n\tpublic var drawing:Bool;\n\tpublic var gl:GLRenderContext;\n\tpublic var indexBuffer:GLBuffer;\n\tpublic var indices:UInt16Array;\n\tpublic var lastIndexCount:Int;\n\tpublic var renderSession:RenderSession;\n\tpublic var shader:AbstractShader;\n\tpublic var size:Int;\n\tpublic var vertexBuffer:GLBuffer;\n\tpublic var vertices:Float32Array;\n\tpublic var vertSize:Int;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tvertSize = 6;\n\t\tsize = Math.floor(Math.pow(2, 16) /  this.vertSize);\n\t\t\n\t\tvar numVerts = size * 4 * vertSize;\n\t\tvar numIndices = size * 6;\n\t\t\n\t\tvertices = new Float32Array (numVerts);\n\t\tindices = new UInt16Array (numIndices);\n\t\t\n\t\tlastIndexCount = 0;\n\t\t\n\t\tvar i = 0;\n\t\tvar j = 0;\n\t\t\n\t\twhile (i < numIndices) {\n\t\t\t\n\t\t\tindices[i + 0] = j + 0;\n\t\t\tindices[i + 1] = j + 1;\n\t\t\tindices[i + 2] = j + 2;\n\t\t\tindices[i + 3] = j + 0;\n\t\t\tindices[i + 4] = j + 2;\n\t\t\tindices[i + 5] = j + 3;\n\t\t\ti += 6;\n\t\t\tj += 4;\n\t\t\t\n\t\t}\n\t\t\n\t\tdrawing = false;\n\t\tcurrentBatchSize = 0;\n\t\tcurrentBaseTexture = null;\n\t\t\n\t\tsetContext (gl);\n\t\t\n\t\tdirty = true;\n\t\t\n\t\tcurrentState = new State();\n\t\t\n\t}\n\t\n\t\n\tpublic function begin (renderSession:RenderSession):Void {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\tshader = renderSession.shaderManager.defaultShader;\n\t\tdrawing = true;\n\t\tstart ();\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tvertices = null;\n\t\tindices = null;\n\t\t\n\t\tgl.deleteBuffer (vertexBuffer);\n\t\tgl.deleteBuffer (indexBuffer);\n\t\t\n\t\tcurrentBaseTexture = null;\n\t\t\n\t\tgl = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function end ():Void {\n\t\t\n\t\tflush ();\n\t\tdrawing = false;\n\t\t\n\t}\n\t\n\t\n\tprivate function flush ():Void {\n\t\t\n\t\tif (currentBatchSize == 0) return;\n\t\t\n\t\tvar gl = this.gl;\n\t\t\n\t\trenderSession.shaderManager.setShader (renderSession.shaderManager.defaultShader);\n\t\t\n\t\tif (dirty) {\n\t\t\t\n\t\t\tdirty = false;\n\t\t\tgl.activeTexture (gl.TEXTURE0);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\t\t\n\t\t\tvar projection = renderSession.projection;\n\t\t\tgl.uniform2f (shader.projectionVector, projection.x, projection.y);\n\t\t\t\n\t\t\tvar stride =  vertSize * 4;\n\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, stride, 0);\n\t\t\tgl.vertexAttribPointer (shader.aTextureCoord, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\t\tgl.vertexAttribPointer (shader.colorAttribute, 2, gl.FLOAT, false, stride, 4 * 4);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currentBatchSize > (size * 0.5)) {\n\t\t\t\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, vertices);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar view = vertices.subarray (0, currentBatchSize * 4 * vertSize);\n\t\t\tgl.bufferSubData (gl.ARRAY_BUFFER, 0, view);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar nextState:State;\n\t\tvar batchSize = 0;\n\t\tvar start = 0;\n\t\t\n\t\tcurrentState.texture = null;\n\t\tcurrentState.textureSmooth = true;\n\t\tcurrentState.blendMode = renderSession.blendModeManager.currentBlendMode;\n\t\t\n\t\tvar j = this.currentBatchSize;\n\t\tfor (i in 0...j) {\n\t\t\t\n\t\t\tnextState = states[i];\n\t\t\t\n\t\t\tif (currentState.texture != nextState.texture || currentState.blendMode != nextState.blendMode) {\n\t\t\t\t\n\t\t\t\trenderBatch (currentState, batchSize, start);\n\t\t\t\t\n\t\t\t\tstart = i;\n\t\t\t\tbatchSize = 0;\n\t\t\t\tcurrentState.texture = nextState.texture;\n\t\t\t\tcurrentState.textureSmooth = nextState.textureSmooth;\n\t\t\t\tcurrentState.blendMode = nextState.blendMode;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\trenderSession.blendModeManager.setBlendMode (currentState.blendMode);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbatchSize++;\n\t\t\t\n\t\t}\n\t\t\n\t\trenderBatch (currentState, batchSize, start);\n\t\tcurrentBatchSize = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function render (sprite:Bitmap):Void {\n\t\t\n\t\tvar bitmapData = sprite.bitmapData;\n\t\tvar texture = bitmapData.getTexture(gl);\n\t\t\n\t\tif (bitmapData == null) return;\n\t\t\n\t\tif (currentBatchSize >= size) {\n\t\t\t\n\t\t\tflush ();\n\t\t\tcurrentState.texture = texture;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar uvs = bitmapData.__uvData;\n\t\tif (uvs == null) return;\n\t\t\n\t\tvar alpha = sprite.__worldAlpha;\n\t\t//var tint = sprite.tint;\n\t\tvar tint = 0xFFFFFF;\n\t\t\n\t\t//var aX = sprite.anchor.x;\n\t\tvar aX = 0;\n\t\t//var aY = sprite.anchor.y;\n\t\tvar aY = 0;\n\t\t\n\t\tvar index = currentBatchSize * 4 * vertSize;\n\t\tfillVertices(index, aX, aY, bitmapData.width, bitmapData.height, tint, alpha, uvs, sprite.__worldTransform);\n\t\t\n\t\tsetState(currentBatchSize, texture, sprite.blendMode);\n\t\t\n\t\tcurrentBatchSize++;\n\t\t\n\t}\n\t\n\tpublic function renderCachedGraphics(object:DisplayObject) {\n\t\tvar cachedTexture = object.__graphics.__cachedTexture;\n\t\t\n\t\tif (cachedTexture == null) return;\n\t\t\n\t\tif (currentBatchSize >= size) {\n\t\t\t\n\t\t\tflush ();\n\t\t\tcurrentBaseTexture = cachedTexture.texture;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar alpha = object.__worldAlpha;\n\t\tvar tint = 0xFFFFFF;\n\t\t\n\t\tvar aX = 0;\n\t\tvar aY = 0;\n\t\t\n\t\tvar uvs = new TextureUvs();\n\t\tuvs.x0 = 0;\t\tuvs.y0 = 1;\n\t\tuvs.x1 = 1;\t\tuvs.y1 = 1;\n\t\tuvs.x2 = 1;\t\tuvs.y2 = 0;\n\t\tuvs.x3 = 0;\t\tuvs.y3 = 0;\n\t\t\n\t\tvar index = currentBatchSize * 4 * vertSize;\n\t\tvar worldTransform = object.__worldTransform.clone();\n\t\tworldTransform.__translateTransformed(new Point(object.__graphics.__bounds.x, object.__graphics.__bounds.y));\n\t\t\n\t\tfillVertices(index, aX, aY, cachedTexture.width, cachedTexture.height, tint, alpha, uvs, worldTransform);\n\n\t\tsetState(currentBatchSize, cachedTexture.texture, object.blendMode);\n\t\t\n\t\tcurrentBatchSize++;\n\t}\n\t\n\tpublic function renderTiles(object:DisplayObject, sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1) {\t\t\n\t\t\n\t\tvar texture = sheet.__bitmap.getTexture(gl);\n\t\tif (texture == null) return;\n\t\t\n\t\tvar useScale = (flags & Tilesheet.TILE_SCALE) > 0;\n\t\tvar useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;\n\t\tvar useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;\n\t\tvar useRGB = (flags & Tilesheet.TILE_RGB) > 0;\n\t\tvar useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;\n\t\tvar useRect = (flags & Tilesheet.TILE_RECT) > 0;\n\t\tvar useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;\n\t\t\n\t\tvar blendMode:BlendMode = switch(flags & 0xF0000) {\n\t\t\tcase Tilesheet.TILE_BLEND_ADD:\t\tADD;\n\t\t\tcase Tilesheet.TILE_BLEND_MULTIPLY:\tMULTIPLY;\n\t\t\tcase Tilesheet.TILE_BLEND_SCREEN:\tSCREEN;\n\t\t\tcase _:\t\t\t\t\t\t\t\tNORMAL;\n\t\t};\n\t\t\n\t\tif (useTransform) { useScale = false; useRotation = false; }\n\t\t\n\t\tvar scaleIndex = 0;\n\t\tvar rotationIndex = 0;\n\t\tvar rgbIndex = 0;\n\t\tvar alphaIndex = 0;\n\t\tvar transformIndex = 0;\n\t\t\n\t\tvar numValues = 3;\n\t\t\n\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\n\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\n\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\n\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\n\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\n\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\n\t\t\n\t\tvar totalCount = tileData.length;\n\t\tif (count >= 0 && totalCount > count) totalCount = count;\n\t\tvar itemCount = Std.int (totalCount / numValues);\n\t\tvar iIndex = 0;\n\t\t\n\t\tvar tileID = -1;\n\t\tvar rect:Rectangle = sheet.__rectTile;\n\t\tvar tileUV:Rectangle = sheet.__rectUV;\n\t\tvar center:Point = sheet.__point;\n\t\tvar x = 0.0, y = 0.0;\n\t\tvar alpha = 1.0, tint = 0xFFFFFF;\n\t\tvar scale = 1.0, rotation = 0.0;\n\t\tvar cosTheta = 1.0, sinTheta = 0.0;\n\t\tvar a = 0.0, b = 0.0, c = 0.0, d = 0.0, tx = 0.0, ty = 0.0;\n\t\tvar ox = 0.0, oy = 0.0;\n\t\tvar matrix = new Matrix();\n\t\tvar oMatrix = object.__worldTransform;\n\t\tvar uvs = new TextureUvs();\n\t\t\n\t\tvar bIndex = 0;\n\t\t\n\t\twhile (iIndex < totalCount) {\n\t\t\t\n\t\t\tif (currentBatchSize >= size) {\n\t\t\t\tflush ();\n\t\t\t\tcurrentBaseTexture = texture;\n\t\t\t}\n\t\t\t\n\t\t\tx = tileData[iIndex + 0];\n\t\t\ty = tileData[iIndex + 1];\n\t\t\t\n\t\t\tif (useRect) {\n\t\t\t\ttileID = -1;\n\n\t\t\t\trect.x = tileData[iIndex + 2];\n\t\t\t\trect.y = tileData[iIndex + 3];\n\t\t\t\trect.width = tileData[iIndex + 4];\n\t\t\t\trect.height = tileData[iIndex + 5];\n\t\t\t\t\n\t\t\t\tif (useOrigin) {\n\t\t\t\t\tcenter.x = tileData[iIndex + 6];\n\t\t\t\t\tcenter.y = tileData[iIndex + 7];\n\t\t\t\t} else {\n\t\t\t\t\tcenter.setTo(0, 0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttileUV.setTo(rect.left / sheet.__bitmap.width, rect.top / sheet.__bitmap.height, rect.right / sheet.__bitmap.width, rect.bottom / sheet.__bitmap.height);\n\t\t\t} else {\n\t\t\t\ttileID = Std.int(#if (neko || js) tileData[iIndex + 2] == null ? 0 : #end tileData[iIndex + 2]);\n\t\t\t\trect = sheet.getTileRect(tileID);\n\t\t\t\tcenter = sheet.getTileCenter(tileID);\n\t\t\t\ttileUV = sheet.getTileUVs(tileID);\n\t\t\t}\n\t\t\t\n\t\t\tif (rect != null && rect.width > 0 && rect.height > 0 && center != null) {\n\t\t\t\t\n\t\t\t\talpha = 1;\n\t\t\t\ttint = 0xFFFFFF;\n\t\t\t\ta = 1; b = 0; c = 0; d = 1; tx = 0; ty = 0;\n\t\t\t\tscale = 1.0;\n\t\t\t\trotation = 0.0;\n\t\t\t\tcosTheta = 1.0;\n\t\t\t\tsinTheta = 0.0;\n\t\t\t\tmatrix.identity();\n\t\t\t\t\n\t\t\t\tif (useAlpha) {\n\t\t\t\t\talpha = tileData[iIndex + alphaIndex];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useRGB) {\n\t\t\t\t\ttint = Std.int(tileData[iIndex + rgbIndex] * 255) << 16 | Std.int(tileData[iIndex + rgbIndex + 1] * 255) << 8 | Std.int(tileData[iIndex + rgbIndex + 2] * 255);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useScale) {\n\t\t\t\t\tscale = tileData[iIndex + scaleIndex];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useRotation) {\n\t\t\t\t\trotation = tileData[iIndex + rotationIndex];\n\t\t\t\t\tcosTheta = Math.cos(rotation);\n\t\t\t\t\tsinTheta = Math.sin(rotation);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useTransform) {\n\t\t\t\t\ta = tileData[iIndex + transformIndex + 0];\n\t\t\t\t\tb = tileData[iIndex + transformIndex + 1];\n\t\t\t\t\tc = tileData[iIndex + transformIndex + 2];\n\t\t\t\t\td = tileData[iIndex + transformIndex + 3];\n\t\t\t\t} else {\n\t\t\t\t\ta = scale * cosTheta;\n\t\t\t\t\tb = scale * sinTheta;\n\t\t\t\t\tc = -b;\n\t\t\t\t\td = a;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tox = center.x * a + center.y * c;\n\t\t\t\toy = center.x * b + center.y * d;\n\t\t\t\t\n\t\t\t\ttx = x - ox;\n\t\t\t\tty = y - oy;\n\t\t\t\t\n\t\t\t\tmatrix.a = a * oMatrix.a + b * oMatrix.c;\n\t\t\t\tmatrix.b = a * oMatrix.b + b * oMatrix.d;\n\t\t\t\tmatrix.c = c * oMatrix.a + d * oMatrix.c;\n\t\t\t\tmatrix.d = c * oMatrix.b + d * oMatrix.d;\n\t\t\t\tmatrix.tx = tx * oMatrix.a + ty * oMatrix.c/* + oMatrix.tx*/;\n\t\t\t\tmatrix.ty = tx * oMatrix.b + ty * oMatrix.d/* + oMatrix.ty*/;\n\t\t\t\t\n\t\t\t\tuvs.x0 = tileUV.x;  uvs.y0 = tileUV.y;\n\t\t\t\tuvs.x1 = tileUV.width; uvs.y1 = tileUV.y;\n\t\t\t\tuvs.x2 = tileUV.width; uvs.y2 = tileUV.height;\n\t\t\t\tuvs.x3 = tileUV.x;  uvs.y3 = tileUV.height;\n\t\t\t\t\n\t\t\t\tbIndex = currentBatchSize * 4 * vertSize;\n\t\t\t\t\n\t\t\t\tfillVertices(bIndex, 0, 0, rect.width, rect.height, tint, alpha, uvs, matrix);\n\t\t\t\t\n\t\t\t\tsetState(currentBatchSize, texture, smooth, blendMode);\n\t\t\t\t\n\t\t\t\tcurrentBatchSize++;\n\t\t\t}\n\t\t\t\n\t\t\tiIndex += numValues;\n\t\t\t\n\t\t}\n\t}\n\t\n\tprivate inline function fillVertices(index:Int,\n\t\t\t\t\t\t\t\t\t\taX:Float, aY:Float,\n\t\t\t\t\t\t\t\t\t\twidth:Float, height:Float,\n\t\t\t\t\t\t\t\t\t\ttint:Int, alpha:Float,\n\t\t\t\t\t\t\t\t\t\tuvs:TextureUvs,\n\t\t\t\t\t\t\t\t\t\tmatrix:Matrix) {\n\n\t\tvar w0, w1, h0, h1;\n\t\tw0 = width * (1 - aX);\n\t\tw1 = width * -aX;\n\t\th0 = height * (1 - aY);\n\t\th1 = height * -aY;\n\t\t\n\t\tvar a = matrix.a;\n\t\tvar b = matrix.b;\n\t\tvar c = matrix.c;\n\t\tvar d = matrix.d;\n\t\tvar tx = matrix.tx;\n\t\tvar ty = matrix.ty;\n\t\t\n\t\tvertices[index++] = (a * w1 + c * h1 + tx);\n\t\tvertices[index++] = (d * h1 + b * w1 + ty);\n\t\tvertices[index++] = uvs.x0;\n\t\tvertices[index++] = uvs.y0;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = (a * w0 + c * h1 + tx);\n\t\tvertices[index++] = (d * h1 + b * w0 + ty);\n\t\tvertices[index++] = uvs.x1;\n\t\tvertices[index++] = uvs.y1;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = (a * w0 + c * h0 + tx);\n\t\tvertices[index++] = (d * h0 + b * w0 + ty);\n\t\tvertices[index++] = uvs.x2;\n\t\tvertices[index++] = uvs.y2;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = (a * w1 + c * h0 + tx);\n\t\tvertices[index++] = (d * h0 + b * w1 + ty);\n\t\tvertices[index++] = uvs.x3;\n\t\tvertices[index++] = uvs.y3;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t}\n\t\n\tprivate function setState(index:Int, texture:GLTexture, smooth:Bool = true, blendMode:BlendMode) {\n\t\tvar state:State = states[currentBatchSize];\n\t\tif (state == null) {\n\t\t\tstate = states[currentBatchSize] = new State();\n\t\t}\n\t\tstate.texture = texture;\n\t\tstate.textureSmooth = smooth;\n\t\tstate.blendMode = blendMode;\n\t}\n\t\n\t\t\n\tprivate function renderBatch (state:State, size:Int, startIndex:Int):Void {\n\t\t\n\t\tif (size == 0)return;\n\t\t\n\t\t//var gl = this.gl;\n\t\t\n\t\t//var tex:GLTexture = /*texture._glTextures[GLRenderer.glContextId];*/ texture.getTexture (gl);\n\t\t//if (tex == null) tex = Texture.createWebGLTexture (texture, gl);\n\t\tgl.bindTexture (gl.TEXTURE_2D, state.texture);\n\t\t\n\t\tif (state.textureSmooth) {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t} else {\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\t\t\t\t\t\t\n\t\t}\n\t\t/*if (texture._dirty[GLRenderer.glContextId]) {\n\t\t\t\n\t\t\tTexture.updateWebGLTexture (currentBaseTexture, gl);\n\t\t\t\n\t\t}*/\n\t\t\n\t\tgl.drawElements (gl.TRIANGLES, size * 6, gl.UNSIGNED_SHORT, startIndex * 6 * 2);\n\t\t\n\t\trenderSession.drawCount++;\n\t\t\n\t}\n\t\n\t\n\tpublic function renderTilingSprite (tilingSprite:Dynamic):Void {\n\t\t/*\n\t\tvar texture = tilingSprite.tilingTexture;\n\t\t\n\t\tif (currentBatchSize >= size) {\n\t\t\t\n\t\t\tflush ();\n\t\t\tcurrentBaseTexture = texture;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (tilingSprite._uvs == null) tilingSprite._uvs = new TextureUvs ();\n\t\tvar uvs = tilingSprite._uvs;\n\t\t\n\t\ttilingSprite.tilePosition.x %= texture.width * tilingSprite.tileScaleOffset.x;\n\t\ttilingSprite.tilePosition.y %= texture.height * tilingSprite.tileScaleOffset.y;\n\t\t\n\t\tvar offsetX =  tilingSprite.tilePosition.x / (texture.width * tilingSprite.tileScaleOffset.x);\n\t\tvar offsetY =  tilingSprite.tilePosition.y / (texture.height * tilingSprite.tileScaleOffset.y);\n\t\t\n\t\tvar scaleX =  (tilingSprite.width / texture.width)  / (tilingSprite.tileScale.x * tilingSprite.tileScaleOffset.x);\n\t\tvar scaleY =  (tilingSprite.height / texture.height) / (tilingSprite.tileScale.y * tilingSprite.tileScaleOffset.y);\n\t\t\n\t\tuvs.x0 = 0 - offsetX;\n\t\tuvs.y0 = 0 - offsetY;\n\t\t\n\t\tuvs.x1 = (1 * scaleX) - offsetX;\n\t\tuvs.y1 = 0 - offsetY;\n\t\t\n\t\tuvs.x2 = (1 * scaleX) - offsetX;\n\t\tuvs.y2 = (1 * scaleY) - offsetY;\n\t\t\n\t\tuvs.x3 = 0 - offsetX;\n\t\tuvs.y3 = (1 * scaleY) - offsetY;\n\t\t\n\t\tvar alpha = tilingSprite.worldAlpha;\n\t\tvar tint = tilingSprite.tint;\n\t\t\n\t\tvar vertices = this.vertices;\n\t\t\n\t\tvar width = tilingSprite.width;\n\t\tvar height = tilingSprite.height;\n\t\t\n\t\tvar aX = tilingSprite.anchor.x;\n\t\tvar aY = tilingSprite.anchor.y;\n\t\tvar w0 = width * (1 - aX);\n\t\tvar w1 = width * -aX;\n\t\t\n\t\tvar h0 = height * (1 - aY);\n\t\tvar h1 = height * -aY;\n\t\t\n\t\tvar index = this.currentBatchSize * 4 * this.vertSize;\n\t\t\n\t\tvar worldTransform = tilingSprite.worldTransform;\n\t\t\n\t\tvar a = worldTransform.a;//[0];\n\t\tvar b = worldTransform.b;//[3];\n\t\tvar c = worldTransform.c;//[1];\n\t\tvar d = worldTransform.d;//[4];\n\t\tvar tx = worldTransform.tx;//[2];\n\t\tvar ty = worldTransform.ty;///[5];\n\t\t\n\t\tvertices[index++] = a * w1 + c * h1 + tx;\n\t\tvertices[index++] = d * h1 + b * w1 + ty;\n\t\tvertices[index++] = uvs.x0;\n\t\tvertices[index++] = uvs.y0;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = (a * w0 + c * h1 + tx);\n\t\tvertices[index++] = d * h1 + b * w0 + ty;\n\t\tvertices[index++] = uvs.x1;\n\t\tvertices[index++] = uvs.y1;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = a * w0 + c * h0 + tx;\n\t\tvertices[index++] = d * h0 + b * w0 + ty;\n\t\tvertices[index++] = uvs.x2;\n\t\tvertices[index++] = uvs.y2;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\tvertices[index++] = a * w1 + c * h0 + tx;\n\t\tvertices[index++] = d * h0 + b * w1 + ty;\n\t\tvertices[index++] = uvs.x3;\n\t\tvertices[index++] = uvs.y3;\n\t\tvertices[index++] = alpha;\n\t\tvertices[index++] = tint;\n\t\t\n\t\ttextures[currentBatchSize] = texture;\n\t\tblendModes[currentBatchSize] = tilingSprite.blendMode;\n\t\tcurrentBatchSize++;\n\t\t*/\n\t}\n\t\n\t\n\tpublic function setContext (gl:GLRenderContext):Void {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tvertexBuffer = gl.createBuffer ();\n\t\tindexBuffer = gl.createBuffer ();\n\t\t\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer);\n\t\tgl.bufferData (gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n\t\t\n\t\tcurrentBlendMode = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function start ():Void {\n\t\t\n\t\tdirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tflush ();\n\t\t\n\t}\n\t\n\t\n}\n\nprivate class State {\n\tpublic var texture:GLTexture;\n\tpublic var textureSmooth:Bool = true;\n\tpublic var blendMode:BlendMode;\n\t// TODO\n\t//public var shader:Dynamic;\n\t\n\tpublic function new() {}\n}","package openfl._internal.renderer.opengl.utils;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.opengl.shaders.AbstractShader;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.geom.Matrix;\nimport openfl.display.Graphics;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Point;\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n\nclass StencilManager {\n\t\n\t\n\tpublic var count:Int;\n\tpublic var gl:GLRenderContext;\n\tpublic var maskStack:Array<Dynamic>;\n\tpublic var reverse:Bool;\n\tpublic var stencilStack:Array<GLGraphicsData>;\n\t\n\tpublic var bucketStack:Array<GLBucket>;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tstencilStack = [];\n\t\tbucketStack = [];\n\t\tsetContext (gl);\n\t\treverse = true;\n\t\tcount = 0;\n\t\t\n\t}\n\t\n\tpublic inline function prepareGraphics(bucketData:GLBucketData, renderSession:RenderSession, projection:Point, translationMatrix:Float32Array):Void {\n\t\tvar offset = renderSession.offset;\n\t\tvar shader = renderSession.shaderManager.fillShader;\n\t\t\n\t\trenderSession.shaderManager.setShader (shader);\n\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, translationMatrix);\n\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\n\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\n\t\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, bucketData.vertsBuffer);\n\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, bucketData.indexBuffer);\n\t}\n\t\n\tpublic function pushBucket (bucket:GLBucket, renderSession:RenderSession, projection:Point, translationMatrix:Float32Array):Void {\n\t\t\n\t\tif (bucketStack.length == 0) {\n\t\t\tgl.enable(gl.STENCIL_TEST);\n\t\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\n\t\t\tgl.stencilMask(0xFF);\n\t\t}\n\t\t\n\t\tbucketStack.push(bucket);\n\t\t\n\t\tgl.colorMask(false, false, false, false);\n\t\tgl.stencilFunc(gl.NEVER, 0x01, 0xFF);\n\t\tgl.stencilOp(gl.INVERT, gl.KEEP, gl.KEEP);\n\t\t\n\t\t\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\n\t\t\n\t\tfor (bucketData in bucket.data) {\n\t\t\tif (bucketData.destroyed) continue;\n\t\t\tprepareGraphics(bucketData, renderSession, projection, translationMatrix);\n\t\t\tgl.drawElements (bucketData.drawMode, bucketData.glIndices.length, gl.UNSIGNED_SHORT, 0);\n\t\t}\n\t\t\n\t\tgl.colorMask(true, true, true, true);\n\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\tgl.stencilFunc(gl.EQUAL, 0xFF, 0xFF);\n\t}\n\t\n\tpublic function popBucket (object:DisplayObject, bucket:GLBucket, renderSession:RenderSession):Void {\n\t\tbucketStack.pop();\n\t\tif (bucketStack.length == 0) {\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t}\n\t}\n\t\n\tpublic function bindGraphics (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\n\t\t\n\t\tvar graphics = object.__graphics;\n\t\t\n\t\tvar projection = renderSession.projection;\n\t\tvar offset = renderSession.offset;\n\n\t\tif (glData.mode == RenderMode.STENCIL) {\n\t\t\t\n\t\t\tvar shader = renderSession.shaderManager.complexPrimitiveShader;\n\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\n\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, object.__worldTransform.toArray (true));\n\t\t\t\n\t\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\n\t\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\n\t\t\t\n\t\t\t// TODO tintColor\n\t\t\tgl.uniform3fv (shader.tintColor, new Float32Array (GraphicsRenderer.hex2rgb (0xFFFFFF)));\n\t\t\tgl.uniform3fv (shader.color, new Float32Array (glData.tint));\n\t\t\t\n\t\t\tgl.uniform1f (shader.alpha, object.__worldAlpha * glData.alpha);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, glData.dataBuffer);\n\t\t\t\n\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 2, 0);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, glData.indexBuffer);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar shader = renderSession.shaderManager.primitiveShader;\n\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\n\t\t\tgl.uniformMatrix3fv (shader.translationMatrix, false, object.__worldTransform.toArray (true));\n\t\t\t\n\t\t\tgl.uniform2f (shader.projectionVector, projection.x, -projection.y);\n\t\t\tgl.uniform2f (shader.offsetVector, -offset.x, -offset.y);\n\t\t\t\n\t\t\t// TODO tintColor\n\t\t\tgl.uniform3fv (shader.tintColor, new Float32Array (GraphicsRenderer.hex2rgb (0xFFFFFF)));\n\t\t\t\n\t\t\tgl.uniform1f (shader.alpha, object.__worldAlpha);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, glData.dataBuffer);\n\t\t\t\n\t\t\tgl.vertexAttribPointer (shader.aVertexPosition, 2, gl.FLOAT, false, 4 * 6, 0);\n\t\t\tgl.vertexAttribPointer (shader.colorAttribute, 4, gl.FLOAT, false,4 * 6, 2 * 4);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, glData.indexBuffer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tstencilStack = null;\n\t\tbucketStack = null;\n\t\tgl = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function popStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\n\t\t\n\t\tstencilStack.pop ();\n\t\t\n\t\tcount--;\n\t\t\n\t\tif (stencilStack.length == 0) {\n\t\t\t\t\n\t\t\tgl.disable (gl.STENCIL_TEST);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar level = count;\n\t\t\tbindGraphics (object, glData, renderSession);\n\t\t\t\n\t\t\tgl.colorMask (false, false, false, false);\n\t\t\t\n\t\t\tif (glData.mode == RenderMode.STENCIL) {\n\t\t\t\t\n\t\t\t\treverse = !reverse;\n\t\t\t\t\n\t\t\t\tif (reverse) {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl.drawElements (gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (glData.indices.length - 4) * 2);\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.ALWAYS, 0, 0xFF);\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INVERT);\n\t\t\t\t\n\t\t\t\tgl.drawElements (gl.TRIANGLE_FAN, glData.indices.length - 4, gl.UNSIGNED_SHORT, 0);\n\t\t\t\t\n\t\t\t\tif (!reverse) {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level), 0xFF);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (!reverse) {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\n\t\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, glData.indices.length, gl.UNSIGNED_SHORT, 0);\n\t\t\t\t\n\t\t\t\tif (!reverse) {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level), 0xFF);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.colorMask (true, true, true, true);\n\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function pushStencil (object:DisplayObject, glData:GLGraphicsData, renderSession:RenderSession):Void {\n\t\t\n\t\tbindGraphics (object, glData, renderSession);\n\n\t\tif (stencilStack.length == 0) {\n\t\t\t\n\t\t\tgl.enable (gl.STENCIL_TEST);\n\t\t\tgl.clear (gl.STENCIL_BUFFER_BIT);\n\t\t\treverse = true;\n\t\t\tcount = 0;\n\t\t\t\n\t\t}\n\n\t\tstencilStack.push (glData);\n\t\t\n\t\tvar level = count;\n\t\t\n\t\t//gl.colorMask (true, true, true, true);\n\t\tgl.colorMask (false, false, false, false);\n\t\t\n\t\tgl.stencilFunc (gl.ALWAYS, 0, 0xFF);\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INVERT);\n\t\t\n\t\tif (glData.mode == RenderMode.STENCIL) {\n\t\t\t\n\t\t\tgl.drawElements (gl.TRIANGLE_FAN, glData.indices.length - 4, gl.UNSIGNED_SHORT, 0);\n\t\t\t\n\t\t\tif (reverse) {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - level, 0xFF);\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.drawElements (gl.TRIANGLE_FAN, 4, gl.UNSIGNED_SHORT, (glData.indices.length - 4) * 2);\n\t\t\t\n\t\t\tif (reverse) {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treverse = !reverse;\n\t\t\t\n\t\t} else {\n\t\t\t\t\n\t\t\tif (!reverse) {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - level, 0xFF);\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level, 0xFF);\n\t\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.drawElements (gl.TRIANGLE_STRIP, glData.indices.length, gl.UNSIGNED_SHORT, 0);\n\t\t\t\n\t\t\tif (!reverse) {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, 0xFF - (level + 1), 0xFF);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl.stencilFunc (gl.EQUAL, level + 1, 0xFF);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.colorMask (true, true, true, true);\n\t\t//gl.colorMask (false, false, false, false);\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\n\t\tcount++;\n\t\t\n\t}\n\t\n\t\n\tpublic function setContext (gl:GLRenderContext):Void {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.app.Application in LimeApplication;\nimport lime.app.Config in LimeConfig;\nimport lime.graphics.RenderContext;\nimport lime.ui.KeyCode;\nimport lime.ui.Mouse;\nimport openfl.display.InteractiveObject;\nimport openfl.display.Stage;\nimport openfl.display.StageAlign;\nimport openfl.display.StageScaleMode;\nimport openfl.events.KeyboardEvent;\nimport openfl.events.MouseEvent;\nimport openfl.events.TouchEvent;\nimport openfl.geom.Point;\nimport openfl.ui.Keyboard;\nimport openfl.Lib;\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Stage)\n\n\nclass Application extends LimeApplication {\n\t\n\t\n\tprivate var stage:Stage;\n\tprivate var __lastClickTime:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tLib.application = this;\n\t\t\n\t}\n\t\n\t\n\t#if !flash\n\t\n\t\n\t@:noCompletion private function convertKeyCode (keyCode:KeyCode):Int {\n\t\t\n\t\treturn switch (keyCode) {\n\t\t\t\n\t\t\tcase BACKSPACE: Keyboard.BACKSPACE;\n\t\t\tcase TAB: Keyboard.TAB;\n\t\t\tcase RETURN: Keyboard.ENTER;\n\t\t\tcase ESCAPE: Keyboard.ESCAPE;\n\t\t\tcase SPACE: Keyboard.SPACE;\n\t\t\t//case EXCLAMATION: 0x21;\n\t\t\t//case QUOTE: 0x22;\n\t\t\t//case HASH: 0x23;\n\t\t\t//case DOLLAR: 0x24;\n\t\t\t//case PERCENT: 0x25;\n\t\t\t//case AMPERSAND: 0x26;\n\t\t\tcase SINGLE_QUOTE: Keyboard.QUOTE;\n\t\t\t//case LEFT_PARENTHESIS: 0x28;\n\t\t\t//case RIGHT_PARENTHESIS: 0x29;\n\t\t\t//case ASTERISK: 0x2A;\n\t\t\t//case PLUS: 0x2B;\n\t\t\tcase COMMA: Keyboard.COMMA;\n\t\t\tcase MINUS: Keyboard.MINUS;\n\t\t\tcase PERIOD: Keyboard.PERIOD;\n\t\t\tcase SLASH: Keyboard.SLASH;\n\t\t\tcase NUMBER_0: Keyboard.NUMBER_0;\n\t\t\tcase NUMBER_1: Keyboard.NUMBER_1;\n\t\t\tcase NUMBER_2: Keyboard.NUMBER_2;\n\t\t\tcase NUMBER_3: Keyboard.NUMBER_3;\n\t\t\tcase NUMBER_4: Keyboard.NUMBER_4;\n\t\t\tcase NUMBER_5: Keyboard.NUMBER_5;\n\t\t\tcase NUMBER_6: Keyboard.NUMBER_6;\n\t\t\tcase NUMBER_7: Keyboard.NUMBER_7;\n\t\t\tcase NUMBER_8: Keyboard.NUMBER_8;\n\t\t\tcase NUMBER_9: Keyboard.NUMBER_9;\n\t\t\t//case COLON: 0x3A;\n\t\t\tcase SEMICOLON: Keyboard.SEMICOLON;\n\t\t\t//case LESS_THAN: 0x3C;\n\t\t\tcase EQUALS: Keyboard.EQUAL;\n\t\t\t//case GREATER_THAN: 0x3E;\n\t\t\t//case QUESTION: 0x3F;\n\t\t\t//case AT: 0x40;\n\t\t\tcase LEFT_BRACKET: Keyboard.LEFTBRACKET;\n\t\t\tcase BACKSLASH: Keyboard.BACKSLASH;\n\t\t\tcase RIGHT_BRACKET: Keyboard.RIGHTBRACKET;\n\t\t\t//case CARET: 0x5E;\n\t\t\t//case UNDERSCORE: 0x5F;\n\t\t\tcase GRAVE: Keyboard.BACKQUOTE;\n\t\t\tcase A: Keyboard.A;\n\t\t\tcase B: Keyboard.B;\n\t\t\tcase C: Keyboard.C;\n\t\t\tcase D: Keyboard.D;\n\t\t\tcase E: Keyboard.E;\n\t\t\tcase F: Keyboard.F;\n\t\t\tcase G: Keyboard.G;\n\t\t\tcase H: Keyboard.H;\n\t\t\tcase I: Keyboard.I;\n\t\t\tcase J: Keyboard.J;\n\t\t\tcase K: Keyboard.K;\n\t\t\tcase L: Keyboard.L;\n\t\t\tcase M: Keyboard.M;\n\t\t\tcase N: Keyboard.N;\n\t\t\tcase O: Keyboard.O;\n\t\t\tcase P: Keyboard.P;\n\t\t\tcase Q: Keyboard.Q;\n\t\t\tcase R: Keyboard.R;\n\t\t\tcase S: Keyboard.S;\n\t\t\tcase T: Keyboard.T;\n\t\t\tcase U: Keyboard.U;\n\t\t\tcase V: Keyboard.V;\n\t\t\tcase W: Keyboard.W;\n\t\t\tcase X: Keyboard.X;\n\t\t\tcase Y: Keyboard.Y;\n\t\t\tcase Z: Keyboard.Z;\n\t\t\tcase DELETE: Keyboard.DELETE;\n\t\t\tcase CAPS_LOCK: Keyboard.CAPS_LOCK;\n\t\t\tcase F1: Keyboard.F1;\n\t\t\tcase F2: Keyboard.F2;\n\t\t\tcase F3: Keyboard.F3;\n\t\t\tcase F4: Keyboard.F4;\n\t\t\tcase F5: Keyboard.F5;\n\t\t\tcase F6: Keyboard.F6;\n\t\t\tcase F7: Keyboard.F7;\n\t\t\tcase F8: Keyboard.F8;\n\t\t\tcase F9: Keyboard.F9;\n\t\t\tcase F10: Keyboard.F10;\n\t\t\tcase F11: Keyboard.F11;\n\t\t\tcase F12: Keyboard.F12;\n\t\t\t//case PRINT_SCREEN: 0x40000046;\n\t\t\t//case SCROLL_LOCK: 0x40000047;\n\t\t\t//case PAUSE: 0x40000048;\n\t\t\tcase INSERT: Keyboard.INSERT;\n\t\t\tcase HOME: Keyboard.HOME;\n\t\t\tcase PAGE_UP: Keyboard.PAGE_UP;\n\t\t\tcase END: Keyboard.END;\n\t\t\tcase PAGE_DOWN: Keyboard.PAGE_DOWN;\n\t\t\tcase RIGHT: Keyboard.RIGHT;\n\t\t\tcase LEFT: Keyboard.LEFT;\n\t\t\tcase DOWN: Keyboard.DOWN;\n\t\t\tcase UP: Keyboard.UP;\n\t\t\t//case NUM_LOCK_CLEAR: 0x40000053;\n\t\t\tcase NUMPAD_DIVIDE: Keyboard.NUMPAD_DIVIDE;\n\t\t\tcase NUMPAD_MULTIPLY: Keyboard.NUMPAD_MULTIPLY;\n\t\t\tcase NUMPAD_MINUS: Keyboard.NUMPAD_SUBTRACT;\n\t\t\tcase NUMPAD_PLUS: Keyboard.NUMPAD_ADD;\n\t\t\tcase NUMPAD_ENTER: Keyboard.NUMPAD_ENTER;\n\t\t\tcase NUMPAD_1: Keyboard.NUMPAD_1;\n\t\t\tcase NUMPAD_2: Keyboard.NUMPAD_2;\n\t\t\tcase NUMPAD_3: Keyboard.NUMPAD_3;\n\t\t\tcase NUMPAD_4: Keyboard.NUMPAD_4;\n\t\t\tcase NUMPAD_5: Keyboard.NUMPAD_5;\n\t\t\tcase NUMPAD_6: Keyboard.NUMPAD_6;\n\t\t\tcase NUMPAD_7: Keyboard.NUMPAD_7;\n\t\t\tcase NUMPAD_8: Keyboard.NUMPAD_8;\n\t\t\tcase NUMPAD_9: Keyboard.NUMPAD_9;\n\t\t\tcase NUMPAD_0: Keyboard.NUMPAD_0;\n\t\t\tcase NUMPAD_PERIOD: Keyboard.NUMPAD_DECIMAL;\n\t\t\t//case APPLICATION: 0x40000065;\n\t\t\t//case POWER: 0x40000066;\n\t\t\t//case NUMPAD_EQUALS: 0x40000067;\n\t\t\tcase F13: Keyboard.F13;\n\t\t\tcase F14: Keyboard.F14;\n\t\t\tcase F15: Keyboard.F15;\n\t\t\t//case F16: 0x4000006B;\n\t\t\t//case F17: 0x4000006C;\n\t\t\t//case F18: 0x4000006D;\n\t\t\t//case F19: 0x4000006E;\n\t\t\t//case F20: 0x4000006F;\n\t\t\t//case F21: 0x40000070;\n\t\t\t//case F22: 0x40000071;\n\t\t\t//case F23: 0x40000072;\n\t\t\t//case F24: 0x40000073;\n\t\t\t//case EXECUTE: 0x40000074;\n\t\t\t//case HELP: 0x40000075;\n\t\t\t//case MENU: 0x40000076;\n\t\t\t//case SELECT: 0x40000077;\n\t\t\t//case STOP: 0x40000078;\n\t\t\t//case AGAIN: 0x40000079;\n\t\t\t//case UNDO: 0x4000007A;\n\t\t\t//case CUT: 0x4000007B;\n\t\t\t//case COPY: 0x4000007C;\n\t\t\t//case PASTE: 0x4000007D;\n\t\t\t//case FIND: 0x4000007E;\n\t\t\t//case MUTE: 0x4000007F;\n\t\t\t//case VOLUME_UP: 0x40000080;\n\t\t\t//case VOLUME_DOWN: 0x40000081;\n\t\t\t//case NUMPAD_COMMA: 0x40000085;\n\t\t\t////case NUMPAD_EQUALS_AS400: 0x40000086;\n\t\t\t//case ALT_ERASE: 0x40000099;\n\t\t\t//case SYSTEM_REQUEST: 0x4000009A;\n\t\t\t//case CANCEL: 0x4000009B;\n\t\t\t//case CLEAR: 0x4000009C;\n\t\t\t//case PRIOR: 0x4000009D;\n\t\t\t//case RETURN2: 0x4000009E;\n\t\t\t//case SEPARATOR: 0x4000009F;\n\t\t\t//case OUT: 0x400000A0;\n\t\t\t//case OPER: 0x400000A1;\n\t\t\t//case CLEAR_AGAIN: 0x400000A2;\n\t\t\t//case CRSEL: 0x400000A3;\n\t\t\t//case EXSEL: 0x400000A4;\n\t\t\t//case NUMPAD_00: 0x400000B0;\n\t\t\t//case NUMPAD_000: 0x400000B1;\n\t\t\t//case THOUSAND_SEPARATOR: 0x400000B2;\n\t\t\t//case DECIMAL_SEPARATOR: 0x400000B3;\n\t\t\t//case CURRENCY_UNIT: 0x400000B4;\n\t\t\t//case CURRENCY_SUBUNIT: 0x400000B5;\n\t\t\t//case NUMPAD_LEFT_PARENTHESIS: 0x400000B6;\n\t\t\t//case NUMPAD_RIGHT_PARENTHESIS: 0x400000B7;\n\t\t\t//case NUMPAD_LEFT_BRACE: 0x400000B8;\n\t\t\t//case NUMPAD_RIGHT_BRACE: 0x400000B9;\n\t\t\t//case NUMPAD_TAB: 0x400000BA;\n\t\t\t//case NUMPAD_BACKSPACE: 0x400000BB;\n\t\t\t//case NUMPAD_A: 0x400000BC;\n\t\t\t//case NUMPAD_B: 0x400000BD;\n\t\t\t//case NUMPAD_C: 0x400000BE;\n\t\t\t//case NUMPAD_D: 0x400000BF;\n\t\t\t//case NUMPAD_E: 0x400000C0;\n\t\t\t//case NUMPAD_F: 0x400000C1;\n\t\t\t//case NUMPAD_XOR: 0x400000C2;\n\t\t\t//case NUMPAD_POWER: 0x400000C3;\n\t\t\t//case NUMPAD_PERCENT: 0x400000C4;\n\t\t\t//case NUMPAD_LESS_THAN: 0x400000C5;\n\t\t\t//case NUMPAD_GREATER_THAN: 0x400000C6;\n\t\t\t//case NUMPAD_AMPERSAND: 0x400000C7;\n\t\t\t//case NUMPAD_DOUBLE_AMPERSAND: 0x400000C8;\n\t\t\t//case NUMPAD_VERTICAL_BAR: 0x400000C9;\n\t\t\t//case NUMPAD_DOUBLE_VERTICAL_BAR: 0x400000CA;\n\t\t\t//case NUMPAD_COLON: 0x400000CB;\n\t\t\t//case NUMPAD_HASH: 0x400000CC;\n\t\t\t//case NUMPAD_SPACE: 0x400000CD;\n\t\t\t//case NUMPAD_AT: 0x400000CE;\n\t\t\t//case NUMPAD_EXCLAMATION: 0x400000CF;\n\t\t\t//case NUMPAD_MEM_STORE: 0x400000D0;\n\t\t\t//case NUMPAD_MEM_RECALL: 0x400000D1;\n\t\t\t//case NUMPAD_MEM_CLEAR: 0x400000D2;\n\t\t\t//case NUMPAD_MEM_ADD: 0x400000D3;\n\t\t\t//case NUMPAD_MEM_SUBTRACT: 0x400000D4;\n\t\t\t//case NUMPAD_MEM_MULTIPLY: 0x400000D5;\n\t\t\t//case NUMPAD_MEM_DIVIDE: 0x400000D6;\n\t\t\t//case NUMPAD_PLUS_MINUS: 0x400000D7;\n\t\t\t//case NUMPAD_CLEAR: 0x400000D8;\n\t\t\t//case NUMPAD_CLEAR_ENTRY: 0x400000D9;\n\t\t\t//case NUMPAD_BINARY: 0x400000DA;\n\t\t\t//case NUMPAD_OCTAL: 0x400000DB;\n\t\t\t//case NUMPAD_DECIMAL: 0x400000DC;\n\t\t\t//case NUMPAD_HEXADECIMAL: 0x400000DD;\n\t\t\tcase LEFT_CTRL: Keyboard.CONTROL;\n\t\t\tcase LEFT_SHIFT: Keyboard.SHIFT;\n\t\t\tcase LEFT_ALT: Keyboard.ALTERNATE;\n\t\t\t//case LEFT_META: 0x400000E3;\n\t\t\tcase RIGHT_CTRL: Keyboard.CONTROL;\n\t\t\tcase RIGHT_SHIFT: Keyboard.SHIFT;\n\t\t\tcase RIGHT_ALT: Keyboard.ALTERNATE;\n\t\t\t//case RIGHT_META: 0x400000E7;\n\t\t\t//case MODE: 0x40000101;\n\t\t\t//case AUDIO_NEXT: 0x40000102;\n\t\t\t//case AUDIO_PREVIOUS: 0x40000103;\n\t\t\t//case AUDIO_STOP: 0x40000104;\n\t\t\t//case AUDIO_PLAY: 0x40000105;\n\t\t\t//case AUDIO_MUTE: 0x40000106;\n\t\t\t//case MEDIA_SELECT: 0x40000107;\n\t\t\t//case WWW: 0x40000108;\n\t\t\t//case MAIL: 0x40000109;\n\t\t\t//case CALCULATOR: 0x4000010A;\n\t\t\t//case COMPUTER: 0x4000010B;\n\t\t\t//case APP_CONTROL_SEARCH: 0x4000010C;\n\t\t\t//case APP_CONTROL_HOME: 0x4000010D;\n\t\t\t//case APP_CONTROL_BACK: 0x4000010E;\n\t\t\t//case APP_CONTROL_FORWARD: 0x4000010F;\n\t\t\t//case APP_CONTROL_STOP: 0x40000110;\n\t\t\t//case APP_CONTROL_REFRESH: 0x40000111;\n\t\t\t//case APP_CONTROL_BOOKMARKS: 0x40000112;\n\t\t\t//case BRIGHTNESS_DOWN: 0x40000113;\n\t\t\t//case BRIGHTNESS_UP: 0x40000114;\n\t\t\t//case DISPLAY_SWITCH: 0x40000115;\n\t\t\t//case BACKLIGHT_TOGGLE: 0x40000116;\n\t\t\t//case BACKLIGHT_DOWN: 0x40000117;\n\t\t\t//case BACKLIGHT_UP: 0x40000118;\n\t\t\t//case EJECT: 0x40000119;\n\t\t\t//case SLEEP: 0x4000011A;\n\t\t\tdefault: cast keyCode;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function create (config:LimeConfig):Void {\n\t\t\n\t\tsuper.create (config);\n\t\t\n\t\tstage = new Stage (window.width, window.height, config.background);\n\t\tstage.addChild (Lib.current);\n\t\t\n\t\tstage.align = StageAlign.TOP_LEFT;\n\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function onKey (event:KeyboardEvent):Void {\n\t\t\n\t\tvar stack = new Array <DisplayObject> ();\n\t\t\n\t\tif (stage.__focus == null) {\n\t\t\t\n\t\t\tstage.__getInteractive (stack);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstage.__focus.__getInteractive (stack);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stack.length > 0) {\n\t\t\t\n\t\t\tstack.reverse ();\n\t\t\tstage.__fireEvent (event, stack);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onKeyDown (keyCode:Int, modifier:Int):Void {\n\t\t\n\t\tvar keyCode = convertKeyCode (cast keyCode);\n\t\tvar charCode = keyCode;\n\t\t\n\t\t//var event = new KeyboardEvent (event.type == KEY_DOWN ? KeyboardEvent.KEY_DOWN : KeyboardEvent.KEY_UP, true, false, event.code, keyCode, keyLocation, event.ctrlKey, event.altKey, event.shiftKey, event.metaKey)\n\t\tonKey (new KeyboardEvent (KeyboardEvent.KEY_DOWN, true, false, charCode, keyCode));\n\t\t\n\t}\n\t\n\t\n\tpublic override function onKeyUp (keyCode:Int, modifier:Int):Void {\n\t\t\n\t\tvar keyCode = convertKeyCode (cast keyCode);\n\t\tvar charCode = keyCode;\n\t\t\n\t\t//var event = new KeyboardEvent (event.type == KEY_DOWN ? KeyboardEvent.KEY_DOWN : KeyboardEvent.KEY_UP, true, false, event.code, keyCode, keyLocation, event.ctrlKey, event.altKey, event.shiftKey, event.metaKey)\n\t\tonKey (new KeyboardEvent (KeyboardEvent.KEY_UP, true, false, charCode, keyCode));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function onMouse (type:String, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tif (button > 2) return;\n\t\t\n\t\tstage.__mouseX = x;\n\t\tstage.__mouseY = y;\n\t\t\n\t\tvar stack = [];\n\t\tvar target:InteractiveObject = null;\n\t\tvar targetPoint = new Point (x, y);\n\t\t\n\t\tif (stage.__hitTest (x, y, false, stack, true)) {\n\t\t\t\n\t\t\ttarget = cast stack[stack.length - 1];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttarget = stage;\n\t\t\tstack = [ stage ];\n\t\t\t\n\t\t}\n\t\t\n\t\tstage.__fireEvent (MouseEvent.__create (type, button, (target == stage ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\n\t\t\n\t\tvar clickType = switch (type) {\n\t\t\t\n\t\t\tcase MouseEvent.MOUSE_UP: MouseEvent.CLICK;\n\t\t\tcase MouseEvent.MIDDLE_MOUSE_UP: MouseEvent.MIDDLE_CLICK;\n\t\t\tcase MouseEvent.RIGHT_MOUSE_UP: MouseEvent.RIGHT_CLICK;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clickType != null) {\n\t\t\t\n\t\t\tstage.__fireEvent (MouseEvent.__create (clickType, button, (target == stage ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\n\t\t\t\n\t\t\tif (type == MouseEvent.MOUSE_UP && cast (target, openfl.display.InteractiveObject).doubleClickEnabled) {\n\t\t\t\t\n\t\t\t\tvar currentTime = Lib.getTimer ();\n\t\t\t\tif (currentTime - __lastClickTime < 500) {\n\t\t\t\t\t\n\t\t\t\t\tstage.__fireEvent (MouseEvent.__create (MouseEvent.DOUBLE_CLICK, button, (target == stage ? targetPoint : target.globalToLocal (targetPoint)), target), stack);\n\t\t\t\t\t__lastClickTime = 0;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__lastClickTime = currentTime;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Std.is (target, Sprite)) {\n\t\t\t\n\t\t\tvar targetSprite:Sprite = cast target;\n\t\t\t\n\t\t\tif (targetSprite.buttonMode && targetSprite.useHandCursor) {\n\t\t\t\t\n\t\t\t\tMouse.cursor = POINTER;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tMouse.cursor = ARROW;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tMouse.cursor = ARROW;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stage.__dragObject != null) {\n\t\t\t\n\t\t\tstage.__drag (targetPoint);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseDown (x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tvar type = switch (button) {\n\t\t\t\n\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_DOWN;\n\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_DOWN;\n\t\t\tdefault: MouseEvent.MOUSE_DOWN;\n\t\t\t\n\t\t}\n\t\t\n\t\tonMouse (type, x, y, button);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseMove (x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tonMouse (MouseEvent.MOUSE_MOVE, x, y, 0);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onMouseUp (x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tvar type = switch (button) {\n\t\t\t\n\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_UP;\n\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_UP;\n\t\t\tdefault: MouseEvent.MOUSE_UP;\n\t\t\t\n\t\t}\n\t\t\n\t\tonMouse (type, x, y, button);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function onTouch (type:String, x:Float, y:Float, id:Int):Void {\n\t\t\n\t\t/*event.preventDefault ();\n\t\t\n\t\tvar rect;\n\t\t\n\t\tif (__canvas != null) {\n\t\t\t\n\t\t\trect = __canvas.getBoundingClientRect ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trect = __div.getBoundingClientRect ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar touch = event.changedTouches[0];\n\t\tvar point = new Point ((touch.pageX - rect.left) * (stageWidth / rect.width), (touch.pageY - rect.top) * (stageHeight / rect.height));\n\t\t*/\n\t\tvar point = new Point (x, y);\n\t\t\n\t\tstage.__mouseX = point.x;\n\t\tstage.__mouseY = point.y;\n\t\t\n\t\tvar __stack = [];\n\t\t\n\t\tvar mouseType = switch (type) {\n\t\t\t\n\t\t\tcase TouchEvent.TOUCH_BEGIN: MouseEvent.MOUSE_DOWN;\n\t\t\tcase TouchEvent.TOUCH_MOVE: MouseEvent.MOUSE_MOVE;\n\t\t\tcase TouchEvent.TOUCH_END: MouseEvent.MOUSE_UP;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stage.__hitTest (x, y, false, __stack, true)) {\n\t\t\t\n\t\t\tvar target = __stack[__stack.length - 1];\n\t\t\tvar localPoint = target.globalToLocal (point);\n\t\t\t\n\t\t\tvar touchEvent = TouchEvent.__create (type, /*event,*/ null/*touch*/, localPoint, cast target);\n\t\t\ttouchEvent.touchPointID = id;\n\t\t\t//touchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\ttouchEvent.isPrimaryTouchPoint = true;\n\t\t\t\n\t\t\tvar mouseEvent = MouseEvent.__create (mouseType, 0, localPoint, cast target);\n\t\t\tmouseEvent.buttonDown = (type != TouchEvent.TOUCH_END);\n\t\t\t\n\t\t\tstage.__fireEvent (touchEvent, __stack);\n\t\t\tstage.__fireEvent (mouseEvent, __stack);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar touchEvent = TouchEvent.__create (type, /*event,*/ null/*touch*/, point, stage);\n\t\t\ttouchEvent.touchPointID = id;\n\t\t\t//touchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\ttouchEvent.isPrimaryTouchPoint = true;\n\t\t\t\n\t\t\tvar mouseEvent = MouseEvent.__create (mouseType, 0, point, stage);\n\t\t\tmouseEvent.buttonDown = (type != TouchEvent.TOUCH_END);\n\t\t\t\n\t\t\tstage.__fireEvent (touchEvent, [ stage ]);\n\t\t\tstage.__fireEvent (mouseEvent, [ stage ]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == TouchEvent.TOUCH_MOVE && stage.__dragObject != null) {\n\t\t\t\n\t\t\tstage.__drag (point);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchMove (x:Float, y:Float, id:Int):Void {\n\t\t\n\t\tonTouch (TouchEvent.TOUCH_MOVE, x, y, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchEnd (x:Float, y:Float, id:Int):Void {\n\t\t\n\t\tonTouch (TouchEvent.TOUCH_END, x, y, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onTouchStart (x:Float, y:Float, id:Int):Void {\n\t\t\n\t\tonTouch (TouchEvent.TOUCH_BEGIN, x, y, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowActivate ():Void {\n\t\t\n\t\tvar event = new openfl.events.Event (openfl.events.Event.ACTIVATE);\n\t\tstage.__broadcast (event, true);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowDeactivate ():Void {\n\t\t\n\t\tvar event = new openfl.events.Event (openfl.events.Event.DEACTIVATE);\n\t\tstage.__broadcast (event, true);\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowResize (width:Int, height:Int):Void {\n\t\t\n\t\tstage.stageWidth = width;\n\t\tstage.stageHeight = height;\n\t\t\n\t\tvar event = new openfl.events.Event (openfl.events.Event.RESIZE);\n\t\tstage.__broadcast (event, false);\n\t\t\n\t}\n\t\n\t\n\tpublic override function render (context:RenderContext):Void {\n\t\t\n\t\tstage.__render (context);\n\t\t\n\t}\n\t\n\t\n\t#end\n\t\n\t\n}","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport lime.graphics.opengl.GLBuffer;\nimport lime.graphics.opengl.GLTexture;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.math.ColorMatrix;\nimport lime.utils.Float32Array;\nimport lime.utils.UInt8Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.errors.IOError;\nimport openfl.filters.BitmapFilter;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if js\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.ImageData;\nimport js.html.ImageElement;\nimport js.html.Uint8ClampedArray;\nimport js.Browser;\n#end\n\n\n/**\n * The BitmapData class lets you work with the data(pixels) of a Bitmap\n * object. You can use the methods of the BitmapData class to create\n * arbitrarily sized transparent or opaque bitmap images and manipulate them\n * in various ways at runtime. You can also access the BitmapData for a bitmap\n * image that you load with the <code>openfl.Assets</code> or \n * <code>openfl.display.Loader</code> classes.\n *\n * <p>This class lets you separate bitmap rendering operations from the\n * internal display updating routines of OpenFL. By manipulating a\n * BitmapData object directly, you can create complex images without incurring\n * the per-frame overhead of constantly redrawing the content from vector\n * data.</p>\n *\n * <p>The methods of the BitmapData class support effects that are not\n * available through the filters available to non-bitmap display objects.</p>\n *\n * <p>A BitmapData object contains an array of pixel data. This data can\n * represent either a fully opaque bitmap or a transparent bitmap that\n * contains alpha channel data. Either type of BitmapData object is stored as\n * a buffer of 32-bit integers. Each 32-bit integer determines the properties\n * of a single pixel in the bitmap.</p>\n *\n * <p>Each 32-bit integer is a combination of four 8-bit channel values(from\n * 0 to 255) that describe the alpha transparency and the red, green, and blue\n * (ARGB) values of the pixel.(For ARGB values, the most significant byte\n * represents the alpha channel value, followed by red, green, and blue.)</p>\n *\n * <p>The four channels(alpha, red, green, and blue) are represented as\n * numbers when you use them with the <code>BitmapData.copyChannel()</code>\n * method or the <code>DisplacementMapFilter.componentX</code> and\n * <code>DisplacementMapFilter.componentY</code> properties, and these numbers\n * are represented by the following constants in the BitmapDataChannel\n * class:</p>\n *\n * <ul>\n *   <li><code>BitmapDataChannel.ALPHA</code></li>\n *   <li><code>BitmapDataChannel.RED</code></li>\n *   <li><code>BitmapDataChannel.GREEN</code></li>\n *   <li><code>BitmapDataChannel.BLUE</code></li>\n * </ul>\n *\n * <p>You can attach BitmapData objects to a Bitmap object by using the\n * <code>bitmapData</code> property of the Bitmap object.</p>\n *\n * <p>You can use a BitmapData object to fill a Graphics object by using the\n * <code>Graphics.beginBitmapFill()</code> method.</p>\n * \n * <p>You can also use a BitmapData object to perform batch tile rendering\n * using the <code>openfl.display.Tilesheet</code> class.</p>\n *\n * <p>In Flash Player 10, the maximum size for a BitmapData object\n * is 8,191 pixels in width or height, and the total number of pixels cannot\n * exceed 16,777,215 pixels.(So, if a BitmapData object is 8,191 pixels wide,\n * it can only be 2,048 pixels high.) In Flash Player 9 and earlier, the limitation \n * is 2,880 pixels in height and 2,880 in width.</p>\n */\n\n@:access(lime.graphics.Image)\n@:access(lime.graphics.ImageBuffer)\n@:access(lime.math.Rectangle)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n@:autoBuild(openfl.Assets.embedBitmap())\n\n\nclass BitmapData implements IBitmapDrawable {\n\t\n\t\n\t/**\n\t * The height of the bitmap image in pixels.\n\t */\n\tpublic var height (default, null):Int;\n\t\n\t/**\n\t * The rectangle that defines the size and location of the bitmap image. The\n\t * top and left of the rectangle are 0; the width and height are equal to the\n\t * width and height in pixels of the BitmapData object.\n\t */\n\tpublic var rect (default, null):Rectangle;\n\t\n\t/**\n\t * Defines whether the bitmap image supports per-pixel transparency. You can\n\t * set this value only when you construct a BitmapData object by passing in\n\t * <code>true</code> for the <code>transparent</code> parameter of the\n\t * constructor. Then, after you create a BitmapData object, you can check\n\t * whether it supports per-pixel transparency by determining if the value of\n\t * the <code>transparent</code> property is <code>true</code>.\n\t */\n\tpublic var transparent (default, null):Bool;\n\t\n\t/**\n\t * The width of the bitmap image in pixels.\n\t */\n\tpublic var width (default, null):Int;\n\t\n\t@:noCompletion @:dox(hide) public var __worldTransform:Matrix;\n\t\n\t@:noCompletion private var __buffer:GLBuffer;\n\t@:noCompletion private var __image:Image;\n\t@:noCompletion private var __isValid:Bool;\n\t@:noCompletion private var __texture:GLTexture;\n\t@:noCompletion private var __textureImage:Image;\n\t@:noCompletion private var __uvData:TextureUvs;\n\t\n\t\n\t/**\n\t * Creates a BitmapData object with a specified width and height. If you specify a value for \n\t * the <code>fillColor</code> parameter, every pixel in the bitmap is set to that color. \n\t * \n\t * By default, the bitmap is created as transparent, unless you pass the value <code>false</code>\n\t * for the transparent parameter. After you create an opaque bitmap, you cannot change it \n\t * to a transparent bitmap. Every pixel in an opaque bitmap uses only 24 bits of color channel \n\t * information. If you define the bitmap as transparent, every pixel uses 32 bits of color \n\t * channel information, including an alpha transparency channel.\n\t * \n\t * @param\twidth\t\tThe width of the bitmap image in pixels. \n\t * @param\theight\t\tThe height of the bitmap image in pixels. \n\t * @param\ttransparent\t\tSpecifies whether the bitmap image supports per-pixel transparency. The default value is <code>true</code>(transparent). To create a fully transparent bitmap, set the value of the <code>transparent</code> parameter to <code>true</code> and the value of the <code>fillColor</code> parameter to 0x00000000(or to 0). Setting the <code>transparent</code> property to <code>false</code> can result in minor improvements in rendering performance.\n\t * @param\tfillColor\t\tA 32-bit ARGB color value that you use to fill the bitmap image area. The default value is 0xFFFFFFFF(solid white).\n\t */\n\tpublic function new (width:Int, height:Int, transparent:Bool = true, fillColor:UInt = 0xFFFFFFFF) {\n\t\t\n\t\tthis.transparent = transparent;\n\t\t\n\t\tif (width > 0 && height > 0) {\n\t\t\t\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\trect = new Rectangle (0, 0, width, height);\n\t\t\t\n\t\t\tif (transparent) {\n\n\t\t\t\tif ((fillColor & 0xFF000000) == 0) {\t\t\t\t\n\t\t\t\t\tfillColor = 0;\n\t\t\t\t}\n                \n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\tfillColor = (0xFF << 24) | (fillColor & 0xFFFFFF);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__image = new Image (null, 0, 0, width, height, fillColor);\n\t\t\t__image.transparent = transparent;\n\t\t\t__isValid = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t__createUVs ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Takes a source image and a filter object and generates the filtered image. \n\t * \n\t * This method relies on the behavior of built-in filter objects, which determine the \n\t * destination rectangle that is affected by an input source rectangle.\n\t * \n\t * After a filter is applied, the resulting image can be larger than the input image. \n\t * For example, if you use a BlurFilter class to blur a source rectangle of(50,50,100,100) \n\t * and a destination point of(10,10), the area that changes in the destination image is \n\t * larger than(10,10,60,60) because of the blurring. This happens internally during the \n\t * applyFilter() call.\n\t * \n\t * If the <code>sourceRect</code> parameter of the sourceBitmapData parameter is an \n\t * interior region, such as(50,50,100,100) in a 200 x 200 image, the filter uses the source \n\t * pixels outside the <code>sourceRect</code> parameter to generate the destination rectangle.\n\t * \n\t * If the BitmapData object and the object specified as the <code>sourceBitmapData</code> \n\t * parameter are the same object, the application uses a temporary copy of the object to \n\t * perform the filter. For best performance, avoid this situation.\n\t * \n\t * @param\tsourceBitmapData\t\tThe input bitmap image to use. The source image can be a different BitmapData object or it can refer to the current BitmapData instance.\n\t * @param\tsourceRect\t\tA rectangle that defines the area of the source image to use as input.\n\t * @param\tdestPoint\t\tThe point within the destination image(the current BitmapData instance) that corresponds to the upper-left corner of the source rectangle. \n\t * @param\tfilter\t\tThe filter object that you use to perform the filtering operation. \n\t */\n\tpublic function applyFilter (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter):Void {\n\t\t\n\t\tif (!__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid) return;\n\t\t\n\t\t#if js\n\t\tImageCanvasUtil.convertToCanvas (__image);\n\t\tImageCanvasUtil.createImageData (__image);\n\t\tImageCanvasUtil.convertToCanvas (sourceBitmapData.__image);\n\t\tImageCanvasUtil.createImageData (sourceBitmapData.__image);\n\t\t#end\n\t\t\n\t\t#if js\n\t\tfilter.__applyFilter (__image.buffer.__srcImageData, sourceBitmapData.__image.buffer.__srcImageData, sourceRect, destPoint);\n\t\t#end\n\t\t\n\t\t__image.dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns a new BitmapData object that is a clone of the original instance with an exact copy of the contained bitmap. \n\t * @return\t\tA new BitmapData object that is identical to the original.\n\t */\n\tpublic function clone ():BitmapData {\n\t\t\n\t\tif (!__isValid) {\n\t\t\t\n\t\t\treturn new BitmapData (width, height, transparent);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn BitmapData.fromImage (__image.clone (), transparent);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adjusts the color values in a specified area of a bitmap image by using a <code>ColorTransform</code>\n\t * object. If the rectangle matches the boundaries of the bitmap image, this method transforms the color \n\t * values of the entire image. \n\t * @param\trect\t\tA Rectangle object that defines the area of the image in which the ColorTransform object is applied.\n\t * @param\tcolorTransform\t\tA ColorTransform object that describes the color transformation values to apply.\n\t */\n\tpublic function colorTransform (rect:Rectangle, colorTransform:ColorTransform):Void {\n\t\t\n\t\t__image.colorTransform (rect.__toLimeRectangle (), colorTransform.__toLimeColorMatrix ());\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Transfers data from one channel of another BitmapData object or the\n\t * current BitmapData object into a channel of the current BitmapData object.\n\t * All of the data in the other channels in the destination BitmapData object\n\t * are preserved.\n\t *\n\t * <p>The source channel value and destination channel value can be one of\n\t * following values: </p>\n\t *\n\t * <ul>\n\t *   <li><code>BitmapDataChannel.RED</code></li>\n\t *   <li><code>BitmapDataChannel.GREEN</code></li>\n\t *   <li><code>BitmapDataChannel.BLUE</code></li>\n\t *   <li><code>BitmapDataChannel.ALPHA</code></li>\n\t * </ul>\n\t * \n\t * @param sourceBitmapData The input bitmap image to use. The source image\n\t *                         can be a different BitmapData object or it can\n\t *                         refer to the current BitmapData object.\n\t * @param sourceRect       The source Rectangle object. To copy only channel\n\t *                         data from a smaller area within the bitmap,\n\t *                         specify a source rectangle that is smaller than\n\t *                         the overall size of the BitmapData object.\n\t * @param destPoint        The destination Point object that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new channel data is placed. To copy only\n\t *                         channel data from one area to a different area in\n\t *                         the destination image, specify a point other than\n\t *                        (0,0).\n\t * @param sourceChannel    The source channel. Use a value from the\n\t *                         BitmapDataChannel class\n\t *                        (<code>BitmapDataChannel.RED</code>,\n\t *                         <code>BitmapDataChannel.BLUE</code>,\n\t *                         <code>BitmapDataChannel.GREEN</code>,\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\n\t * @param destChannel      The destination channel. Use a value from the\n\t *                         BitmapDataChannel class\n\t *                        (<code>BitmapDataChannel.RED</code>,\n\t *                         <code>BitmapDataChannel.BLUE</code>,\n\t *                         <code>BitmapDataChannel.GREEN</code>,\n\t *                         <code>BitmapDataChannel.ALPHA</code>).\n\t * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.\n\t */\n\tpublic function copyChannel (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:Int, destChannel:Int):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t\n\t\tvar sourceChannel = switch (sourceChannel) {\n\t\t\t\n\t\t\tcase 1: ImageChannel.RED;\n\t\t\tcase 2: ImageChannel.GREEN;\n\t\t\tcase 4: ImageChannel.BLUE;\n\t\t\tcase 8: ImageChannel.ALPHA;\n\t\t\tdefault: return;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar destChannel = switch (destChannel) {\n\t\t\t\n\t\t\tcase 1: ImageChannel.RED;\n\t\t\tcase 2: ImageChannel.GREEN;\n\t\t\tcase 4: ImageChannel.BLUE;\n\t\t\tcase 8: ImageChannel.ALPHA;\n\t\t\tdefault: return;\n\t\t\t\n\t\t}\n\t\t\n\t\t__image.copyChannel (sourceBitmapData.__image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), sourceChannel, destChannel);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Provides a fast routine to perform pixel manipulation between images with\n\t * no stretching, rotation, or color effects. This method copies a\n\t * rectangular area of a source image to a rectangular area of the same size\n\t * at the destination point of the destination BitmapData object.\n\t *\n\t * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>\n\t * parameters, you can use a secondary image as an alpha source for the\n\t * source image. If the source image has alpha data, both sets of alpha data\n\t * are used to composite pixels from the source image to the destination\n\t * image. The <code>alphaPoint</code> parameter is the point in the alpha\n\t * image that corresponds to the upper-left corner of the source rectangle.\n\t * Any pixels outside the intersection of the source image and alpha image\n\t * are not copied to the destination image.</p>\n\t *\n\t * <p>The <code>mergeAlpha</code> property controls whether or not the alpha\n\t * channel is used when a transparent image is copied onto another\n\t * transparent image. To copy pixels with the alpha channel data, set the\n\t * <code>mergeAlpha</code> property to <code>true</code>. By default, the\n\t * <code>mergeAlpha</code> property is <code>false</code>.</p>\n\t * \n\t * @param sourceBitmapData The input bitmap image from which to copy pixels.\n\t *                         The source image can be a different BitmapData\n\t *                         instance, or it can refer to the current\n\t *                         BitmapData instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The destination point that represents the\n\t *                         upper-left corner of the rectangular area where\n\t *                         the new pixels are placed.\n\t * @param alphaBitmapData  A secondary, alpha BitmapData object source.\n\t * @param alphaPoint       The point in the alpha BitmapData object source\n\t *                         that corresponds to the upper-left corner of the\n\t *                         <code>sourceRect</code> parameter.\n\t * @param mergeAlpha       To use the alpha channel, set the value to\n\t *                         <code>true</code>. To copy pixels with no alpha\n\t *                         channel, set the value to <code>false</code>.\n\t * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.\n\t */\n\tpublic function copyPixels (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (!__isValid || sourceBitmapData == null) return;\n\t\t\n\t\t__image.copyPixels (sourceBitmapData.__image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), alphaBitmapData != null ? alphaBitmapData.__image : null, alphaPoint != null ? alphaPoint.__toLimeVector2 () : null, mergeAlpha);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Frees memory that is used to store the BitmapData object.\n\t *\n\t * <p>When the <code>dispose()</code> method is called on an image, the width\n\t * and height of the image are set to 0. All subsequent calls to methods or\n\t * properties of this BitmapData instance fail, and an exception is thrown.\n\t * </p>\n\t *\n\t * <p><code>BitmapData.dispose()</code> releases the memory occupied by the\n\t * actual bitmap data, immediately(a bitmap can consume up to 64 MB of\n\t * memory). After using <code>BitmapData.dispose()</code>, the BitmapData\n\t * object is no longer usable and an exception may be thrown if\n\t * you call functions on the BitmapData object. However,\n\t * <code>BitmapData.dispose()</code> does not garbage collect the BitmapData\n\t * object(approximately 128 bytes); the memory occupied by the actual\n\t * BitmapData object is released at the time the BitmapData object is\n\t * collected by the garbage collector.</p>\n\t * \n\t */\n\tpublic function dispose ():Void {\n\t\t\n\t\t__image = null;\n\t\t\n\t\twidth = 0;\n\t\theight = 0;\n\t\trect = null;\n\t\t__isValid = false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws the <code>source</code> display object onto the bitmap image, using\n\t * the NME software renderer. You can specify <code>matrix</code>,\n\t * <code>colorTransform</code>, <code>blendMode</code>, and a destination\n\t * <code>clipRect</code> parameter to control how the rendering performs.\n\t * Optionally, you can specify whether the bitmap should be smoothed when\n\t * scaled(this works only if the source object is a BitmapData object).\n\t *\n\t * <p>The source display object does not use any of its applied\n\t * transformations for this call. It is treated as it exists in the library\n\t * or file, with no matrix transform, no color transform, and no blend mode.\n\t * To draw a display object(such as a movie clip) by using its own transform\n\t * properties, you can copy its <code>transform</code> property object to the\n\t * <code>transform</code> property of the Bitmap object that uses the\n\t * BitmapData object.</p>\n\t * \n\t * @param source         The display object or BitmapData object to draw to\n\t *                       the BitmapData object.(The DisplayObject and\n\t *                       BitmapData classes implement the IBitmapDrawable\n\t *                       interface.)\n\t * @param matrix         A Matrix object used to scale, rotate, or translate\n\t *                       the coordinates of the bitmap. If you do not want to\n\t *                       apply a matrix transformation to the image, set this\n\t *                       parameter to an identity matrix, created with the\n\t *                       default <code>new Matrix()</code> constructor, or\n\t *                       pass a <code>null</code> value.\n\t * @param colorTransform A ColorTransform object that you use to adjust the\n\t *                       color values of the bitmap. If no object is\n\t *                       supplied, the bitmap image's colors are not\n\t *                       transformed. If you must pass this parameter but you\n\t *                       do not want to transform the image, set this\n\t *                       parameter to a ColorTransform object created with\n\t *                       the default <code>new ColorTransform()</code>\n\t *                       constructor.\n\t * @param blendMode      A string value, from the openfl.display.BlendMode\n\t *                       class, specifying the blend mode to be applied to\n\t *                       the resulting bitmap.\n\t * @param clipRect       A Rectangle object that defines the area of the\n\t *                       source object to draw. If you do not supply this\n\t *                       value, no clipping occurs and the entire source\n\t *                       object is drawn.\n\t * @param smoothing      A Boolean value that determines whether a BitmapData\n\t *                       object is smoothed when scaled or rotated, due to a\n\t *                       scaling or rotation in the <code>matrix</code>\n\t *                       parameter. The <code>smoothing</code> parameter only\n\t *                       applies if the <code>source</code> parameter is a\n\t *                       BitmapData object. With <code>smoothing</code> set\n\t *                       to <code>false</code>, the rotated or scaled\n\t *                       BitmapData image can appear pixelated or jagged. For\n\t *                       example, the following two images use the same\n\t *                       BitmapData object for the <code>source</code>\n\t *                       parameter, but the <code>smoothing</code> parameter\n\t *                       is set to <code>true</code> on the left and\n\t *                       <code>false</code> on the right:\n\t *\n\t *                       <p>Drawing a bitmap with <code>smoothing</code> set\n\t *                       to <code>true</code> takes longer than doing so with\n\t *                       <code>smoothing</code> set to\n\t *                       <code>false</code>.</p>\n\t * @throws ArgumentError The <code>source</code> parameter is not a\n\t *                       BitmapData or DisplayObject object.\n\t * @throws ArgumentError The source is null or not a valid IBitmapDrawable\n\t *                       object.\n\t * @throws SecurityError The <code>source</code> object and(in the case of a\n\t *                       Sprite or MovieClip object) all of its child objects\n\t *                       do not come from the same domain as the caller, or\n\t *                       are not in a content that is accessible to the\n\t *                       caller by having called the\n\t *                       <code>Security.allowDomain()</code> method. This\n\t *                       restriction does not apply to AIR content in the\n\t *                       application security sandbox.\n\t */\n\tpublic function draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t\n\t\tswitch (__image.type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (__image);\n\t\t\t\tImageCanvasUtil.sync (__image);\n\t\t\t\t\n\t\t\t\t#if js\n\t\t\t\tvar buffer = __image.buffer;\n\t\t\t\t\n\t\t\t\tvar renderSession = new RenderSession ();\n\t\t\t\trenderSession.context = cast buffer.__srcContext;\n\t\t\t\trenderSession.roundPixels = true;\n\t\t\t\t\n\t\t\t\tif (!smoothing) {\n\t\t\t\t\t\n\t\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\t\t\tuntyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\t\t\tbuffer.__srcContext.imageSmoothingEnabled = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\t\tsource.__worldTransform = matrix != null ? matrix : new Matrix ();\n\t\t\t\tsource.__updateChildren (false);\n\t\t\t\tsource.__renderCanvas (renderSession);\n\t\t\t\tsource.__worldTransform = matrixCache;\n\t\t\t\tsource.__updateChildren (true);\n\t\t\t\t\n\t\t\t\tif (!smoothing) {\n\t\t\t\t\t\n\t\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = true;\n\t\t\t\t\tuntyped (buffer.__srcContext).webkitImageSmoothingEnabled = true;\n\t\t\t\t\tbuffer.__srcContext.imageSmoothingEnabled = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcContext.setTransform (1, 0, 0, 1, 0, 0);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\t// TODO\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function encode (rect:Rectangle, compressor:Dynamic, byteArray:ByteArray = null):ByteArray {\n\t\t\n\t\t// TODO: Support rect\n\t\t\n\t\tif (!__isValid || rect == null) return byteArray = null;\n\t\t\n\t\tif (Std.is (compressor, PNGEncoderOptions)) {\n\t\t\t\n\t\t\treturn byteArray = __image.encode (\"png\");\n\t\t\t\n\t\t} else if (Std.is (compressor, JPEGEncoderOptions)) {\n\t\t\t\n\t\t\treturn byteArray = __image.encode (\"jpg\", cast (compressor, JPEGEncoderOptions).quality);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn byteArray = null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Fills a rectangular area of pixels with a specified ARGB color.\n\t * \n\t * @param rect  The rectangular area to fill.\n\t * @param color The ARGB color value that fills the area. ARGB colors are\n\t *              often specified in hexadecimal format; for example,\n\t *              0xFF336699.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic function fillRect (rect:Rectangle, color:Int):Void {\n\t\t\n\t\tif (!__isValid || rect == null) return;\n\t\t__image.fillRect (rect.__toLimeRectangle (), color);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Performs a flood fill operation on an image starting at an(<i>x</i>,\n\t * <i>y</i>) coordinate and filling with a certain color. The\n\t * <code>floodFill()</code> method is similar to the paint bucket tool in\n\t * various paint programs. The color is an ARGB color that contains alpha\n\t * information and color information.\n\t * \n\t * @param x     The <i>x</i> coordinate of the image.\n\t * @param y     The <i>y</i> coordinate of the image.\n\t * @param color The ARGB color to use as a fill.\n\t */\n\tpublic function floodFill (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t__image.floodFill (x, y, color);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBase64 (base64:String, type:String, onload:BitmapData -> Void = null):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true);\n\t\tbitmapData.__loadFromBase64 (base64, type, onload);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null, onload:BitmapData -> Void = null):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true);\n\t\tbitmapData.__loadFromBytes (bytes, rawAlpha, onload);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\t#if js\n\tpublic static function fromCanvas (canvas:CanvasElement, transparent:Bool = true):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, transparent);\n\t\tbitmapData.__loadFromImage (Image.fromCanvas (canvas));\n\t\tbitmapData.__image.transparent = transparent;\n\t\treturn bitmapData;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function fromFile (path:String, onload:BitmapData -> Void = null, onerror:Void -> Void = null):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true);\n\t\tbitmapData.__loadFromFile (path, onload, onerror);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromImage (image:Image, transparent:Bool = true):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, transparent);\n\t\tbitmapData.__loadFromImage (image);\n\t\tbitmapData.__image.transparent = transparent;\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines the destination rectangle that the <code>applyFilter()</code>\n\t * method call affects, given a BitmapData object, a source rectangle, and a\n\t * filter object.\n\t *\n\t * <p>For example, a blur filter normally affects an area larger than the\n\t * size of the original image. A 100 x 200 pixel image that is being filtered\n\t * by a default BlurFilter instance, where <code>blurX = blurY = 4</code>\n\t * generates a destination rectangle of <code>(-2,-2,104,204)</code>. The\n\t * <code>generateFilterRect()</code> method lets you find out the size of\n\t * this destination rectangle in advance so that you can size the destination\n\t * image appropriately before you perform a filter operation.</p>\n\t *\n\t * <p>Some filters clip their destination rectangle based on the source image\n\t * size. For example, an inner <code>DropShadow</code> does not generate a\n\t * larger result than its source image. In this API, the BitmapData object is\n\t * used as the source bounds and not the source <code>rect</code>\n\t * parameter.</p>\n\t * \n\t * @param sourceRect A rectangle defining the area of the source image to use\n\t *                   as input.\n\t * @param filter     A filter object that you use to calculate the\n\t *                   destination rectangle.\n\t * @return A destination rectangle computed by using an image, the\n\t *         <code>sourceRect</code> parameter, and a filter.\n\t * @throws TypeError The sourceRect or filter are null.\n\t */\n\tpublic function generateFilterRect (sourceRect:Rectangle, filter:BitmapFilter):Rectangle {\n\t\t\n\t\treturn sourceRect.clone ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer (gl:GLRenderContext):GLBuffer {\n\t\t\n\t\tif (__buffer == null) {\n\t\t\t\n\t\t\tvar data = [\n\t\t\t\t\n\t\t\t\twidth, height, 0, 1, 1, \n\t\t\t\t0, height, 0, 0, 1, \n\t\t\t\twidth, 0, 0, 1, 0, \n\t\t\t\t0, 0, 0, 0, 0\n\t\t\t\t\n\t\t\t];\n\t\t\t\n\t\t\t__buffer = gl.createBuffer ();\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, __buffer);\n\t\t\tgl.bufferData (gl.ARRAY_BUFFER, new Float32Array (cast data), gl.STATIC_DRAW);\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, null);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __buffer;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Determines a rectangular region that either fully encloses all pixels of a\n\t * specified color within the bitmap image(if the <code>findColor</code>\n\t * parameter is set to <code>true</code>) or fully encloses all pixels that\n\t * do not include the specified color(if the <code>findColor</code>\n\t * parameter is set to <code>false</code>).\n\t *\n\t * <p>For example, if you have a source image and you want to determine the\n\t * rectangle of the image that contains a nonzero alpha channel, pass\n\t * <code>{mask: 0xFF000000, color: 0x00000000}</code> as parameters. If the\n\t * <code>findColor</code> parameter is set to <code>true</code>, the entire\n\t * image is searched for the bounds of pixels for which <code>(value & mask)\n\t * == color</code>(where <code>value</code> is the color value of the\n\t * pixel). If the <code>findColor</code> parameter is set to\n\t * <code>false</code>, the entire image is searched for the bounds of pixels\n\t * for which <code>(value & mask) != color</code>(where <code>value</code>\n\t * is the color value of the pixel). To determine white space around an\n\t * image, pass <code>{mask: 0xFFFFFFFF, color: 0xFFFFFFFF}</code> to find the\n\t * bounds of nonwhite pixels.</p>\n\t * \n\t * @param mask      A hexadecimal value, specifying the bits of the ARGB\n\t *                  color to consider. The color value is combined with this\n\t *                  hexadecimal value, by using the <code>&</code>(bitwise\n\t *                  AND) operator.\n\t * @param color     A hexadecimal value, specifying the ARGB color to match\n\t *                 (if <code>findColor</code> is set to <code>true</code>)\n\t *                  or <i>not</i> to match(if <code>findColor</code> is set\n\t *                  to <code>false</code>).\n\t * @param findColor If the value is set to <code>true</code>, returns the\n\t *                  bounds of a color value in an image. If the value is set\n\t *                  to <code>false</code>, returns the bounds of where this\n\t *                  color doesn't exist in an image.\n\t * @return The region of the image that is the specified color.\n\t */\n\tpublic function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true):Rectangle {\n\t\t\n\t\treturn __image.rect.__toFlashRectangle ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns an integer that represents an RGB pixel value from a BitmapData\n\t * object at a specific point(<i>x</i>, <i>y</i>). The\n\t * <code>getPixel()</code> method returns an unmultiplied pixel value. No\n\t * alpha information is returned.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t * \n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number that represents an RGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, the\n\t *         method returns 0.\n\t */\n\tpublic function getPixel (x:Int, y:Int):Int {\n\t\t\n\t\tif (!__isValid) return 0;\n\t\treturn __image.getPixel (x, y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns an ARGB color value that contains alpha channel data and RGB data.\n\t * This method is similar to the <code>getPixel()</code> method, which\n\t * returns an RGB color without alpha channel data.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t * \n\t * @param x The <i>x</i> position of the pixel.\n\t * @param y The <i>y</i> position of the pixel.\n\t * @return A number representing an ARGB pixel value. If the(<i>x</i>,\n\t *         <i>y</i>) coordinates are outside the bounds of the image, 0 is\n\t *         returned.\n\t */\n\tpublic function getPixel32 (x:Int, y:Int):Int {\n\t\t\n\t\tif (!__isValid) return 0;\n\t\treturn __image.getPixel32 (x, y);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Generates a byte array from a rectangular region of pixel data. Writes an\n\t * unsigned integer(a 32-bit unmultiplied pixel value) for each pixel into\n\t * the byte array.\n\t * \n\t * @param rect A rectangular area in the current BitmapData object.\n\t * @return A ByteArray representing the pixels in the given Rectangle.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic function getPixels (rect:Rectangle):ByteArray {\n\t\t\n\t\tif (!__isValid) return null;\n\t\tif (rect == null) rect = this.rect;\n\t\treturn __image.getPixels (rect.__toLimeRectangle ());\n\t\t\n\t}\n\t\n\t\n\tpublic function getTexture (gl:GLRenderContext):GLTexture {\n\t\t\n\t\tif (__texture == null) {\n\t\t\t\n\t\t\t__texture = gl.createTexture ();\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t__image.dirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__image.dirty) {\n\t\t\t\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\n\t\t\tvar textureImage = __image.clone ();\n\t\t\ttextureImage.premultiplied = true;\n\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, textureImage.data);\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, null);\n\t\t\t__image.dirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __texture;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Generates a vector array from a rectangular region of pixel data. Returns\n\t * a Vector object of unsigned integers(a 32-bit unmultiplied pixel value)\n\t * for the specified rectangle.\n\t * \n\t * @param rect A rectangular area in the current BitmapData object.\n\t * @return A Vector representing the given Rectangle.\n\t * @throws TypeError The rect is null.\n\t */\n\tpublic function getVector (rect:Rectangle) {\n\t\t\n\t\tvar pixels = getPixels (rect);\n\t\tvar length = Std.int (pixels.length / 4);\n\t\tvar result = new Vector<UInt> (length, true);\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tresult[i] = pixels.readUnsignedInt ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function histogram (hRect:Rectangle = null) {\n\t\t\n\t\tvar rect = hRect != null ? hRect : new Rectangle (0, 0, width, height);\n\t\tvar pixels = getPixels (rect);\n\t\tvar result = [for (i in 0...4) [for (j in 0...256) 0]];\n\t\t\n\t\tfor (i in 0...pixels.length) {\n\t\t\t\n\t\t\t++result[i % 4][pixels.readUnsignedByte ()];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function hitTest (firstPoint:Point, firstAlphaThreshold:Int, secondObject:Dynamic, secondBitmapDataPoint:Point = null, secondAlphaThreshold:Int = 1):Bool {\n\t\t\n\t\tif (!__isValid) return false;\n\t\t\n\t\topenfl.Lib.notImplemented (\"BitmapData.hitTest\");\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Locks an image so that any objects that reference the BitmapData object,\n\t * such as Bitmap objects, are not updated when this BitmapData object\n\t * changes. To improve performance, use this method along with the\n\t * <code>unlock()</code> method before and after numerous calls to the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method.\n\t * \n\t */\n\tpublic function lock ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function merge (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:UInt, greenMultiplier:UInt, blueMultiplier:UInt, alphaMultiplier:UInt):Void {\n\t\t\n\t\tif (!__isValid || sourceBitmapData == null || !sourceBitmapData.__isValid || sourceRect == null || destPoint == null) return;\n\t\t__image.merge (sourceBitmapData.__image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Fills an image with pixels representing random noise.\n\t * \n\t * @param randomSeed     The random seed number to use. If you keep all other\n\t *                       parameters the same, you can generate different\n\t *                       pseudo-random results by varying the random seed\n\t *                       value. The noise function is a mapping function, not\n\t *                       a true random-number generation function, so it\n\t *                       creates the same results each time from the same\n\t *                       random seed.\n\t * @param low            The lowest value to generate for each channel(0 to\n\t *                       255).\n\t * @param high           The highest value to generate for each channel(0 to\n\t *                       255).\n\t * @param channelOptions A number that can be a combination of any of the\n\t *                       four color channel values\n\t *                      (<code>BitmapDataChannel.RED</code>,\n\t *                       <code>BitmapDataChannel.BLUE</code>,\n\t *                       <code>BitmapDataChannel.GREEN</code>, and\n\t *                       <code>BitmapDataChannel.ALPHA</code>). You can use\n\t *                       the logical OR operator(<code>|</code>) to combine\n\t *                       channel values.\n\t * @param grayScale      A Boolean value. If the value is <code>true</code>,\n\t *                       a grayscale image is created by setting all of the\n\t *                       color channels to the same value. The alpha channel\n\t *                       selection is not affected by setting this parameter\n\t *                       to <code>true</code>.\n\t */\n\tpublic function noise (randomSeed:Int, low:Int = 0, high:Int = 255, channelOptions:Int = 7, grayScale:Bool = false):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t\n\t\topenfl.Lib.notImplemented (\"BitmapData.noise\");\n\t\t\n\t}\n\t\n\t\n\tpublic function paletteMap (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array<Int> = null, greenArray:Array<Int> = null, blueArray:Array<Int> = null, alphaArray:Array<Int> = null):Void {\n\t\t\n\t\tvar sw:Int = Std.int (sourceRect.width);\n\t\tvar sh:Int = Std.int (sourceRect.height);\n\t\t\n\t\tvar pixels = getPixels (sourceRect);\n\t\tpixels.position = 0;\n\t\t\n\t\tvar pixelValue:Int, r:Int, g:Int, b:Int, a:Int, color:Int, c1:Int, c2:Int, c3:Int, c4:Int;\n\t\t\n\t\tfor (i in 0...(sh * sw)) {\n\t\t\t\n\t\t\tpixelValue = pixels.readUnsignedInt ();\n\t\t\t\n\t\t\tc1 = (alphaArray == null) ? pixelValue & 0xFF000000 : alphaArray[(pixelValue >> 24) & 0xFF];\n\t\t\tc2 = (redArray == null) ? pixelValue & 0x00FF0000 : redArray[(pixelValue >> 16) & 0xFF];\n\t\t\tc3 = (greenArray == null) ? pixelValue & 0x0000FF00 : greenArray[(pixelValue >> 8) & 0xFF];\n\t\t\tc4 = (blueArray == null) ? pixelValue & 0x000000FF : blueArray[(pixelValue) & 0xFF];\n\t\t\t\n\t\t\ta = ((c1 >> 24) & 0xFF) + ((c2 >> 24) & 0xFF) + ((c3 >> 24) & 0xFF) + ((c4 >> 24) & 0xFF);\n\t\t\tif (a > 0xFF) a == 0xFF;\n\t\t\t\n\t\t\tr = ((c1 >> 16) & 0xFF) + ((c2 >> 16) & 0xFF) + ((c3 >> 16) & 0xFF) + ((c4 >> 16) & 0xFF);\n\t\t\tif (r > 0xFF) r == 0xFF;\n\t\t\t\n\t\t\tg = ((c1 >> 8) & 0xFF) + ((c2 >> 8) & 0xFF) + ((c3 >> 8) & 0xFF) + ((c4 >> 8) & 0xFF);\n\t\t\tif (g > 0xFF) g == 0xFF;\n\t\t\t\n\t\t\tb = ((c1) & 0xFF) + ((c2) & 0xFF) + ((c3) & 0xFF) + ((c4) & 0xFF);\n\t\t\tif (b > 0xFF) b == 0xFF;\n\t\t\t\n\t\t\tcolor = a << 24 | r << 16 | g << 8 | b;\n\t\t\t\n\t\t\tpixels.position = i * 4;\n\t\t\tpixels.writeUnsignedInt (color);\n\t\t\t\n\t\t}\n\t\t\n\t\tpixels.position = 0;\n\t\tvar destRect = new Rectangle (destPoint.x, destPoint.y, sw, sh);\n\t\tsetPixels (destRect, pixels);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Generates a Perlin noise image.\n\t *\n\t * <p>The Perlin noise generation algorithm interpolates and combines\n\t * individual random noise functions(called octaves) into a single function\n\t * that generates more natural-seeming random noise. Like musical octaves,\n\t * each octave function is twice the frequency of the one before it. Perlin\n\t * noise has been described as a \"fractal sum of noise\" because it combines\n\t * multiple sets of noise data with different levels of detail.</p>\n\t *\n\t * <p>You can use Perlin noise functions to simulate natural phenomena and\n\t * landscapes, such as wood grain, clouds, and mountain ranges. In most\n\t * cases, the output of a Perlin noise function is not displayed directly but\n\t * is used to enhance other images and give them pseudo-random\n\t * variations.</p>\n\t *\n\t * <p>Simple digital random noise functions often produce images with harsh,\n\t * contrasting points. This kind of harsh contrast is not often found in\n\t * nature. The Perlin noise algorithm blends multiple noise functions that\n\t * operate at different levels of detail. This algorithm results in smaller\n\t * variations among neighboring pixel values.</p>\n\t * \n\t * @param baseX          Frequency to use in the <i>x</i> direction. For\n\t *                       example, to generate a noise that is sized for a 64\n\t *                       x 128 image, pass 64 for the <code>baseX</code>\n\t *                       value.\n\t * @param baseY          Frequency to use in the <i>y</i> direction. For\n\t *                       example, to generate a noise that is sized for a 64\n\t *                       x 128 image, pass 128 for the <code>baseY</code>\n\t *                       value.\n\t * @param numOctaves     Number of octaves or individual noise functions to\n\t *                       combine to create this noise. Larger numbers of\n\t *                       octaves create images with greater detail. Larger\n\t *                       numbers of octaves also require more processing\n\t *                       time.\n\t * @param randomSeed     The random seed number to use. If you keep all other\n\t *                       parameters the same, you can generate different\n\t *                       pseudo-random results by varying the random seed\n\t *                       value. The Perlin noise function is a mapping\n\t *                       function, not a true random-number generation\n\t *                       function, so it creates the same results each time\n\t *                       from the same random seed.\n\t * @param stitch         A Boolean value. If the value is <code>true</code>,\n\t *                       the method attempts to smooth the transition edges\n\t *                       of the image to create seamless textures for tiling\n\t *                       as a bitmap fill.\n\t * @param fractalNoise   A Boolean value. If the value is <code>true</code>,\n\t *                       the method generates fractal noise; otherwise, it\n\t *                       generates turbulence. An image with turbulence has\n\t *                       visible discontinuities in the gradient that can\n\t *                       make it better approximate sharper visual effects\n\t *                       like flames and ocean waves.\n\t * @param channelOptions A number that can be a combination of any of the\n\t *                       four color channel values\n\t *                      (<code>BitmapDataChannel.RED</code>,\n\t *                       <code>BitmapDataChannel.BLUE</code>,\n\t *                       <code>BitmapDataChannel.GREEN</code>, and\n\t *                       <code>BitmapDataChannel.ALPHA</code>). You can use\n\t *                       the logical OR operator(<code>|</code>) to combine\n\t *                       channel values.\n\t * @param grayScale      A Boolean value. If the value is <code>true</code>,\n\t *                       a grayscale image is created by setting each of the\n\t *                       red, green, and blue color channels to identical\n\t *                       values. The alpha channel value is not affected if\n\t *                       this value is set to <code>true</code>.\n\t */\n\tpublic function perlinNoise (baseX:Float, baseY:Float, numOctaves:UInt, randomSeed:Int, stitch:Bool, fractalNoise:Bool, channelOptions:UInt = 7, grayScale:Bool = false, offsets:Array<Point> = null):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"BitmapData.perlinNoise\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Scrolls an image by a certain(<i>x</i>, <i>y</i>) pixel amount. Edge\n\t * regions outside the scrolling area are left unchanged.\n\t * \n\t * @param x The amount by which to scroll horizontally.\n\t * @param y The amount by which to scroll vertically.\n\t */\n\tpublic function scroll (x:Int, y:Int):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"BitmapData.scroll\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets a single pixel of a BitmapData object. The current alpha channel\n\t * value of the image pixel is preserved during this operation. The value of\n\t * the RGB color parameter is treated as an unmultiplied color value.\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapData instance from\n\t * updating until you finish making the pixel changes.</p>\n\t * \n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting RGB color for the pixel.\n\t */\n\tpublic function setPixel (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t__image.setPixel (x, y, color);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Sets the color and alpha transparency values of a single pixel of a\n\t * BitmapData object. This method is similar to the <code>setPixel()</code>\n\t * method; the main difference is that the <code>setPixel32()</code> method\n\t * takes an ARGB color value that contains alpha channel information.\n\t *\n\t * <p>All pixels in a BitmapData object are stored as premultiplied color\n\t * values. A premultiplied image pixel has the red, green, and blue color\n\t * channel values already multiplied by the alpha data. For example, if the\n\t * alpha value is 0, the values for the RGB channels are also 0, independent\n\t * of their unmultiplied values. This loss of data can cause some problems\n\t * when you perform operations. All BitmapData methods take and return\n\t * unmultiplied values. The internal pixel representation is converted from\n\t * premultiplied to unmultiplied before it is returned as a value. During a\n\t * set operation, the pixel value is premultiplied before the raw image pixel\n\t * is set.</p>\n\t *\n\t * <p><b>Note:</b> To increase performance, when you use the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,\n\t * call the <code>lock()</code> method before you call the\n\t * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call\n\t * the <code>unlock()</code> method when you have made all pixel changes.\n\t * This process prevents objects that reference this BitmapData instance from\n\t * updating until you finish making the pixel changes.</p>\n\t * \n\t * @param x     The <i>x</i> position of the pixel whose value changes.\n\t * @param y     The <i>y</i> position of the pixel whose value changes.\n\t * @param color The resulting ARGB color for the pixel. If the bitmap is\n\t *              opaque(not transparent), the alpha transparency portion of\n\t *              this color value is ignored.\n\t */\n\tpublic function setPixel32 (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t__image.setPixel32 (x, y, color);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Converts a byte array into a rectangular region of pixel data. For each\n\t * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and\n\t * the return value is written into the pixel. If the byte array ends before\n\t * the full rectangle is written, the function returns. The data in the byte\n\t * array is expected to be 32-bit ARGB pixel values. No seeking is performed\n\t * on the byte array before or after the pixels are read.\n\t * \n\t * @param rect           Specifies the rectangular region of the BitmapData\n\t *                       object.\n\t * @param inputByteArray A ByteArray object that consists of 32-bit\n\t *                       unmultiplied pixel values to be used in the\n\t *                       rectangular region.\n\t * @throws EOFError  The <code>inputByteArray</code> object does not include\n\t *                   enough data to fill the area of the <code>rect</code>\n\t *                   rectangle. The method fills as many pixels as possible\n\t *                   before throwing the exception.\n\t * @throws TypeError The rect or inputByteArray are null.\n\t */\n\tpublic function setPixels (rect:Rectangle, byteArray:ByteArray):Void {\n\t\t\n\t\tif (!__isValid || rect == null) return;\n\t\t__image.setPixels (rect.__toLimeRectangle (), byteArray);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Converts a Vector into a rectangular region of pixel data. For each pixel,\n\t * a Vector element is read and written into the BitmapData pixel. The data\n\t * in the Vector is expected to be 32-bit ARGB pixel values.\n\t * \n\t * @param rect Specifies the rectangular region of the BitmapData object.\n\t * @throws RangeError The vector array is not large enough to read all the\n\t *                    pixel data.\n\t */\n\tpublic function setVector (rect:Rectangle, inputVector:Vector<UInt>) {\n\t\t\n\t\tvar byteArray = new ByteArray ();\n\t\t#if js\n\t\tbyteArray.length = inputVector.length * 4;\n\t\t#end\n\t\t\n\t\tfor (color in inputVector) {\n\t\t\t\n\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\n\t\t}\n\t\t\n\t\tbyteArray.position = 0;\n\t\tsetPixels (rect, byteArray);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Tests pixel values in an image against a specified threshold and sets\n\t * pixels that pass the test to new color values. Using the\n\t * <code>threshold()</code> method, you can isolate and replace color ranges\n\t * in an image and perform other logical operations on image pixels.\n\t *\n\t * <p>The <code>threshold()</code> method's test logic is as follows:</p>\n\t *\n\t * <ol>\n\t *   <li>If <code>((pixelValue & mask) operation(threshold & mask))</code>,\n\t * then set the pixel to <code>color</code>;</li>\n\t *   <li>Otherwise, if <code>copySource == true</code>, then set the pixel to\n\t * corresponding pixel value from <code>sourceBitmap</code>.</li>\n\t * </ol>\n\t *\n\t * <p>The <code>operation</code> parameter specifies the comparison operator\n\t * to use for the threshold test. For example, by using \"==\" as the\n\t * <code>operation</code> parameter, you can isolate a specific color value\n\t * in an image. Or by using <code>{operation: \"<\", mask: 0xFF000000,\n\t * threshold: 0x7F000000, color: 0x00000000}</code>, you can set all\n\t * destination pixels to be fully transparent when the source image pixel's\n\t * alpha is less than 0x7F. You can use this technique for animated\n\t * transitions and other effects.</p>\n\t * \n\t * @param sourceBitmapData The input bitmap image to use. The source image\n\t *                         can be a different BitmapData object or it can\n\t *                         refer to the current BitmapData instance.\n\t * @param sourceRect       A rectangle that defines the area of the source\n\t *                         image to use as input.\n\t * @param destPoint        The point within the destination image(the\n\t *                         current BitmapData instance) that corresponds to\n\t *                         the upper-left corner of the source rectangle.\n\t * @param operation        One of the following comparison operators, passed\n\t *                         as a String: \"<\", \"<=\", \">\", \">=\", \"==\", \"!=\"\n\t * @param threshold        The value that each pixel is tested against to see\n\t *                         if it meets or exceeds the threshhold.\n\t * @param color            The color value that a pixel is set to if the\n\t *                         threshold test succeeds. The default value is\n\t *                         0x00000000.\n\t * @param mask             The mask to use to isolate a color component.\n\t * @param copySource       If the value is <code>true</code>, pixel values\n\t *                         from the source image are copied to the\n\t *                         destination when the threshold test fails. If the\n\t *                         value is <code>false</code>, the source image is\n\t *                         not copied when the threshold test fails.\n\t * @return The number of pixels that were changed.\n\t * @throws ArgumentError The operation string is not a valid operation\n\t * @throws TypeError     The sourceBitmapData, sourceRect destPoint or\n\t *                       operation are null.\n\t */\n\tpublic function threshold (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false):Int {\n\t\t\n\t\tif (sourceBitmapData == this && sourceRect.equals(rect) && destPoint.x == 0 && destPoint.y == 0) {\n\t\t\t\n\t\t\tvar hits = 0;\n\t\t\t\n\t\t\tthreshold = __flipPixel (threshold);\n\t\t\tcolor = __flipPixel (color);\n\t\t\t\n\t\t\tvar memory = new ByteArray ();\n\t\t\t#if js\n\t\t\tmemory.length  = width * height * 4;\n\t\t\t#end\n\t\t\tmemory = getPixels (rect);\n\t\t\tmemory.position = 0;\n\t\t\tMemory.select (memory);\n\t\t\t\n\t\t\tvar thresholdMask:Int = cast threshold & mask;\n\t\t\t\n\t\t\tvar width_yy:Int, position:Int, pixelMask:Int, pixelValue, i, test;\n\t\t\t\n\t\t\tfor (yy in 0...height) {\n\t\t\t\t\n\t\t\t\twidth_yy = width * yy;\n\t\t\t\t\n\t\t\t\tfor (xx in 0...width) {\n\t\t\t\t\t\n\t\t\t\t\tposition = (width_yy + xx) * 4;\n\t\t\t\t\tpixelValue = Memory.getI32 (position);\n\t\t\t\t\tpixelMask = cast pixelValue & mask;\n\t\t\t\t\t\n\t\t\t\t\ti = __ucompare (pixelMask, thresholdMask);\n\t\t\t\t\ttest = false;\n\t\t\t\t\t\n\t\t\t\t\tif (operation == \"==\") { test = (i == 0); }\n\t\t\t\t\telse if (operation == \"<\") { test = (i == -1);}\n\t\t\t\t\telse if (operation == \">\") { test = (i == 1); }\n\t\t\t\t\telse if (operation == \"!=\") { test = (i != 0); }\n\t\t\t\t\telse if (operation == \"<=\") { test = (i == 0 || i == -1); }\n\t\t\t\t\telse if (operation == \">=\") { test = (i == 0 || i == 1); }\n\t\t\t\t\t\n\t\t\t\t\tif (test) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tMemory.setI32 (position, color);\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tmemory.position = 0;\n\t\t\tsetPixels (rect, memory);\n\t\t\tMemory.select (null);\n\t\t\treturn hits;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar sx = Std.int (sourceRect.x);\n\t\t\tvar sy = Std.int (sourceRect.y);\n\t\t\tvar sw = Std.int (sourceBitmapData.width);\n\t\t\tvar sh = Std.int (sourceBitmapData.height);\n\t\t\t\n\t\t\tvar dx = Std.int (destPoint.x);\n\t\t\tvar dy = Std.int (destPoint.y);\n\t\t\t\n\t\t\tvar bw:Int = width - sw - dx;\n\t\t\tvar bh:Int = height - sh - dy;\n\t\t\t\n\t\t\tvar dw:Int = (bw < 0) ? sw + (width - sw - dx) : sw;\n\t\t\tvar dh:Int = (bw < 0) ? sh + (height - sh - dy) : sh;\n\t\t\t\n\t\t\tvar hits = 0;\n\t\t\t\n\t\t\tthreshold = __flipPixel (threshold);\n\t\t\tcolor = __flipPixel (color);\n\t\t\t\n\t\t\tvar canvasMemory = (sw * sh) * 4;\n\t\t\tvar sourceMemory = 0;\n\t\t\t\n\t\t\tif (copySource) {\n\t\t\t\t\n\t\t\t\tsourceMemory = (sw * sh) * 4;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar totalMemory = (canvasMemory + sourceMemory);\n\t\t\tvar memory = new ByteArray ();\n\t\t\t#if js\n\t\t\tmemory.length = totalMemory;\n\t\t\t#end\n\t\t\tmemory.position = 0;\n\t\t\tvar bitmapData = sourceBitmapData.clone ();\n\t\t\tvar pixels = bitmapData.getPixels (sourceRect);\n\t\t\tmemory.writeBytes (pixels);\n\t\t\tmemory.position = canvasMemory;\n\t\t\t\n\t\t\tif (copySource) {\n\t\t\t\t\n\t\t\t\tmemory.writeBytes (pixels);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tmemory.position = 0;\n\t\t\tMemory.select (memory);\n\t\t\t\n\t\t\tvar thresholdMask:Int = cast threshold & mask;\n\t\t\t\n\t\t\tvar position:Int, pixelMask:Int, pixelValue, i, test;\n\t\t\t\n\t\t\tfor (yy in 0...dh) {\n\t\t\t\t\n\t\t\t\tfor (xx in 0...dw) {\n\t\t\t\t\t\n\t\t\t\t\tposition = ((xx + sx) + (yy + sy) * sw) * 4;\n\t\t\t\t\tpixelValue = Memory.getI32 (position);\n\t\t\t\t\tpixelMask = cast pixelValue & mask;\n\t\t\t\t\t\n\t\t\t\t\ti = __ucompare (pixelMask, thresholdMask);\n\t\t\t\t\ttest = false;\n\t\t\t\t\t\n\t\t\t\t\tif (operation == \"==\") { test = (i == 0); }\n\t\t\t\t\telse if (operation == \"<\") { test = (i == -1);}\n\t\t\t\t\telse if (operation == \">\") { test = (i == 1); }\n\t\t\t\t\telse if (operation == \"!=\") { test = (i != 0); }\n\t\t\t\t\telse if (operation == \"<=\") { test = (i == 0 || i == -1); }\n\t\t\t\t\telse if (operation == \">=\") { test = (i == 0 || i == 1); }\n\t\t\t\t\t\n\t\t\t\t\tif (test) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tMemory.setI32 (position, color);\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (copySource) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tMemory.setI32 (position, Memory.getI32 (canvasMemory + position));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tmemory.position = 0;\t\n\t\t\tbitmapData.setPixels (sourceRect, memory);\n\t\t\tcopyPixels (bitmapData, bitmapData.rect, destPoint);\n\t\t\tMemory.select (null);\n\t\t\treturn hits;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Unlocks an image so that any objects that reference the BitmapData object,\n\t * such as Bitmap objects, are updated when this BitmapData object changes.\n\t * To improve performance, use this method along with the <code>lock()</code>\n\t * method before and after numerous calls to the <code>setPixel()</code> or\n\t * <code>setPixel32()</code> method.\n\t * \n\t * @param changeRect The area of the BitmapData object that has changed. If\n\t *                   you do not specify a value for this parameter, the\n\t *                   entire area of the BitmapData object is considered\n\t *                   changed.\n\t */\n\tpublic function unlock (changeRect:Rectangle = null):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __createUVs ():Void {\n\t\t\n\t\tif (__uvData == null) __uvData = new TextureUvs();\n\t\t\n\t\t__uvData.x0 = 0;\n\t\t__uvData.y0 = 0;\n\t\t__uvData.x1 = 1;\n\t\t__uvData.y1 = 0;\n\t\t__uvData.x2 = 1;\n\t\t__uvData.y2 = 1;\n\t\t__uvData.x3 = 0;\n\t\t__uvData.y3 = 1;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static inline function __flipPixel (pixel:Int):Int {\n\t\t\n\t\treturn (pixel & 0xFF) << 24 | (pixel >>  8 & 0xFF) << 16 | (pixel >> 16 & 0xFF) <<  8 | (pixel >> 24 & 0xFF);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __loadFromBase64 (base64:String, type:String, ?onload:BitmapData -> Void):Void {\n\t\t\n\t\tImage.fromBase64 (base64, type, function (image) {\n\t\t\t\n\t\t\t__loadFromImage (image);\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function __loadFromBytes (bytes:ByteArray, rawAlpha:ByteArray = null, ?onload:BitmapData -> Void):Void {\n\t\t\n\t\tImage.fromBytes (bytes, function (image) {\n\t\t\t\n\t\t\t__loadFromImage (image);\n\t\t\t\n\t\t\tif (rawAlpha != null) {\n\t\t\t\t\n\t\t\t\t#if js\n\t\t\t\tImageCanvasUtil.convertToCanvas (__image);\n\t\t\t\tImageCanvasUtil.createImageData (__image);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tvar data = __image.buffer.data;\n\t\t\t\t\n\t\t\t\tfor (i in 0...rawAlpha.length) {\n\t\t\t\t\t\n\t\t\t\t\tdata[i * 4 + 3] = rawAlpha.readUnsignedByte ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__image.dirty = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __loadFromFile (path:String, onload:BitmapData -> Void, onerror:Void -> Void):Void {\n\t\t\n\t\tImage.fromFile (path, function (image) {\n\t\t\t\n\t\t\t__loadFromImage (image);\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}, onerror);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __loadFromImage (image:Image):Void {\n\t\t\n\t\t__image = image;\n\t\t\n\t\twidth = image.width;\n\t\theight = image.height;\n\t\trect = new Rectangle (0, 0, image.width, image.height);\n\t\t__isValid = true;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\t#if js\n\t\tif (!__isValid) return;\n\t\t\n\t\tImageCanvasUtil.sync (__image);\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\n\t\t\n\t\tcontext.globalAlpha = 1;\n\t\tvar transform = __worldTransform;\n\t\t\n\t\tif (renderSession.roundPixels) {\n\t\t\t\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.drawImage (__image.buffer.src, 0, 0);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __renderMask (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __sync ():Void {\n\t\t\n\t\t#if js\n\t\tImageCanvasUtil.sync (__image);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __ucompare (n1:Int, n2:Int) : Int {\n\t\t\n\t\tvar tmp1 : Int;\n\t\tvar tmp2 : Int;\n\t\t\n\t\ttmp1 = (n1 >> 24) & 0x000000FF;\n\t\ttmp2 = (n2 >> 24) & 0x000000FF;\n\t\t\n\t\tif (tmp1 != tmp2) {\n\t\t\t\n\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttmp1 = (n1 >> 16) & 0x000000FF;\n\t\t\ttmp2 = (n2 >> 16) & 0x000000FF;\n\t\t\t\n\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\n\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttmp1 = (n1 >> 8) & 0x000000FF;\n\t\t\t\ttmp2 = (n2 >> 8) & 0x000000FF;\n\t\t\t\t\n\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\n\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttmp1 = n1 & 0x000000FF;\n\t\t\t\t\ttmp2 = n2 & 0x000000FF;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:noCompletion @:dox(hide) class TextureUvs {\n\t\n\t\n\tpublic var x0:Float = 0;\n\tpublic var x1:Float = 0;\n\tpublic var x2:Float = 0;\n\tpublic var x3:Float = 0;\n\tpublic var y0:Float = 0;\n\tpublic var y1:Float = 0;\n\tpublic var y2:Float = 0;\n\tpublic var y3:Float = 0;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef BitmapData = openfl._v2.display.BitmapData;\n#end\n#else\ntypedef BitmapData = flash.display.BitmapData;\n#end\n","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport openfl._internal.renderer.opengl.utils.FilterTexture;\nimport openfl.errors.ArgumentError;\nimport openfl._internal.renderer.opengl.utils.GraphicsRenderer;\nimport openfl._internal.renderer.opengl.utils.DrawPath;\nimport openfl.display.GraphicsPathCommand;\nimport openfl.display.Tilesheet;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.Vector;\n\n#if js\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\n#end\n\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics {\n\t\n\t\n\tpublic static inline var TILE_SCALE = 0x0001;\n\tpublic static inline var TILE_ROTATION = 0x0002;\n\tpublic static inline var TILE_RGB = 0x0004;\n\tpublic static inline var TILE_ALPHA = 0x0008;\n\tpublic static inline var TILE_TRANS_2x2 = 0x0010;\n\tpublic static inline var TILE_RECT = 0x0020;\n\tpublic static inline var TILE_ORIGIN = 0x0040;\n\tpublic static inline var TILE_BLEND_NORMAL = 0x00000000;\n\tpublic static inline var TILE_BLEND_ADD = 0x00010000;\n\t\n\t@:noCompletion private var __bounds:Rectangle;\n\t@:noCompletion private var __commands:Array<DrawCommand> = [];\n\t@:noCompletion private var __dirty:Bool = true;\n\t@:noCompletion private var __glStack:Array<GLStack> = [];\n\t@:noCompletion private var __drawPaths:Array<DrawPath>;\n\t@:noCompletion private var __halfStrokeWidth:Float;\n\t@:noCompletion private var __positionX:Float;\n\t@:noCompletion private var __positionY:Float;\n\t@:noCompletion private var __transformDirty:Bool;\n\t@:noCompletion private var __visible:Bool = true;\n\t@:noCompletion private var __cachedTexture:FilterTexture;\n\t\n\t#if js\n\t@:noCompletion private var __canvas:CanvasElement;\n\t@:noCompletion private var __context:CanvasRenderingContext2D;\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t__commands = new Array ();\n\t\t__halfStrokeWidth = 0;\n\t\t__positionX = 0;\n\t\t__positionY = 0;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t * \n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the openfl.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic function beginBitmapFill (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {\n\t\t\n\t\t__commands.push (BeginBitmapFill (bitmap, matrix != null ? matrix.clone () : null, repeat, smooth));\n\t\t\n\t\t__visible = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t * \n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic function beginFill (color:Int = 0, alpha:Float = 1):Void {\n\t\t\n\t\t__commands.push (BeginFill (color & 0xFFFFFF, alpha));\n\t\t\n\t\tif (alpha > 0) __visible = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t * \n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            openfl.geom.Matrix class. The openfl.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic function beginGradientFill (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:Null<SpreadMethod> = null, interpolationMethod:Null<InterpolationMethod> = null, focalPointRatio:Null<Float> = null):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"Graphics.beginGradientFill\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t * \n\t */\n\tpublic function clear ():Void {\n\t\t\n\t\t__commands = new Array ();\n\t\t__halfStrokeWidth = 0;\n\t\t\n\t\tif (__bounds != null) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__transformDirty = true;\n\t\t\t__bounds = null;\n\t\t\t\n\t\t}\n\t\t\n\t\t__visible = false;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceGraphics:Graphics):Void {\n\t\t\n\t\t__bounds = sourceGraphics.__bounds.clone ();\n\t\t__commands = sourceGraphics.__commands.copy ();\n\t\t__dirty = true;\n\t\t__halfStrokeWidth = sourceGraphics.__halfStrokeWidth;\n\t\t__positionX = sourceGraphics.__positionX;\n\t\t__positionY = sourceGraphics.__positionY;\n\t\t__transformDirty = true;\n\t\t__visible = sourceGraphics.__visible;\n\t\t\n\t}\n\t\n\t\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t// TODO: Is this the right calculation for bounds?\n\t\t\n\t\t__inflateBounds (controlX1, controlY1);\n\t\t__inflateBounds (controlX2, controlY2);\n\t\t\n\t\t__positionX = anchorX;\n\t\t__positionY = anchorY;\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (CubicCurveTo (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t * \n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float) {\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t// TODO: Be a little less lenient in canvas size?\n\t\t\n\t\t__inflateBounds (controlX, controlY);\n\t\t\n\t\t__positionX = anchorX;\n\t\t__positionY = anchorY;\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (CurveTo (controlX, controlY, anchorX, anchorY));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t * \n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic function drawCircle (x:Float, y:Float, radius:Float):Void {\n\t\t\n\t\tif (radius <= 0) return;\n\t\t\n\t\t__inflateBounds (x - radius - __halfStrokeWidth, y - radius - __halfStrokeWidth);\n\t\t__inflateBounds (x + radius + __halfStrokeWidth, y + radius + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (DrawCircle (x, y, radius));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t * \n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __halfStrokeWidth, y - __halfStrokeWidth);\n\t\t__inflateBounds (x + width + __halfStrokeWidth, y + height + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (DrawEllipse (x, y, width, height));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t * \n\t */\n\tpublic function drawGraphicsData (graphicsData:Vector<IGraphicsData>):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"Graphics.drawGraphicsData\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t * \n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic function drawPath (commands:Vector<Int>, data:Vector<Float>, winding:GraphicsPathWinding = null):Void {\n\t\t\n\t\tvar dataIndex = 0;\n\t\t\n\t\tfor (command in commands) {\n\t\t\t\n\t\t\tswitch (command) {\n\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tmoveTo (data[dataIndex], data[dataIndex + 1]);\t\n\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tlineTo (data[dataIndex], data[dataIndex + 1]);\n\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tcurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3]);\n\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tcubicCurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3], data[dataIndex + 4], data[dataIndex + 5]);\n\t\t\t\t\tdataIndex += 6;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t * \n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic function drawRect (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __halfStrokeWidth, y - __halfStrokeWidth);\n\t\t__inflateBounds (x + width + __halfStrokeWidth, y + height + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (DrawRect (x, y, width, height));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t * \n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic function drawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float = -1):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __halfStrokeWidth, y - __halfStrokeWidth);\n\t\t__inflateBounds (x + width + __halfStrokeWidth, y + height + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (DrawRoundRect (x, y, width, height, rx, ry));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawRoundRectComplex (x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"Graphics.drawRoundRectComplex\");\n\t\t\n\t}\n\t\n\t\n\tpublic function drawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {\n\t\t\n\t\t// Checking each tile for extents did not include rotation or scale, and could overflow the maximum canvas\n\t\t// size of some mobile browsers. Always use the full stage size for drawTiles instead?\n\t\t\n\t\t__inflateBounds (0, 0);\n\t\t__inflateBounds (Lib.current.stage.stageWidth, Lib.current.stage.stageHeight);\n\t\t\n\t\t__commands.push (DrawTiles (sheet, tileData, smooth, flags, count));\n\t\t\n\t\t__dirty = true;\n\t\t__visible = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t * \n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic function drawTriangles (vertices:Vector<Float>, ?indices:Vector<Int> = null, ?uvtData:Vector<Float> = null, ?culling:TriangleCulling = null, ?colors:Vector<Int>, blendMode:Int = 0):Void {\n\t\t\n\t\tvar vlen = Std.int(vertices.length / 2);\n\t\t\n\t\tif (culling == null) {\n\t\t\tculling = NONE;\n\t\t}\n\t\t\n\t\tif (indices == null) {\n\t\t\tif (vlen % 3 != 0) {\n\t\t\t\tthrow new ArgumentError(\"Not enough vertices to close a triangle.\");\n\t\t\t}\n\t\t\tindices = new Vector<Int>();\n\t\t\t\n\t\t\tfor (i in 0...vlen) {\n\t\t\t\tindices.push(i);\n\t\t\t}\n\t\t}\n\t\t\n\t\t__inflateBounds (0, 0);\n\t\t\n\t\tvar tmpx = Math.NEGATIVE_INFINITY;\n\t\tvar tmpy = Math.NEGATIVE_INFINITY;\n\t\tvar maxX = Math.NEGATIVE_INFINITY;\n\t\tvar maxY = Math.NEGATIVE_INFINITY;\t\t\n\t\t\n\t\tfor (i in 0...vlen) {\n\t\t\ttmpx = vertices[i * 2];\n\t\t\ttmpy = vertices[i * 2 + 1];\n\t\t\tif (maxX < tmpx) maxX = tmpx;\n\t\t\tif (maxY < tmpy) maxY = tmpy;\n\t\t}\n\t\t\n\t\t__inflateBounds (maxX, maxY);\n\t\t__commands.push (DrawTriangles(vertices, indices, uvtData, culling, colors, blendMode));\n\t\t__dirty = true;\n\t\t__visible = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t * \n\t */\n\tpublic function endFill ():Void {\n\t\t\n\t\t__commands.push (EndFill);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t * \n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               openfl.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"Graphics.lineBitmapStyle\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t * \n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            openfl.geom.Matrix class. The openfl.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic function lineGradientStyle (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Null<Float> = null):Void {\n\t\t\n\t\topenfl.Lib.notImplemented (\"Graphics.lineGradientStyle\");\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t * \n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic function lineStyle (thickness:Null<Float> = null, color:Null<Int> = null, alpha:Null<Float> = null, pixelHinting:Null<Bool> = null, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Null<Float> = null):Void {\n\t\t\n\t\t__halfStrokeWidth = (thickness != null) ? thickness / 2 : 0;\n\t\t__commands.push (LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit));\n\t\t\n\t\tif (thickness != null) __visible = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t * \n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\t// TODO: Should we consider the origin instead, instead of inflating in all directions?\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t__positionX = x;\n\t\t__positionY = y;\n\t\t\n\t\t__inflateBounds (__positionX - __halfStrokeWidth, __positionY - __halfStrokeWidth);\n\t\t__inflateBounds (__positionX + __halfStrokeWidth, __positionY + __halfStrokeWidth);\n\t\t\n\t\t__commands.push (LineTo (x, y));\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t * \n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\t__positionX = x;\n\t\t__positionY = y;\n\t\t\n\t\t__commands.push (MoveTo (x, y));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__bounds == null) return;\n\t\t\n\t\tvar bounds = __bounds.clone ().transform (matrix);\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __hitTest (x:Float, y:Float, shapeFlag:Bool, matrix:Matrix):Bool {\n\t\t\n\t\t//TODO: Shape flag\n\t\t\n\t\tif (__bounds == null) return false;\n\t\t\n\t\tvar bounds = __bounds.clone ().transform (matrix);\n\t\treturn (x > bounds.x && y > bounds.y && x <= bounds.right && y <= bounds.bottom);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __inflateBounds (x:Float, y:Float):Void {\n\t\t\n\t\tif (__bounds == null) {\n\t\t\t\n\t\t\t__bounds = new Rectangle (x, y, 0, 0);\n\t\t\t__transformDirty = true;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (x < __bounds.x) {\n\t\t\t\n\t\t\t__bounds.width += __bounds.x - x;\n\t\t\t__bounds.x = x;\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (y < __bounds.y) {\n\t\t\t\n\t\t\t__bounds.height += __bounds.y - y;\n\t\t\t__bounds.y = y;\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (x > __bounds.x + __bounds.width) {\n\t\t\t\n\t\t\t__bounds.width = x - __bounds.x;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (y > __bounds.y + __bounds.height) {\n\t\t\t\n\t\t\t__bounds.height = y - __bounds.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:noCompletion @:dox(hide) enum DrawCommand {\n\t\n\tBeginBitmapFill (bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool);\n\tBeginFill (color:Int, alpha:Float);\n\tCubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float);\n\tCurveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float);\n\tDrawCircle (x:Float, y:Float, radius:Float);\n\tDrawEllipse (x:Float, y:Float, width:Float, height:Float);\n\tDrawRect (x:Float, y:Float, width:Float, height:Float);\n\tDrawRoundRect (x:Float, y:Float, width:Float, height:Float, rx:Float, ry:Float);\n\tDrawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool, flags:Int, count:Int);\n\tDrawTriangles (vertices:Vector<Float>, indices:Vector<Int>, uvtData:Vector<Float>, culling:TriangleCulling, colors:Vector<Int>, blendMode:Int);\n\tEndFill;\n\tLineStyle (thickness:Null<Float>, color:Null<Int>, alpha:Null<Float>, pixelHinting:Null<Bool>, scaleMode:LineScaleMode, caps:CapsStyle, joints:JointStyle, miterLimit:Null<Float>);\n\tLineTo (x:Float, y:Float);\n\tMoveTo (x:Float, y:Float);\n\t\n}\n\n\n#else\ntypedef Graphics = openfl._v2.display.Graphics;\n#end\n#else\n\n\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n@:access(openfl.display.Tilesheet)\n\n@:forward(beginBitmapFill, beginFill, beginGradientFill, beginShaderFill, clear, copyFrom, cubicCurveTo, curveTo, drawCircle, drawEllipse, drawGraphicsData, drawPath, drawRect, drawRoundRect, drawRoundRectComplex, drawTriangles, endFill, lineBitmapStyle, lineGradientStyle, lineShaderStyle, lineStyle, lineTo, moveTo, recurse)\n\n\nabstract Graphics(flash.display.Graphics) from flash.display.Graphics to flash.display.Graphics {\n\t\n\t\n\tpublic function drawTiles (sheet:Tilesheet, tileData:Array<Float>, smooth:Bool = false, flags:Int = 0, count:Int = -1):Void {\n\t\t\n\t\tvar useScale = (flags & Tilesheet.TILE_SCALE) > 0;\n\t\tvar useRotation = (flags & Tilesheet.TILE_ROTATION) > 0;\n\t\tvar useRGB = (flags & Tilesheet.TILE_RGB) > 0;\n\t\tvar useAlpha = (flags & Tilesheet.TILE_ALPHA) > 0;\n\t\tvar useTransform = (flags & Tilesheet.TILE_TRANS_2x2) > 0;\n\t\tvar useRect = (flags & Tilesheet.TILE_RECT) > 0;\n\t\tvar useOrigin = (flags & Tilesheet.TILE_ORIGIN) > 0;\n\t\t\n\t\tvar tile:Rectangle = null;\n\t\tvar tileUV:Rectangle = null;\n\t\tvar tilePoint:Point = null;\n\t\t\n\t\tvar numValues = 3;\n\t\tvar totalCount = count;\n\t\tvar itemCount;\n\t\tif (count < 0) {\n\t\t\t\n\t\t\ttotalCount = tileData.length;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (useTransform || useScale || useRotation || useRGB || useAlpha) {\n\t\t\t\n\t\t\tvar scaleIndex = 0;\n\t\t\tvar rotationIndex = 0;\n\t\t\tvar rgbIndex = 0;\n\t\t\tvar alphaIndex = 0;\n\t\t\tvar transformIndex = 0;\n\t\t\t\n\t\t\tif (useRect) { numValues = useOrigin ? 8 : 6; }\n\t\t\tif (useScale) { scaleIndex = numValues; numValues ++; }\n\t\t\tif (useRotation) { rotationIndex = numValues; numValues ++; }\n\t\t\tif (useTransform) { transformIndex = numValues; numValues += 4; }\n\t\t\tif (useRGB) { rgbIndex = numValues; numValues += 3; }\n\t\t\tif (useAlpha) { alphaIndex = numValues; numValues ++; }\n\t\t\t\n\t\t\titemCount = Std.int (totalCount / numValues);\n\t\t\tvar ids = sheet.adjustIDs (sheet.__ids, itemCount);\n\t\t\tvar vertices = sheet.adjustLen (sheet.__vertices, itemCount * 8); \n\t\t\tvar indices = sheet.adjustIndices (sheet.__indices, itemCount * 6); \n\t\t\tvar uvtData = sheet.adjustLen (sheet.__uvs, itemCount * 8); \n\t\t\t\n\t\t\tvar index = 0;\n\t\t\tvar offset8 = 0;\n\t\t\tvar tileIndex:Int = 0;\n\t\t\tvar tileID:Int = 0;\n\t\t\tvar cacheID:Int = -1;\n\t\t\t\n\t\t\twhile (index < totalCount) {\n\t\t\t\t\n\t\t\t\tvar x = tileData[index];\n\t\t\t\tvar y = tileData[index + 1];\n\t\t\t\tvar tileID = (!useRect) ? Std.int(tileData[index + 2]) : -1;\n\t\t\t\tvar scale = 1.0;\n\t\t\t\tvar rotation = 0.0;\n\t\t\t\tvar alpha = 1.0;\n\t\t\t\t\n\t\t\t\tif (useScale) {\n\t\t\t\t\t\n\t\t\t\t\tscale = tileData[index + scaleIndex];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useRotation) {\n\t\t\t\t\t\n\t\t\t\t\trotation = tileData[index + rotationIndex];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useRGB) {\n\t\t\t\t\t\n\t\t\t\t\t//ignore for now\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useAlpha) {\n\t\t\t\t\t\n\t\t\t\t\talpha = tileData[index + alphaIndex];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!useRect && cacheID != tileID) {\n\t\t\t\t\t\n\t\t\t\t\tcacheID = tileID;\n\t\t\t\t\ttile = sheet.__tileRects[tileID];\n\t\t\t\t\ttileUV = sheet.__tileUVs[tileID];\n\t\t\t\t\ttilePoint = sheet.__centerPoints[tileID];\n\t\t\t\t}\n\t\t\t\telse if (useRect)\n\t\t\t\t{\n\t\t\t\t\ttile = sheet.__rectTile;\n\t\t\t\t\ttile.setTo(tileData[index + 2], tileData[index + 3], tileData[index + 4], tileData[index + 5]);\n\t\t\t\t\ttileUV = sheet.__rectUV;\n\t\t\t\t\ttileUV.setTo(tile.x / sheet.__bitmap.width, tile.y / sheet.__bitmap.height, tile.right / sheet.__bitmap.width, tile.bottom / sheet.__bitmap.height);\n\t\t\t\t\ttilePoint = sheet.__point;\n\t\t\t\t\tif (useOrigin)\n\t\t\t\t\t{\n\t\t\t\t\t\ttilePoint.setTo(tileData[index + 6] / tile.width, tileData[index + 7] / tile.height);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttilePoint.setTo(0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (useTransform) {\n\t\t\t\t\t\n\t\t\t\t\tvar tw = tile.width;\n\t\t\t\t\tvar th = tile.height;\n\t\t\t\t\tvar t0 = tileData[index + transformIndex];\n\t\t\t\t\tvar t1 = tileData[index + transformIndex + 1];\n\t\t\t\t\tvar t2 = tileData[index + transformIndex + 2];\n\t\t\t\t\tvar t3 = tileData[index + transformIndex + 3];\n\t\t\t\t\tvar ox = tilePoint.x * tw;\n\t\t\t\t\tvar oy = tilePoint.y * th;\n\t\t\t\t\tvar ox_ = ox * t0 + oy * t2;\n\t\t\t\t\toy = ox * t1 + oy * t3;\n\t\t\t\t\tx -= ox_;\n\t\t\t\t\ty -= oy;\n\t\t\t\t\tvertices[offset8] = x;\n\t\t\t\t\tvertices[offset8 + 1] = y;\n\t\t\t\t\tvertices[offset8 + 2] = x + tw * t0;\n\t\t\t\t\tvertices[offset8 + 3] = y + tw * t1;\n\t\t\t\t\tvertices[offset8 + 4] = x + th * t2;\n\t\t\t\t\tvertices[offset8 + 5] = y + th * t3;\n\t\t\t\t\tvertices[offset8 + 6] = x + tw * t0 + th * t2;\n\t\t\t\t\tvertices[offset8 + 7] = y + tw * t1 + th * t3;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvar tileWidth = tile.width * scale;\n\t\t\t\t\tvar tileHeight = tile.height * scale;\n\t\t\t\t\t\n\t\t\t\t\tif (rotation != 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar kx = tilePoint.x * tileWidth;\n\t\t\t\t\t\tvar ky = tilePoint.y * tileHeight;\n\t\t\t\t\t\tvar akx = (1 - tilePoint.x) * tileWidth;\n\t\t\t\t\t\tvar aky = (1 - tilePoint.y) * tileHeight;\n\t\t\t\t\t\tvar ca = Math.cos (rotation);\n\t\t\t\t\t\tvar sa = Math.sin (rotation);\n\t\t\t\t\t\tvar xc = kx * sa, xs = kx * ca, yc = ky * sa, ys = ky * ca;\n\t\t\t\t\t\tvar axc = akx * sa, axs = akx * ca, ayc = aky * sa, ays = aky * ca;\n\t\t\t\t\t\tvertices[offset8] = x - (xc + ys);\n\t\t\t\t\t\tvertices[offset8 + 1] = y - (-xs + yc);\n\t\t\t\t\t\tvertices[offset8 + 2] = x + axc - ys;\n\t\t\t\t\t\tvertices[offset8 + 3] = y - (axs + yc);\n\t\t\t\t\t\tvertices[offset8 + 4] = x - (xc - ays);\n\t\t\t\t\t\tvertices[offset8 + 5] = y + xs + ayc;\n\t\t\t\t\t\tvertices[offset8 + 6] = x + axc + ays;\n\t\t\t\t\t\tvertices[offset8 + 7] = y + (-axs + ayc);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tx -= tilePoint.x * tileWidth;\n\t\t\t\t\t\ty -= tilePoint.y * tileHeight;\n\t\t\t\t\t\tvertices[offset8] = vertices[offset8 + 4] = x;\n\t\t\t\t\t\tvertices[offset8 + 1] = vertices[offset8 + 3] = y;\n\t\t\t\t\t\tvertices[offset8 + 2] = vertices[offset8 + 6] = x + tileWidth;\n\t\t\t\t\t\tvertices[offset8 + 5] = vertices[offset8 + 7] = y + tileHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ids[tileIndex] != tileID || useRect) {\n\t\t\t\t\t\n\t\t\t\t\tids[tileIndex] = tileID;\n\t\t\t\t\tuvtData[offset8] = uvtData[offset8 + 4] = tileUV.left;\n\t\t\t\t\tuvtData[offset8 + 1] = uvtData[offset8 + 3] = tileUV.top;\n\t\t\t\t\tuvtData[offset8 + 2] = uvtData[offset8 + 6] = tileUV.width;\n\t\t\t\t\tuvtData[offset8 + 5] = uvtData[offset8 + 7] = tileUV.height;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toffset8 += 8;\n\t\t\t\tindex += numValues;\n\t\t\t\ttileIndex++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.beginBitmapFill (sheet.__bitmap, null, false, smooth);\n\t\t\tthis.drawTriangles (vertices, indices, uvtData);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar index = 0;\n\t\t\tvar matrix = new Matrix ();\n\t\t\twhile (index < totalCount) {\n\t\t\t\t\n\t\t\t\tvar x = tileData[index++];\n\t\t\t\tvar y = tileData[index++];\n\t\t\t\tvar tileID = (!useRect) ? Std.int (tileData[index++]) : -1;\n\t\t\t\tvar ox:Float = 0; \n\t\t\t\tvar oy:Float = 0;\n\t\t\t\t\n\t\t\t\tif (!useRect) {\n\t\t\t\t\t\n\t\t\t\t\ttile = sheet.__tileRects[tileID];\n\t\t\t\t\ttilePoint = sheet.__centerPoints[tileID];\n\t\t\t\t\tox = tilePoint.x * tile.width;\n\t\t\t\t\toy = tilePoint.y * tile.height;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttile = sheet.__rectTile;\n\t\t\t\t\ttile.setTo(tileData[index++], tileData[index++], tileData[index++], tileData[index++]);\n\t\t\t\t\tif (useOrigin)\n\t\t\t\t\t{\n\t\t\t\t\t\tox = tileData[index++];\n\t\t\t\t\t\toy = tileData[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmatrix.tx = x - tile.x - ox;\n\t\t\t\tmatrix.ty = y - tile.y - oy;\n\t\t\t\t\n\t\t\t\tthis.beginBitmapFill (sheet.__bitmap, matrix, false, smooth);\n\t\t\t\tthis.drawRect (x - ox, y - oy, tile.width, tile.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.endFill ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end\n","package openfl.display;\n\n\nimport haxe.io.Path;\nimport lime.app.Preloader in LimePreloader;\nimport lime.Assets;\nimport openfl.events.Event;\nimport openfl.events.IOErrorEvent;\nimport openfl.media.Sound;\nimport openfl.net.URLRequest;\nimport openfl.Lib;\n\n\nclass Preloader extends LimePreloader {\n\t\n\t\n\tprivate var display:Sprite;\n\tprivate var displayComplete:Bool;\n\t\n\t\n\tpublic function new (display:Sprite = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (display != null) {\n\t\t\t\n\t\t\tthis.display = display;\n\t\t\tLib.current.addChild (display);\n\t\t\t\n\t\t\tif (Std.is (display, OpenFLPreloader)) {\n\t\t\t\t\n\t\t\t\tcast (display, OpenFLPreloader).onInit ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function load (urls:Array<String>, types:Array<AssetType>):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar sounds = [];\n\t\tvar url = null;\n\t\t\n\t\tfor (i in 0...urls.length) {\n\t\t\t\n\t\t\turl = urls[i];\n\t\t\t\n\t\t\tswitch (types[i]) {\n\t\t\t\t\n\t\t\t\tcase MUSIC, SOUND:\n\t\t\t\t\t\n\t\t\t\t\tvar sound = Path.withoutExtension (url);\n\t\t\t\t\t\n\t\t\t\t\tif (!sounds.remove (sound)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsounds.push (sound);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (soundName in sounds) {\n\t\t\t\n\t\t\tvar sound = new Sound ();\n\t\t\tsound.addEventListener (Event.COMPLETE, sound_onComplete);\n\t\t\tsound.addEventListener (IOErrorEvent.IO_ERROR, sound_onIOError);\n\t\t\tsound.load (new URLRequest (soundName + \".ogg\"));\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\tsuper.load (urls, types);\n\t\t\n\t}\n\t\n\t\n\tprivate override function start ():Void {\n\t\t\n\t\tif (display != null && Std.is (display, OpenFLPreloader)) {\n\t\t\t\n\t\t\tdisplay.addEventListener (Event.COMPLETE, display_onComplete);\n\t\t\tcast (display, OpenFLPreloader).onLoaded ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.start ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function update (loaded:Int, total:Int):Void {\n\t\t\n\t\tif (display != null && Std.is (display, OpenFLPreloader)) {\n\t\t\t\n\t\t\tcast (display, OpenFLPreloader).onUpdate (loaded, total);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\t@:noCompletion private function display_onComplete (event:Event):Void {\n\t\t\n\t\tdisplay.removeEventListener (Event.COMPLETE, display_onComplete);\n\t\tLib.current.removeChild (display);\n\t\tLib.current.stage.focus = null;\n\t\tdisplay = null;\n\t\t\n\t\tsuper.start ();\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:noCompletion private function sound_onComplete (event:Event):Void {\n\t\t\n\t\tloaded++;\n\t\t\n\t\tupdate (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function sound_onIOError (event:IOErrorEvent):Void {\n\t\t\n\t\t// if it is actually valid, it will load later when requested\n\t\t\n\t\tloaded++;\n\t\t\n\t\tupdate (loaded, total);\n\t\t\n\t\tif (loaded == total) {\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n#if tools\ntypedef OpenFLPreloader = NMEPreloader\n#else\nprivate class OpenFLPreloader extends Sprite {\n\t\n\tpublic function new () { super (); }\n\tpublic function onInit ():Void {};\n\tpublic function onUpdate (loaded:Int, total:Int):Void {};\n\tpublic function onLoaded ():Void {};\n\t\n}\n#end","package openfl.display; #if !flash #if !lime_legacy\n\n\nimport haxe.EnumFlags;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.CanvasRenderContext;\nimport lime.graphics.DOMRenderContext;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.RenderContext;\nimport lime.math.Matrix4;\nimport lime.utils.GLUtils;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.canvas.CanvasRenderer;\nimport openfl._internal.renderer.dom.DOMRenderer;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl.events.Event;\nimport openfl.events.EventPhase;\nimport openfl.events.FocusEvent;\nimport openfl.events.KeyboardEvent;\nimport openfl.events.MouseEvent;\nimport openfl.events.TouchEvent;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.ui.Keyboard;\nimport openfl.ui.KeyLocation;\n\n#if js\nimport js.html.CanvasElement;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.html.HtmlElement;\nimport js.Browser;\n#end\n\n\n/**\n * The Stage class represents the main drawing area.\n *\n * <p>For SWF content running in the browser(in Flash<sup>®</sup> Player),\n * the Stage represents the entire area where Flash content is shown. For\n * content running in AIR on desktop operating systems, each NativeWindow\n * object has a corresponding Stage object.</p>\n *\n * <p>The Stage object is not globally accessible. You need to access it\n * through the <code>stage</code> property of a DisplayObject instance.</p>\n *\n * <p>The Stage class has several ancestor classes  -  DisplayObjectContainer,\n * InteractiveObject, DisplayObject, and EventDispatcher  -  from which it\n * inherits properties and methods. Many of these properties and methods are\n * either inapplicable to Stage objects, or require security checks when\n * called on a Stage object. The properties and methods that require security\n * checks are documented as part of the Stage class.</p>\n *\n * <p>In addition, the following inherited properties are inapplicable to\n * Stage objects. If you try to set them, an IllegalOperationError is thrown.\n * These properties may always be read, but since they cannot be set, they\n * will always contain default values.</p>\n *\n * <ul>\n *   <li><code>accessibilityProperties</code></li>\n *   <li><code>alpha</code></li>\n *   <li><code>blendMode</code></li>\n *   <li><code>cacheAsBitmap</code></li>\n *   <li><code>contextMenu</code></li>\n *   <li><code>filters</code></li>\n *   <li><code>focusRect</code></li>\n *   <li><code>loaderInfo</code></li>\n *   <li><code>mask</code></li>\n *   <li><code>mouseEnabled</code></li>\n *   <li><code>name</code></li>\n *   <li><code>opaqueBackground</code></li>\n *   <li><code>rotation</code></li>\n *   <li><code>scale9Grid</code></li>\n *   <li><code>scaleX</code></li>\n *   <li><code>scaleY</code></li>\n *   <li><code>scrollRect</code></li>\n *   <li><code>tabEnabled</code></li>\n *   <li><code>tabIndex</code></li>\n *   <li><code>transform</code></li>\n *   <li><code>visible</code></li>\n *   <li><code>x</code></li>\n *   <li><code>y</code></li>\n * </ul>\n *\n * <p>Some events that you might expect to be a part of the Stage class, such\n * as <code>enterFrame</code>, <code>exitFrame</code>,\n * <code>frameConstructed</code>, and <code>render</code>, cannot be Stage\n * events because a reference to the Stage object cannot be guaranteed to\n * exist in every situation where these events are used. Because these events\n * cannot be dispatched by the Stage object, they are instead dispatched by\n * every DisplayObject instance, which means that you can add an event\n * listener to any DisplayObject instance to listen for these events. These\n * events, which are part of the DisplayObject class, are called broadcast\n * events to differentiate them from events that target a specific\n * DisplayObject instance. Two other broadcast events, <code>activate</code>\n * and <code>deactivate</code>, belong to DisplayObject's superclass,\n * EventDispatcher. The <code>activate</code> and <code>deactivate</code>\n * events behave similarly to the DisplayObject broadcast events, except that\n * these two events are dispatched not only by all DisplayObject instances,\n * but also by all EventDispatcher instances and instances of other\n * EventDispatcher subclasses. For more information on broadcast events, see\n * the DisplayObject class.</p>\n * \n * @event fullScreen             Dispatched when the Stage object enters, or\n *                               leaves, full-screen mode. A change in\n *                               full-screen mode can be initiated through\n *                               ActionScript, or the user invoking a keyboard\n *                               shortcut, or if the current focus leaves the\n *                               full-screen window.\n * @event mouseLeave             Dispatched by the Stage object when the\n *                               pointer moves out of the stage area. If the\n *                               mouse button is pressed, the event is not\n *                               dispatched.\n * @event orientationChange      Dispatched by the Stage object when the stage\n *                               orientation changes.\n *\n *                               <p>Orientation changes can occur when the\n *                               user rotates the device, opens a slide-out\n *                               keyboard, or when the\n *                               <code>setAspectRatio()</code> is called.</p>\n *\n *                               <p><b>Note:</b> If the\n *                               <code>autoOrients</code> property is\n *                               <code>false</code>, then the stage\n *                               orientation does not change when a device is\n *                               rotated. Thus, StageOrientationEvents are\n *                               only dispatched for device rotation when\n *                               <code>autoOrients</code> is\n *                               <code>true</code>.</p>\n * @event orientationChanging    Dispatched by the Stage object when the stage\n *                               orientation begins changing.\n *\n *                               <p><b>Important:</b> orientationChanging\n *                               events are not dispatched on Android\n *                               devices.</p>\n *\n *                               <p><b>Note:</b> If the\n *                               <code>autoOrients</code> property is\n *                               <code>false</code>, then the stage\n *                               orientation does not change when a device is\n *                               rotated. Thus, StageOrientationEvents are\n *                               only dispatched for device rotation when\n *                               <code>autoOrients</code> is\n *                               <code>true</code>.</p>\n * @event resize                 Dispatched when the <code>scaleMode</code>\n *                               property of the Stage object is set to\n *                               <code>StageScaleMode.NO_SCALE</code> and the\n *                               SWF file is resized.\n * @event stageVideoAvailability Dispatched by the Stage object when the state\n *                               of the stageVideos property changes.\n */\n\n@:access(openfl.events.Event)\n\n\nclass Stage extends Sprite {\n\t\n\t\n\t/**\n\t * A value from the StageAlign class that specifies the alignment of the\n\t * stage in Flash Player or the browser. The following are valid values:\n\t *\n\t * <p>The <code>align</code> property is only available to an object that is\n\t * in the same security sandbox as the Stage owner(the main SWF file). To\n\t * avoid this, the Stage owner can grant permission to the domain of the\n\t * calling object by calling the <code>Security.allowDomain()</code> method\n\t * or the <code>Security.alowInsecureDomain()</code> method. For more\n\t * information, see the \"Security\" chapter in the <i>ActionScript 3.0\n\t * Developer's Guide</i>.</p>\n\t */\n\tpublic var align:StageAlign;\n\t\n\t/**\n\t * Specifies whether this stage allows the use of the full screen mode\n\t */\n\tpublic var allowsFullScreen:Bool;\n\t\n\t/**\n\t * The window background color.\n\t */\n\tpublic var color (get, set):Int;\n\t\n\t/**\n\t * A value from the StageDisplayState class that specifies which display\n\t * state to use. The following are valid values:\n\t * <ul>\n\t *   <li><code>StageDisplayState.FULL_SCREEN</code> Sets AIR application or\n\t * Flash runtime to expand the stage over the user's entire screen, with\n\t * keyboard input disabled.</li>\n\t *   <li><code>StageDisplayState.FULL_SCREEN_INTERACTIVE</code> Sets the AIR\n\t * application to expand the stage over the user's entire screen, with\n\t * keyboard input allowed.(Not available for content running in Flash\n\t * Player.)</li>\n\t *   <li><code>StageDisplayState.NORMAL</code> Sets the Flash runtime back to\n\t * the standard stage display mode.</li>\n\t * </ul>\n\t *\n\t * <p>The scaling behavior of the movie in full-screen mode is determined by\n\t * the <code>scaleMode</code> setting(set using the\n\t * <code>Stage.scaleMode</code> property or the SWF file's <code>embed</code>\n\t * tag settings in the HTML file). If the <code>scaleMode</code> property is\n\t * set to <code>noScale</code> while the application transitions to\n\t * full-screen mode, the Stage <code>width</code> and <code>height</code>\n\t * properties are updated, and the Stage dispatches a <code>resize</code>\n\t * event. If any other scale mode is set, the stage and its contents are\n\t * scaled to fill the new screen dimensions. The Stage object retains its\n\t * original <code>width</code> and <code>height</code> values and does not\n\t * dispatch a <code>resize</code> event.</p>\n\t *\n\t * <p>The following restrictions apply to SWF files that play within an HTML\n\t * page(not those using the stand-alone Flash Player or not running in the\n\t * AIR runtime):</p>\n\t *\n\t * <ul>\n\t *   <li>To enable full-screen mode, add the <code>allowFullScreen</code>\n\t * parameter to the <code>object</code> and <code>embed</code> tags in the\n\t * HTML page that includes the SWF file, with <code>allowFullScreen</code>\n\t * set to <code>\"true\"</code>, as shown in the following example: </li>\n\t *   <li>Full-screen mode is initiated in response to a mouse click or key\n\t * press by the user; the movie cannot change <code>Stage.displayState</code>\n\t * without user input. Flash runtimes restrict keyboard input in full-screen\n\t * mode. Acceptable keys include keyboard shortcuts that terminate\n\t * full-screen mode and non-printing keys such as arrows, space, Shift, and\n\t * Tab keys. Keyboard shortcuts that terminate full-screen mode are: Escape\n\t * (Windows, Linux, and Mac), Control+W(Windows), Command+W(Mac), and\n\t * Alt+F4.\n\t *\n\t * <p>A Flash runtime dialog box appears over the movie when users enter\n\t * full-screen mode to inform the users they are in full-screen mode and that\n\t * they can press the Escape key to end full-screen mode.</p>\n\t * </li>\n\t *   <li>Starting with Flash Player 9.0.115.0, full-screen works the same in\n\t * windowless mode as it does in window mode. If you set the Window Mode\n\t * (<code>wmode</code> in the HTML) to Opaque Windowless\n\t * (<code>opaque</code>) or Transparent Windowless\n\t * (<code>transparent</code>), full-screen can be initiated, but the\n\t * full-screen window will always be opaque.</li>\n\t * </ul>\n\t *\n\t * <p>These restrictions are <i>not</i> present for SWF content running in\n\t * the stand-alone Flash Player or in AIR. AIR supports an interactive\n\t * full-screen mode which allows keyboard input.</p>\n\t *\n\t * <p>For AIR content running in full-screen mode, the system screen saver\n\t * and power saving options are disabled while video content is playing and\n\t * until either the video stops or full-screen mode is exited.</p>\n\t *\n\t * <p>On Linux, setting <code>displayState</code> to\n\t * <code>StageDisplayState.FULL_SCREEN</code> or\n\t * <code>StageDisplayState.FULL_SCREEN_INTERACTIVE</code> is an asynchronous\n\t * operation.</p>\n\t * \n\t * @throws SecurityError Calling the <code>displayState</code> property of a\n\t *                       Stage object throws an exception for any caller that\n\t *                       is not in the same security sandbox as the Stage\n\t *                       owner(the main SWF file). To avoid this, the Stage\n\t *                       owner can grant permission to the domain of the\n\t *                       caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t *                       Trying to set the <code>displayState</code> property\n\t *                       while the settings dialog is displayed, without a\n\t *                       user response, or if the <code>param</code> or\n\t *                       <code>embed</code> HTML tag's\n\t *                       <code>allowFullScreen</code> attribute is not set to\n\t *                       <code>true</code> throws a security error.\n\t */\n\tpublic var displayState (default, set):StageDisplayState;\n\t\n\t/**\n\t * The interactive object with keyboard focus; or <code>null</code> if focus\n\t * is not set or if the focused object belongs to a security sandbox to which\n\t * the calling object does not have access.\n\t * \n\t * @throws Error Throws an error if focus cannot be set to the target.\n\t */\n\tpublic var focus (get, set):InteractiveObject;\n\t\n\t/**\n\t * Gets and sets the frame rate of the stage. The frame rate is defined as\n\t * frames per second. By default the rate is set to the frame rate of the\n\t * first SWF file loaded. Valid range for the frame rate is from 0.01 to 1000\n\t * frames per second.\n\t *\n\t * <p><b>Note:</b> An application might not be able to follow high frame rate\n\t * settings, either because the target platform is not fast enough or the\n\t * player is synchronized to the vertical blank timing of the display device\n\t * (usually 60 Hz on LCD devices). In some cases, a target platform might\n\t * also choose to lower the maximum frame rate if it anticipates high CPU\n\t * usage.</p>\n\t *\n\t * <p>For content running in Adobe AIR, setting the <code>frameRate</code>\n\t * property of one Stage object changes the frame rate for all Stage objects\n\t * (used by different NativeWindow objects). </p>\n\t * \n\t * @throws SecurityError Calling the <code>frameRate</code> property of a\n\t *                       Stage object throws an exception for any caller that\n\t *                       is not in the same security sandbox as the Stage\n\t *                       owner(the main SWF file). To avoid this, the Stage\n\t *                       owner can grant permission to the domain of the\n\t *                       caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var frameRate:Float;\n\t\n\t/**\n\t * A value from the StageQuality class that specifies which rendering quality\n\t * is used. The following are valid values:\n\t * <ul>\n\t *   <li><code>StageQuality.LOW</code> - Low rendering quality. Graphics are\n\t * not anti-aliased, and bitmaps are not smoothed, but runtimes still use\n\t * mip-mapping.</li>\n\t *   <li><code>StageQuality.MEDIUM</code> - Medium rendering quality.\n\t * Graphics are anti-aliased using a 2 x 2 pixel grid, bitmap smoothing is\n\t * dependent on the <code>Bitmap.smoothing</code> setting. Runtimes use\n\t * mip-mapping. This setting is suitable for movies that do not contain\n\t * text.</li>\n\t *   <li><code>StageQuality.HIGH</code> - High rendering quality. Graphics\n\t * are anti-aliased using a 4 x 4 pixel grid, and bitmap smoothing is\n\t * dependent on the <code>Bitmap.smoothing</code> setting. Runtimes use\n\t * mip-mapping. This is the default rendering quality setting that Flash\n\t * Player uses.</li>\n\t *   <li><code>StageQuality.BEST</code> - Very high rendering quality.\n\t * Graphics are anti-aliased using a 4 x 4 pixel grid. If\n\t * <code>Bitmap.smoothing</code> is <code>true</code> the runtime uses a high\n\t * quality downscale algorithm that produces fewer artifacts(however, using\n\t * <code>StageQuality.BEST</code> with <code>Bitmap.smoothing</code> set to\n\t * <code>true</code> slows performance significantly and is not a recommended\n\t * setting).</li>\n\t * </ul>\n\t *\n\t * <p>Higher quality settings produce better rendering of scaled bitmaps.\n\t * However, higher quality settings are computationally more expensive. In\n\t * particular, when rendering scaled video, using higher quality settings can\n\t * reduce the frame rate. </p>\n\t *\n\t * <p>In the desktop profile of Adobe AIR, <code>quality</code> can be set to\n\t * <code>StageQuality.BEST</code> or <code>StageQuality.HIGH</code>(and the\n\t * default value is <code>StageQuality.HIGH</code>). Attempting to set it to\n\t * another value has no effect(and the property remains unchanged). In the\n\t * moble profile of AIR, all four quality settings are available. The default\n\t * value on mobile devices is <code>StageQuality.MEDIUM</code>.</p>\n\t *\n\t * <p>For content running in Adobe AIR, setting the <code>quality</code>\n\t * property of one Stage object changes the rendering quality for all Stage\n\t * objects(used by different NativeWindow objects). </p>\n\t * <b><i>Note:</i></b> The operating system draws the device fonts, which are\n\t * therefore unaffected by the <code>quality</code> property.\n\t * \n\t * @throws SecurityError Calling the <code>quality</code> property of a Stage\n\t *                       object throws an exception for any caller that is\n\t *                       not in the same security sandbox as the Stage owner\n\t *                      (the main SWF file). To avoid this, the Stage owner\n\t *                       can grant permission to the domain of the caller by\n\t *                       calling the <code>Security.allowDomain()</code>\n\t *                       method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var quality:StageQuality;\n\t\n\t/**\n\t * A value from the StageScaleMode class that specifies which scale mode to\n\t * use. The following are valid values:\n\t * <ul>\n\t *   <li><code>StageScaleMode.EXACT_FIT</code> - The entire application is\n\t * visible in the specified area without trying to preserve the original\n\t * aspect ratio. Distortion can occur, and the application may appear\n\t * stretched or compressed. </li>\n\t *   <li><code>StageScaleMode.SHOW_ALL</code> - The entire application is\n\t * visible in the specified area without distortion while maintaining the\n\t * original aspect ratio of the application. Borders can appear on two sides\n\t * of the application. </li>\n\t *   <li><code>StageScaleMode.NO_BORDER</code> - The entire application fills\n\t * the specified area, without distortion but possibly with some cropping,\n\t * while maintaining the original aspect ratio of the application. </li>\n\t *   <li><code>StageScaleMode.NO_SCALE</code> - The entire application is\n\t * fixed, so that it remains unchanged even as the size of the player window\n\t * changes. Cropping might occur if the player window is smaller than the\n\t * content. </li>\n\t * </ul>\n\t * \n\t * @throws SecurityError Calling the <code>scaleMode</code> property of a\n\t *                       Stage object throws an exception for any caller that\n\t *                       is not in the same security sandbox as the Stage\n\t *                       owner(the main SWF file). To avoid this, the Stage\n\t *                       owner can grant permission to the domain of the\n\t *                       caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var scaleMode:StageScaleMode;\n\tpublic var stage3Ds (default, null):Vector<Stage3D>;\n\t\n\t/**\n\t * Specifies whether or not objects display a glowing border when they have\n\t * focus.\n\t * \n\t * @throws SecurityError Calling the <code>stageFocusRect</code> property of\n\t *                       a Stage object throws an exception for any caller\n\t *                       that is not in the same security sandbox as the\n\t *                       Stage owner(the main SWF file). To avoid this, the\n\t *                       Stage owner can grant permission to the domain of\n\t *                       the caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var stageFocusRect:Bool;\n\t\n\t/**\n\t * The current height, in pixels, of the Stage.\n\t *\n\t * <p>If the value of the <code>Stage.scaleMode</code> property is set to\n\t * <code>StageScaleMode.NO_SCALE</code> when the user resizes the window, the\n\t * Stage content maintains its size while the <code>stageHeight</code>\n\t * property changes to reflect the new height size of the screen area\n\t * occupied by the SWF file.(In the other scale modes, the\n\t * <code>stageHeight</code> property always reflects the original height of\n\t * the SWF file.) You can add an event listener for the <code>resize</code>\n\t * event and then use the <code>stageHeight</code> property of the Stage\n\t * class to determine the actual pixel dimension of the resized Flash runtime\n\t * window. The event listener allows you to control how the screen content\n\t * adjusts when the user resizes the window.</p>\n\t *\n\t * <p>Air for TV devices have slightly different behavior than desktop\n\t * devices when you set the <code>stageHeight</code> property. If the\n\t * <code>Stage.scaleMode</code> property is set to\n\t * <code>StageScaleMode.NO_SCALE</code> and you set the\n\t * <code>stageHeight</code> property, the stage height does not change until\n\t * the next frame of the SWF.</p>\n\t *\n\t * <p><b>Note:</b> In an HTML page hosting the SWF file, both the\n\t * <code>object</code> and <code>embed</code> tags' <code>height</code>\n\t * attributes must be set to a percentage(such as <code>100%</code>), not\n\t * pixels. If the settings are generated by JavaScript code, the\n\t * <code>height</code> parameter of the <code>AC_FL_RunContent() </code>\n\t * method must be set to a percentage, too. This percentage is applied to the\n\t * <code>stageHeight</code> value.</p>\n\t * \n\t * @throws SecurityError Calling the <code>stageHeight</code> property of a\n\t *                       Stage object throws an exception for any caller that\n\t *                       is not in the same security sandbox as the Stage\n\t *                       owner(the main SWF file). To avoid this, the Stage\n\t *                       owner can grant permission to the domain of the\n\t *                       caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var stageHeight (default, null):Int;\n\t\n\t/**\n\t * Specifies the current width, in pixels, of the Stage.\n\t *\n\t * <p>If the value of the <code>Stage.scaleMode</code> property is set to\n\t * <code>StageScaleMode.NO_SCALE</code> when the user resizes the window, the\n\t * Stage content maintains its defined size while the <code>stageWidth</code>\n\t * property changes to reflect the new width size of the screen area occupied\n\t * by the SWF file.(In the other scale modes, the <code>stageWidth</code>\n\t * property always reflects the original width of the SWF file.) You can add\n\t * an event listener for the <code>resize</code> event and then use the\n\t * <code>stageWidth</code> property of the Stage class to determine the\n\t * actual pixel dimension of the resized Flash runtime window. The event\n\t * listener allows you to control how the screen content adjusts when the\n\t * user resizes the window.</p>\n\t *\n\t * <p>Air for TV devices have slightly different behavior than desktop\n\t * devices when you set the <code>stageWidth</code> property. If the\n\t * <code>Stage.scaleMode</code> property is set to\n\t * <code>StageScaleMode.NO_SCALE</code> and you set the\n\t * <code>stageWidth</code> property, the stage width does not change until\n\t * the next frame of the SWF.</p>\n\t *\n\t * <p><b>Note:</b> In an HTML page hosting the SWF file, both the\n\t * <code>object</code> and <code>embed</code> tags' <code>width</code>\n\t * attributes must be set to a percentage(such as <code>100%</code>), not\n\t * pixels. If the settings are generated by JavaScript code, the\n\t * <code>width</code> parameter of the <code>AC_FL_RunContent() </code>\n\t * method must be set to a percentage, too. This percentage is applied to the\n\t * <code>stageWidth</code> value.</p>\n\t * \n\t * @throws SecurityError Calling the <code>stageWidth</code> property of a\n\t *                       Stage object throws an exception for any caller that\n\t *                       is not in the same security sandbox as the Stage\n\t *                       owner(the main SWF file). To avoid this, the Stage\n\t *                       owner can grant permission to the domain of the\n\t *                       caller by calling the\n\t *                       <code>Security.allowDomain()</code> method or the\n\t *                       <code>Security.allowInsecureDomain()</code> method.\n\t *                       For more information, see the \"Security\" chapter in\n\t *                       the <i>ActionScript 3.0 Developer's Guide</i>.\n\t */\n\tpublic var stageWidth (default, null):Int;\n\t\n\t@:noCompletion private var __clearBeforeRender:Bool;\n\t@:noCompletion private var __color:Int;\n\t@:noCompletion private var __colorSplit:Array<Float>;\n\t@:noCompletion private var __colorString:String;\n\t@:noCompletion private var __dirty:Bool;\n\t@:noCompletion private var __dragBounds:Rectangle;\n\t@:noCompletion private var __dragObject:Sprite;\n\t@:noCompletion private var __dragOffsetX:Float;\n\t@:noCompletion private var __dragOffsetY:Float;\n\t@:noCompletion private var __focus:InteractiveObject;\n\t@:noCompletion private var __fullscreen:Bool;\n\t@:noCompletion private var __invalidated:Bool;\n\t@:noCompletion private var __mouseX:Float = 0;\n\t@:noCompletion private var __mouseY:Float = 0;\n\t@:noCompletion private var __originalWidth:Int;\n\t@:noCompletion private var __originalHeight:Int;\n\t@:noCompletion private var __renderer:AbstractRenderer;\n\t@:noCompletion private var __stack:Array<DisplayObject>;\n\t@:noCompletion private var __transparent:Bool;\n\t@:noCompletion private var __wasDirty:Bool;\n\t\n\t#if js\n\t//@:noCompletion private var __div:DivElement;\n\t//@:noCompletion private var __element:HtmlElement;\n\t#if stats\n\t@:noCompletion private var __stats:Dynamic;\n\t#end\n\t#end\n\t\n\t\n\tpublic function new (width:Int, height:Int, color:Null<Int> = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (color == null) {\n\t\t\t\n\t\t\t__transparent = true;\n\t\t\tthis.color = 0x000000;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.color = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.name = null;\n\t\t\n\t\t__mouseX = 0;\n\t\t__mouseY = 0;\n\t\t\n\t\tstageWidth = width;\n\t\tstageHeight = height;\n\t\t\n\t\tthis.stage = this;\n\t\t\n\t\talign = StageAlign.TOP_LEFT;\n\t\tallowsFullScreen = false;\n\t\tdisplayState = StageDisplayState.NORMAL;\n\t\tframeRate = 60;\n\t\tquality = StageQuality.HIGH;\n\t\tscaleMode = StageScaleMode.NO_SCALE;\n\t\tstageFocusRect = true;\n\t\t\n\t\t__clearBeforeRender = true;\n\t\t__stack = [];\n\t\t\n\t\tstage3Ds = new Vector ();\n\t\tstage3Ds.push (new Stage3D ());\n\t\t\n\t}\n\t\n\t\n\tpublic override function globalToLocal (pos:Point):Point {\n\t\t\n\t\treturn pos;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Calling the <code>invalidate()</code> method signals Flash runtimes to\n\t * alert display objects on the next opportunity it has to render the display\n\t * list(for example, when the playhead advances to a new frame). After you\n\t * call the <code>invalidate()</code> method, when the display list is next\n\t * rendered, the Flash runtime sends a <code>render</code> event to each\n\t * display object that has registered to listen for the <code>render</code>\n\t * event. You must call the <code>invalidate()</code> method each time you\n\t * want the Flash runtime to send <code>render</code> events.\n\t *\n\t * <p>The <code>render</code> event gives you an opportunity to make changes\n\t * to the display list immediately before it is actually rendered. This lets\n\t * you defer updates to the display list until the latest opportunity. This\n\t * can increase performance by eliminating unnecessary screen updates.</p>\n\t *\n\t * <p>The <code>render</code> event is dispatched only to display objects\n\t * that are in the same security domain as the code that calls the\n\t * <code>stage.invalidate()</code> method, or to display objects from a\n\t * security domain that has been granted permission via the\n\t * <code>Security.allowDomain()</code> method.</p>\n\t * \n\t */\n\tpublic function invalidate ():Void {\n\t\t\n\t\t__invalidated = true;\n\t\t\n\t}\n\t\n\t\n\tpublic override function localToGlobal (pos:Point):Point {\n\t\t\n\t\treturn pos;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __drag (mouse:Point):Void {\n\t\t\n\t\tvar parent = __dragObject.parent;\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tmouse = parent.globalToLocal (mouse);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x = mouse.x + __dragOffsetX;\n\t\tvar y = mouse.y + __dragOffsetY;\n\t\t\n\t\tif (__dragBounds != null) {\n\t\t\t\n\t\t\tif (x < __dragBounds.x) {\n\t\t\t\t\n\t\t\t\tx = __dragBounds.x;\n\t\t\t\t\n\t\t\t} else if (x > __dragBounds.right) {\n\t\t\t\t\n\t\t\t\tx = __dragBounds.right;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (y < __dragBounds.y) {\n\t\t\t\t\n\t\t\t\ty = __dragBounds.y;\n\t\t\t\t\n\t\t\t} else if (y > __dragBounds.bottom) {\n\t\t\t\t\n\t\t\t\ty = __dragBounds.bottom;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__dragObject.x = x;\n\t\t__dragObject.y = y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __fireEvent (event:Event, stack:Array<DisplayObject>):Void {\n\t\t\n\t\tvar length = stack.length;\n\t\t\n\t\tif (length == 0) {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\n\t\t\tevent.target.__broadcast (event, false);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.CAPTURING_PHASE;\n\t\t\tevent.target = stack[stack.length - 1];\n\t\t\t\n\t\t\tfor (i in 0...length - 1) {\n\t\t\t\t\n\t\t\t\tstack[i].__broadcast (event, false);\n\t\t\t\t\n\t\t\t\tif (event.__isCancelled) {\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\n\t\t\tevent.target.__broadcast (event, false);\n\t\t\t\n\t\t\tif (event.__isCancelled) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (event.bubbles) {\n\t\t\t\t\n\t\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\n\t\t\t\tvar i = length - 2;\n\t\t\t\t\n\t\t\t\twhile (i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tstack[i].__broadcast (event, false);\n\t\t\t\t\t\n\t\t\t\t\tif (event.__isCancelled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ti--;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function __getInteractive (stack:Array<DisplayObject>):Void {\n\t\t\n\t\tstack.push (this);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __render (context:RenderContext):Void {\n\t\t\n\t\t__broadcast (new Event (Event.ENTER_FRAME), true);\n\t\t\n\t\tif (__invalidated) {\n\t\t\t\n\t\t\t__invalidated = false;\n\t\t\t__broadcast (new Event (Event.RENDER), true);\n\t\t\t\n\t\t}\n\t\t\n\t\t__renderable = true;\n\t\t__update (false, true);\n\t\t\n\t\tswitch (context) {\n\t\t\t\n\t\t\tcase OPENGL (gl):\n\t\t\t\t\n\t\t\t\tif (__renderer == null) {\n\t\t\t\t\t\n\t\t\t\t\t__renderer = new GLRenderer (stageWidth, stageHeight, gl);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__renderer.render (this);\n\t\t\t\n\t\t\tcase CANVAS (context):\n\t\t\t\t\n\t\t\t\tif (__renderer == null) {\n\t\t\t\t\t\n\t\t\t\t\t__renderer = new CanvasRenderer (stageWidth, stageHeight, context);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__renderer.render (this);\n\t\t\t\n\t\t\tcase DOM (element):\n\t\t\t\t\n\t\t\t\tif (__renderer == null) {\n\t\t\t\t\t\n\t\t\t\t\t__renderer = new DOMRenderer (stageWidth, stageHeight, element);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__renderer.render (this);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __resize ():Void {\n\t\t\n\t\t/*\n\t\tif (__element != null && (__div == null || (__div != null && __fullscreen))) {\n\t\t\t\n\t\t\tif (__fullscreen) {\n\t\t\t\t\n\t\t\t\tstageWidth = __element.clientWidth;\n\t\t\t\tstageHeight = __element.clientHeight;\n\t\t\t\t\n\t\t\t\tif (__canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (__element != cast __canvas) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__canvas.width = stageWidth;\n\t\t\t\t\t\t__canvas.height = stageHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__div.style.width = stageWidth + \"px\";\n\t\t\t\t\t__div.style.height = stageHeight + \"px\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar scaleX = __element.clientWidth / __originalWidth;\n\t\t\t\tvar scaleY = __element.clientHeight / __originalHeight;\n\t\t\t\t\n\t\t\t\tvar currentRatio = scaleX / scaleY;\n\t\t\t\tvar targetRatio = Math.min (scaleX, scaleY);\n\t\t\t\t\n\t\t\t\tif (__canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (__element != cast __canvas) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__canvas.style.width = __originalWidth * targetRatio + \"px\";\n\t\t\t\t\t\t__canvas.style.height = __originalHeight * targetRatio + \"px\";\n\t\t\t\t\t\t__canvas.style.marginLeft = ((__element.clientWidth - (__originalWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\t__canvas.style.marginTop = ((__element.clientHeight - (__originalHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__div.style.width = __originalWidth * targetRatio + \"px\";\n\t\t\t\t\t__div.style.height = __originalHeight * targetRatio + \"px\";\n\t\t\t\t\t__div.style.marginLeft = ((__element.clientWidth - (__originalWidth * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t__div.style.marginTop = ((__element.clientHeight - (__originalHeight * targetRatio)) / 2) + \"px\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}*/\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __startDrag (sprite:Sprite, lockCenter:Bool, bounds:Rectangle):Void {\n\t\t\n\t\t__dragBounds = (bounds == null) ? null : bounds.clone ();\n\t\t__dragObject = sprite;\n\t\t\n\t\tif (__dragObject != null) {\n\t\t\t\n\t\t\tif (lockCenter) {\n\t\t\t\t\n\t\t\t\t__dragOffsetX = -__dragObject.width / 2;\n\t\t\t\t__dragOffsetY = -__dragObject.height / 2;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar mouse = new Point (mouseX, mouseY);\n\t\t\t\tvar parent = __dragObject.parent;\n\t\t\t\t\n\t\t\t\tif (parent != null) {\n\t\t\t\t\t\n\t\t\t\t\tmouse = parent.globalToLocal (mouse);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__dragOffsetX = __dragObject.x - mouse.x;\n\t\t\t\t__dragOffsetY = __dragObject.y - mouse.y;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __stopDrag (sprite:Sprite):Void {\n\t\t\n\t\t__dragBounds = null;\n\t\t__dragObject = null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function __update (transformOnly:Bool, updateChildren:Bool):Void {\n\t\t\n\t\tif (transformOnly) {\n\t\t\t\n\t\t\tif (DisplayObject.__worldTransformDirty > 0) {\n\t\t\t\t\n\t\t\t\tsuper.__update (true, updateChildren);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\tDisplayObject.__worldTransformDirty = 0;\n\t\t\t\t\t__dirty = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (DisplayObject.__worldTransformDirty > 0 || __dirty || DisplayObject.__worldRenderDirty > 0) {\n\t\t\t\t\n\t\t\t\tsuper.__update (false, updateChildren);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\t#if dom\n\t\t\t\t\t__wasDirty = true;\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tDisplayObject.__worldTransformDirty = 0;\n\t\t\t\t\tDisplayObject.__worldRenderDirty = 0;\n\t\t\t\t\t__dirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} #if dom else if (__wasDirty) {\n\t\t\t\t\n\t\t\t\t// If we were dirty last time, we need at least one more\n\t\t\t\t// update in order to clear \"changed\" properties\n\t\t\t\t\n\t\t\t\tsuper.__update (false, updateChildren);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\t__wasDirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} #end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private override function get_mouseX ():Float {\n\t\t\n\t\treturn __mouseX;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private override function get_mouseY ():Float {\n\t\t\n\t\treturn __mouseY;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\t#if js\n\t@:noCompletion private function canvas_onContextLost (event:js.html.webgl.ContextEvent):Void {\n\t\t\n\t\t//__glContextLost = true;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function canvas_onContextRestored (event:js.html.webgl.ContextEvent):Void {\n\t\t\n\t\t//__glContextLost = false;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_color ():Int {\n\t\t\n\t\treturn __color;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_color (value:Int):Int {\n\t\t\n\t\tvar r = (value & 0xFF0000) >>> 16;\n\t\tvar g = (value & 0x00FF00) >>> 8;\n\t\tvar b = (value & 0x0000FF);\n\t\t\n\t\t__colorSplit = [ r / 0xFF, g / 0xFF, b / 0xFF ];\n\t\t__colorString = \"#\" + StringTools.hex (value, 6);\n\t\t\n\t\treturn __color = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_focus ():InteractiveObject {\n\t\t\n\t\treturn __focus;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_focus (value:InteractiveObject):InteractiveObject {\n\t\t\n\t\tif (value != __focus) {\n\t\t\t\n\t\t\tif (__focus != null) {\n\t\t\t\t\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, value, false, 0);\n\t\t\t\t__stack = [];\n\t\t\t\t__focus.__getInteractive (__stack);\n\t\t\t\t__stack.reverse ();\n\t\t\t\t__fireEvent (event, __stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, __focus, false, 0);\n\t\t\t\t__stack = [];\n\t\t\t\tvalue.__getInteractive (__stack);\n\t\t\t\t__stack.reverse ();\n\t\t\t\t__fireEvent (event, __stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__focus = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __focus;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_displayState (value:StageDisplayState):StageDisplayState {\n\t\t\n\t\t/*switch(value) {\n\t\t\tcase NORMAL:\n\t\t\t\tvar fs_exit_function = untyped __js__(\"function() {\n\t\t\t    if (document.exitFullscreen) {\n\t\t\t      document.exitFullscreen();\n\t\t\t    } else if (document.msExitFullscreen) {\n\t\t\t      document.msExitFullscreen();\n\t\t\t    } else if (document.mozCancelFullScreen) {\n\t\t\t      document.mozCancelFullScreen();\n\t\t\t    } else if (document.webkitExitFullscreen) {\n\t\t\t      document.webkitExitFullscreen();\n\t\t\t    }\n\t\t\t\t}\");\n\t\t\t\tfs_exit_function();\n\t\t\tcase FULL_SCREEN | FULL_SCREEN_INTERACTIVE:\n\t\t\t\tvar fsfunction = untyped __js__(\"function(elem) {\n\t\t\t\t\tif (elem.requestFullscreen) elem.requestFullscreen();\n\t\t\t\t\telse if (elem.msRequestFullscreen) elem.msRequestFullscreen();\n\t\t\t\t\telse if (elem.mozRequestFullScreen) elem.mozRequestFullScreen();\n\t\t\t\t\telse if (elem.webkitRequestFullscreen) elem.webkitRequestFullscreen();\n\t\t\t\t}\");\n\t\t\t\tfsfunction(__element);\n\t\t\tdefault:\n\t\t}*/\n\t\tdisplayState = value;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Stage = openfl._v2.display.Stage;\n#end\n#else\ntypedef Stage = flash.display.Stage;\n#end","package openfl.display; #if !flash\n\n\nimport openfl.display.OpenGLView;\nimport openfl.display3D.Context3D;\nimport openfl.events.ErrorEvent;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\n\n\nclass Stage3D extends EventDispatcher {\n\t\n\t\n\tpublic var context3D:Context3D;\n\tpublic var visible:Bool; // TODO\n\tpublic var x:Float; // TODO\n\tpublic var y:Float; // TODO\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\tpublic function requestContext3D (context3DRenderMode:String = \"\"):Void {\n\t\t\n\t\tif (OpenGLView.isSupported) {\n\t\t\t\n\t\t\tcontext3D = new Context3D ();\n\t\t\tdispatchEvent (new Event (Event.CONTEXT3D_CREATE));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdispatchEvent (new ErrorEvent (ErrorEvent.ERROR));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Stage3D = flash.display.Stage3D;\n#end","package openfl.errors; #if !flash\n\n\nimport haxe.CallStack;\n\n\nclass Error {\n\t\n\t\n\tprivate static inline var DEFAULT_TO_STRING = \"Error\";\n\t\n\tpublic var errorID:Int;\n\tpublic var message:String;\n\tpublic var name:String;\n\t\n\t\n\tpublic function new (message:String = \"\", id:Int = 0) {\n\t\t\n\t\tthis.message = message;\n\t\tthis.errorID = id;\n\t\tname = \"Error\";\n\t\t\n\t}\n\t\n\t\n\tpublic function getStackTrace ():String {\n\t\t\n\t\treturn CallStack.toString (CallStack.exceptionStack ());\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\tif (message != null) {\n\t\t\t\n\t\t\treturn message;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn DEFAULT_TO_STRING;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef Error = flash.errors.Error;\n#end","package openfl.errors; #if !flash\n\n\nclass ArgumentError extends Error {\n\t\n\t\n\tpublic function new (inMessage:String = \"\") {\n\t\t\n\t\tsuper (inMessage);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef ArgumentError = flash.errors.ArgumentError;\n#end","package openfl.events; #if !flash\n\n\n/**\n * An object dispatches a TextEvent object when a user enters text in a text\n * field or clicks a hyperlink in an HTML-enabled text field. There are two\n * types of text events: <code>TextEvent.LINK</code> and\n * <code>TextEvent.TEXT_INPUT</code>.\n * \n */\nclass TextEvent extends Event {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a <code>link</code>\n\t * event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var LINK:String = \"link\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>textInput</code> event object.\n\t *\n\t * <p><b>Note:</b> This event is not dispatched for the Delete or Backspace\n\t * keys.</p>\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var TEXT_INPUT:String = \"textInput\";\n\t\n\t\n\t/**\n\t * For a <code>textInput</code> event, the character or sequence of\n\t * characters entered by the user. For a <code>link</code> event, the text of\n\t * the <code>event</code> attribute of the <code>href</code> attribute of the\n\t * <code><a></code> tag.\n\t */\n\tpublic var text:String;\n\t\n\t\n\t/**\n\t * Creates an Event object that contains information about text events. Event\n\t * objects are passed as parameters to event listeners.\n\t * \n\t * @param type       The type of the event. Event listeners can access this\n\t *                   information through the inherited <code>type</code>\n\t *                   property. Possible values are:\n\t *                   <code>TextEvent.LINK</code> and\n\t *                   <code>TextEvent.TEXT_INPUT</code>.\n\t * @param bubbles    Determines whether the Event object participates in the\n\t *                   bubbling phase of the event flow. Event listeners can\n\t *                   access this information through the inherited\n\t *                   <code>bubbles</code> property.\n\t * @param cancelable Determines whether the Event object can be canceled.\n\t *                   Event listeners can access this information through the\n\t *                   inherited <code>cancelable</code> property.\n\t * @param text       One or more characters of text entered by the user.\n\t *                   Event listeners can access this information through the\n\t *                   <code>text</code> property.\n\t */\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\") {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.text = text;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\treturn new TextEvent (type, bubbles, cancelable, text);\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[TextEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" text=\" + text + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef TextEvent = flash.events.TextEvent;\n#end","package openfl.events; #if !flash\n\n\n/**\n * An object dispatches an ErrorEvent object when an error causes an\n * asynchronous operation to fail.\n *\n * <p>The ErrorEvent class defines only one type of <code>error</code> event:\n * <code>ErrorEvent.ERROR</code>. The ErrorEvent class also serves as the base\n * class for several other error event classes, including the AsyncErrorEvent,\n * IOErrorEvent, SecurityErrorEvent, SQLErrorEvent, and UncaughtErrorEvent\n * classes.</p>\n *\n * <p>You can check for <code>error</code> events that do not have any\n * listeners by registering a listener for the <code>uncaughtError</code>\n * (UncaughtErrorEvent.UNCAUGHT_ERROR) event.</p>\n *\n * <p>An uncaught error also causes an error dialog box displaying the error\n * event to appear when content is running in the debugger version of Flash\n * Player or the AIR Debug Launcher(ADL) application.</p>\n * \n */\nclass ErrorEvent extends TextEvent {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of an\n\t * <code>error</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ERROR:String = \"error\";\n\t\n\t\n\t/**\n\t * Contains the reference number associated with the specific error. For a\n\t * custom ErrorEvent object, this number is the value from the\n\t * <code>id</code> parameter supplied in the constructor.\n\t */\n\tpublic var errorID (default, null):Int;\n\t\n\t\n\t/**\n\t * Creates an Event object that contains information about error events.\n\t * Event objects are passed as parameters to event listeners.\n\t * \n\t * @param type       The type of the event. Event listeners can access this\n\t *                   information through the inherited <code>type</code>\n\t *                   property. There is only one type of error event:\n\t *                   <code>ErrorEvent.ERROR</code>.\n\t * @param bubbles    Determines whether the Event object bubbles. Event\n\t *                   listeners can access this information through the\n\t *                   inherited <code>bubbles</code> property.\n\t * @param cancelable Determines whether the Event object can be canceled.\n\t *                   Event listeners can access this information through the\n\t *                   inherited <code>cancelable</code> property.\n\t * @param text       Text to be displayed as an error message. Event\n\t *                   listeners can access this information through the\n\t *                   <code>text</code> property.\n\t * @param id         A reference number to associate with the specific error\n\t *                  (supported in Adobe AIR only).\n\t */\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\", id:Int = 0):Void {\n\t\t\n\t\tsuper (type, bubbles, cancelable, text);\n\t\terrorID = id;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\treturn new ErrorEvent (type, bubbles, cancelable, text, errorID);\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[ErrorEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" text=\" + text + \" errorID=\" + errorID + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef ErrorEvent = flash.events.ErrorEvent;\n#end","package openfl.events; #if !flash\n\n\nimport openfl.display.InteractiveObject;\n\n\n/**\n * An object dispatches a FocusEvent object when the user changes the focus\n * from one object in the display list to another. There are four types of\n * focus events:\n * <ul>\n *   <li><code>FocusEvent.FOCUS_IN</code></li>\n *   <li><code>FocusEvent.FOCUS_OUT</code></li>\n *   <li><code>FocusEvent.KEY_FOCUS_CHANGE</code></li>\n *   <li><code>FocusEvent.MOUSE_FOCUS_CHANGE</code></li>\n * </ul>\n * \n */\nclass FocusEvent extends Event {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>focusIn</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var FOCUS_IN = \"focusIn\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>focusOut</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var FOCUS_OUT = \"focusOut\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>keyFocusChange</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var KEY_FOCUS_CHANGE = \"keyFocusChange\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseFocusChange</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_FOCUS_CHANGE = \"mouseFocusChange\";\n\t\n\t\n\t/**\n\t * The key code value of the key pressed to trigger a\n\t * <code>keyFocusChange</code> event.\n\t */\n\tpublic var keyCode:Int;\n\t\n\t/**\n\t * A reference to the complementary InteractiveObject instance that is\n\t * affected by the change in focus. For example, when a <code>focusOut</code>\n\t * event occurs, the <code>relatedObject</code> represents the\n\t * InteractiveObject instance that has gained focus.\n\t *\n\t * <p>The value of this property can be <code>null</code> in two\n\t * circumstances: if there no related object, or there is a related object,\n\t * but it is in a security sandbox to which you don't have access. Use the\n\t * <code>isRelatedObjectInaccessible()</code> property to determine which of\n\t * these reasons applies.</p>\n\t */\n\tpublic var relatedObject:InteractiveObject;\n\t\n\t/**\n\t * Indicates whether the Shift key modifier is activated, in which case the\n\t * value is <code>true</code>. Otherwise, the value is <code>false</code>.\n\t * This property is used only if the FocusEvent is of type\n\t * <code>keyFocusChange</code>.\n\t */\n\tpublic var shiftKey:Bool;\n\t\n\t\n\t/**\n\t * Creates an Event object with specific information relevant to focus\n\t * events. Event objects are passed as parameters to event listeners.\n\t * \n\t * @param type          The type of the event. Possible values are:\n\t *                      <code>FocusEvent.FOCUS_IN</code>,\n\t *                      <code>FocusEvent.FOCUS_OUT</code>,\n\t *                      <code>FocusEvent.KEY_FOCUS_CHANGE</code>, and\n\t *                      <code>FocusEvent.MOUSE_FOCUS_CHANGE</code>.\n\t * @param bubbles       Determines whether the Event object participates in\n\t *                      the bubbling stage of the event flow.\n\t * @param cancelable    Determines whether the Event object can be canceled.\n\t * @param relatedObject Indicates the complementary InteractiveObject\n\t *                      instance that is affected by the change in focus. For\n\t *                      example, when a <code>focusIn</code> event occurs,\n\t *                      <code>relatedObject</code> represents the\n\t *                      InteractiveObject that has lost focus.\n\t * @param shiftKey      Indicates whether the Shift key modifier is\n\t *                      activated.\n\t * @param keyCode       Indicates the code of the key pressed to trigger a\n\t *                      <code>keyFocusChange</code> event.\n\t */\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, relatedObject:InteractiveObject = null, shiftKey:Bool = false, keyCode:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.keyCode = keyCode;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.relatedObject = relatedObject;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new FocusEvent (type, bubbles, cancelable, relatedObject, shiftKey, keyCode);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\t#if !lime_legacy\n\t\tevent.eventPhase = eventPhase;\n\t\t#end\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[FocusEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" relatedObject=\" + relatedObject + \" shiftKey=\" + shiftKey + \" keyCode=\" + keyCode + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef FocusEvent = flash.events.FocusEvent;\n#end","package openfl.events; #if !flash\n\n\n/**\n * An IOErrorEvent object is dispatched when an error causes input or output\n * operations to fail.\n *\n * <p>You can check for error events that do not have any listeners by using\n * the debugger version of Flash Player or the AIR Debug Launcher(ADL). The\n * string defined by the <code>text</code> parameter of the IOErrorEvent\n * constructor is displayed.</p>\n * \n */\nclass IOErrorEvent extends ErrorEvent {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of an\n\t * <code>ioError</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var IO_ERROR = \"ioError\";\n\t\n\t\n\t/**\n\t * Creates an Event object that contains specific information about\n\t * <code>ioError</code> events. Event objects are passed as parameters to\n\t * Event listeners.\n\t * \n\t * @param type       The type of the event. Event listeners can access this\n\t *                   information through the inherited <code>type</code>\n\t *                   property. There is only one type of input/output error\n\t *                   event: <code>IOErrorEvent.IO_ERROR</code>.\n\t * @param bubbles    Determines whether the Event object participates in the\n\t *                   bubbling stage of the event flow. Event listeners can\n\t *                   access this information through the inherited\n\t *                   <code>bubbles</code> property.\n\t * @param cancelable Determines whether the Event object can be canceled.\n\t *                   Event listeners can access this information through the\n\t *                   inherited <code>cancelable</code> property.\n\t * @param text       Text to be displayed as an error message. Event\n\t *                   listeners can access this information through the\n\t *                   <code>text</code> property.\n\t * @param id         A reference number to associate with the specific error\n\t *                  (supported in Adobe AIR only).\n\t */\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, text:String = \"\", id:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable, text, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\treturn new IOErrorEvent (type, bubbles, cancelable, text, errorID);\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[IOErrorEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" text=\" + text + \" errorID=\" + errorID + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef IOErrorEvent = flash.events.IOErrorEvent;\n#end","package openfl.events; #if !flash #if !lime_legacy\n\n\nimport openfl.ui.KeyLocation;\n\n\n/**\n * A KeyboardEvent object id dispatched in response to user input through a\n * keyboard. There are two types of keyboard events:\n * <code>KeyboardEvent.KEY_DOWN</code> and <code>KeyboardEvent.KEY_UP</code>\n *\n * <p>Because mappings between keys and specific characters vary by device and\n * operating system, use the TextEvent event type for processing character\n * input.</p>\n *\n * <p>To listen globally for key events, listen on the Stage for the capture\n * and target or bubble phase.</p>\n * \n */\nclass KeyboardEvent extends Event {\n\t\n\t\n\t/**\n\t * The <code>KeyboardEvent.KEY_DOWN</code> constant defines the value of the\n\t * <code>type</code> property of a <code>keyDown</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var KEY_DOWN = \"keyDown\";\n\t\n\t/**\n\t * The <code>KeyboardEvent.KEY_UP</code> constant defines the value of the\n\t * <code>type</code> property of a <code>keyUp</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var KEY_UP = \"keyUp\";\n\t\n\t\n\t/**\n\t * Indicates whether the Alt key is active(<code>true</code>) or inactive\n\t * (<code>false</code>) on Windows; indicates whether the Option key is\n\t * active on Mac OS.\n\t */\n\tpublic var altKey:Bool;\n\t\n\t/**\n\t * Contains the character code value of the key pressed or released. The\n\t * character code values are English keyboard values. For example, if you\n\t * press Shift+3, <code>charCode</code> is # on a Japanese keyboard, just as\n\t * it is on an English keyboard.\n\t *\n\t * <p><b>Note: </b>When an input method editor(IME) is running,\n\t * <code>charCode</code> does not report accurate character codes.</p>\n\t */\n\tpublic var charCode:Int;\n\t\n\t/**\n\t * On Windows and Linux, indicates whether the Ctrl key is active\n\t * (<code>true</code>) or inactive(<code>false</code>); On Mac OS, indicates\n\t * whether either the Ctrl key or the Command key is active.\n\t */\n\tpublic var ctrlKey:Bool;\n\tpublic var commandKey:Bool;\n\tpublic var controlKey:Bool;\n\t\n\t/**\n\t * The key code value of the key pressed or released.\n\t *\n\t * <p><b>Note: </b>When an input method editor(IME) is running,\n\t * <code>keyCode</code> does not report accurate key codes.</p>\n\t */\n\tpublic var keyCode:Int;\n\t\n\t/**\n\t * Indicates the location of the key on the keyboard. This is useful for\n\t * differentiating keys that appear more than once on a keyboard. For\n\t * example, you can differentiate between the left and right Shift keys by\n\t * the value of this property: <code>KeyLocation.LEFT</code> for the left and\n\t * <code>KeyLocation.RIGHT</code> for the right. Another example is\n\t * differentiating between number keys pressed on the standard keyboard\n\t * (<code>KeyLocation.STANDARD</code>) versus the numeric keypad\n\t * (<code>KeyLocation.NUM_PAD</code>).\n\t */\n\tpublic var keyLocation:KeyLocation;\n\t\n\t/**\n\t * Indicates whether the Shift key modifier is active(<code>true</code>) or\n\t * inactive(<code>false</code>).\n\t */\n\tpublic var shiftKey:Bool;\n\t\n\t\n\t/**\n\t * Creates an Event object that contains specific information about keyboard\n\t * events. Event objects are passed as parameters to event listeners.\n\t * \n\t * @param type             The type of the event. Possible values are:\n\t *                         <code>KeyboardEvent.KEY_DOWN</code> and\n\t *                         <code>KeyboardEvent.KEY_UP</code>\n\t * @param bubbles          Determines whether the Event object participates\n\t *                         in the bubbling stage of the event flow.\n\t * @param cancelable       Determines whether the Event object can be\n\t *                         canceled.\n\t * @param charCodeValue    The character code value of the key pressed or\n\t *                         released. The character code values returned are\n\t *                         English keyboard values. For example, if you press\n\t *                         Shift+3, the <code>Keyboard.charCode()</code>\n\t *                         property returns # on a Japanese keyboard, just as\n\t *                         it does on an English keyboard.\n\t * @param keyCodeValue     The key code value of the key pressed or released.\n\t * @param keyLocationValue The location of the key on the keyboard.\n\t * @param ctrlKeyValue     On Windows, indicates whether the Ctrl key is\n\t *                         activated. On Mac, indicates whether either the\n\t *                         Ctrl key or the Command key is activated.\n\t * @param altKeyValue      Indicates whether the Alt key modifier is\n\t *                         activated(Windows only).\n\t * @param shiftKeyValue    Indicates whether the Shift key modifier is\n\t *                         activated.\n\t * @param commandKeyValue  Indicates whether the Command key modifier is\n\t *                         activated.\n\t */\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, charCodeValue:Int = 0, keyCodeValue:Int = 0, keyLocationValue:KeyLocation = null, ctrlKeyValue:Bool = false, altKeyValue:Bool = false, shiftKeyValue:Bool = false, controlKeyValue:Bool = false, commandKeyValue:Bool = false) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tcharCode = charCodeValue;\n\t\tkeyCode = keyCodeValue;\n\t\tkeyLocation = keyLocationValue != null ? keyLocationValue : KeyLocation.STANDARD;\n\t\tctrlKey = ctrlKeyValue;\n\t\taltKey = altKeyValue;\n\t\tshiftKey = shiftKeyValue;\n\t\tcontrolKey = controlKeyValue;\n\t\tcommandKey = commandKeyValue;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\treturn new KeyboardEvent (type, bubbles, cancelable, charCode, keyCode, keyLocation, ctrlKey, altKey, shiftKey, controlKey, commandKey);\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[KeyboardEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" charCode=\" + charCode + \" keyCode=\" + keyCode + \" keyLocation=\" + keyLocation + \" ctrlKey=\" + ctrlKey + \" altKey=\" + altKey + \" shiftKey=\" + shiftKey + \"]\";\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef KeyboardEvent = openfl._v2.events.KeyboardEvent;\n#end\n#else\ntypedef KeyboardEvent = flash.events.KeyboardEvent;\n#end","package openfl.events; #if !flash #if !lime_legacy\n\n\nimport openfl.display.InteractiveObject;\nimport openfl.geom.Point;\n\n\n/**\n * A MouseEvent object is dispatched into the event flow whenever mouse events\n * occur. A mouse event is usually generated by a user input device, such as a\n * mouse or a trackball, that uses a pointer.\n *\n * <p>When nested nodes are involved, mouse events target the deepest possible\n * nested node that is visible in the display list. This node is called the\n * <i>target node</i>. To have a target node's ancestor receive notification\n * of a mouse event, use <code>EventDispatcher.addEventListener()</code> on\n * the ancestor node with the <code>type</code> parameter set to the specific\n * mouse event you want to detect.</p>\n * \n */\nclass MouseEvent extends Event {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>click</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var CLICK:String = \"click\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>doubleClick</code> event object. The <code>doubleClickEnabled</code>\n\t * property must be <code>true</code> for an object to generate the\n\t * <code>doubleClick</code> event.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var DOUBLE_CLICK:String = \"doubleClick\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>middleClick</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MIDDLE_CLICK:String = \"middleClick\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>middleMouseDown</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MIDDLE_MOUSE_DOWN:String = \"middleMouseDown\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>middleMouseUp</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MIDDLE_MOUSE_UP:String = \"middleMouseUp\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseDown</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_DOWN:String = \"mouseDown\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseMove</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_MOVE:String = \"mouseMove\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseOut</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_OUT:String = \"mouseOut\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseOver</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_OVER:String = \"mouseOver\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseUp</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_UP:String = \"mouseUp\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>mouseWheel</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var MOUSE_WHEEL:String = \"mouseWheel\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>rightClick</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var RIGHT_CLICK:String = \"rightClick\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>rightMouseDown</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var RIGHT_MOUSE_DOWN:String = \"rightMouseDown\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>rightMouseUp</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var RIGHT_MOUSE_UP:String = \"rightMouseUp\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>rollOut</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ROLL_OUT:String = \"rollOut\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>rollOver</code> event object.\n\t *\n\t * <p>This event has the following properties:</p>\n\t */\n\tpublic static var ROLL_OVER:String = \"rollOver\";\n\n\t@:noCompletion private static var __buttonDown = [ false, false, false ];\n\t\n\t\n\t/**\n\t * Indicates whether the Alt key is active(<code>true</code>) or inactive\n\t * (<code>false</code>). Supported for Windows only. On other operating\n\t * systems, this property is always set to <code>false</code>.\n\t */\n\tpublic var altKey:Bool;\n\t\n\t/**\n\t * Indicates whether the primary mouse button is pressed(<code>true</code>)\n\t * or not(<code>false</code>).\n\t */\n\tpublic var buttonDown:Bool;\n\tpublic var commandKey:Bool;\n\tpublic var clickCount:Int;\n\t\n\t/**\n\t * On Windows or Linux, indicates whether the Ctrl key is active\n\t * (<code>true</code>) or inactive(<code>false</code>). On Macintosh,\n\t * indicates whether either the Control key or the Command key is activated.\n\t */\n\tpublic var ctrlKey:Bool;\n\t\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates\n\t * the mouse wheel. A positive delta value indicates an upward scroll; a\n\t * negative value indicates a downward scroll. Typical values are 1 to 3, but\n\t * faster rotation may produce larger values. This setting depends on the\n\t * device and operating system and is usually configurable by the user. This\n\t * property applies only to the <code>MouseEvent.mouseWheel</code> event.\n\t */\n\tpublic var delta:Int;\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred relative to the\n\t * containing sprite.\n\t */\n\tpublic var localX:Float;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred relative to the\n\t * containing sprite.\n\t */\n\tpublic var localY:Float;\n\t\n\t/**\n\t * A reference to a display list object that is related to the event. For\n\t * example, when a <code>mouseOut</code> event occurs,\n\t * <code>relatedObject</code> represents the display list object to which the\n\t * pointing device now points. This property applies to the\n\t * <code>mouseOut</code>, <code>mouseOver</code>, <code>rollOut</code>, and\n\t * <code>rollOver</code> events.\n\t *\n\t * <p>The value of this property can be <code>null</code> in two\n\t * circumstances: if there no related object, or there is a related object,\n\t * but it is in a security sandbox to which you don't have access. Use the\n\t * <code>isRelatedObjectInaccessible()</code> property to determine which of\n\t * these reasons applies.</p>\n\t */\n\tpublic var relatedObject:InteractiveObject;\n\t\n\t/**\n\t * Indicates whether the Shift key is active(<code>true</code>) or inactive\n\t * (<code>false</code>).\n\t */\n\tpublic var shiftKey:Bool;\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in global Stage\n\t * coordinates. This property is calculated when the <code>localX</code>\n\t * property is set.\n\t */\n\tpublic var stageX:Float;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in global Stage\n\t * coordinates. This property is calculated when the <code>localY</code>\n\t * property is set.\n\t */\n\tpublic var stageY:Float;\n\t\n\t\n\t/**\n\t * Creates an Event object that contains information about mouse events.\n\t * Event objects are passed as parameters to event listeners.\n\t * \n\t * @param type          The type of the event. Possible values are:\n\t *                      <code>MouseEvent.CLICK</code>,\n\t *                      <code>MouseEvent.DOUBLE_CLICK</code>,\n\t *                      <code>MouseEvent.MOUSE_DOWN</code>,\n\t *                      <code>MouseEvent.MOUSE_MOVE</code>,\n\t *                      <code>MouseEvent.MOUSE_OUT</code>,\n\t *                      <code>MouseEvent.MOUSE_OVER</code>,\n\t *                      <code>MouseEvent.MOUSE_UP</code>,\n\t *                      <code>MouseEvent.MIDDLE_CLICK</code>,\n\t *                      <code>MouseEvent.MIDDLE_MOUSE_DOWN</code>,\n\t *                      <code>MouseEvent.MIDDLE_MOUSE_UP</code>,\n\t *                      <code>MouseEvent.RIGHT_CLICK</code>,\n\t *                      <code>MouseEvent.RIGHT_MOUSE_DOWN</code>,\n\t *                      <code>MouseEvent.RIGHT_MOUSE_UP</code>,\n\t *                      <code>MouseEvent.MOUSE_WHEEL</code>,\n\t *                      <code>MouseEvent.ROLL_OUT</code>, and\n\t *                      <code>MouseEvent.ROLL_OVER</code>.\n\t * @param bubbles       Determines whether the Event object participates in\n\t *                      the bubbling phase of the event flow.\n\t * @param cancelable    Determines whether the Event object can be canceled.\n\t * @param localX        The horizontal coordinate at which the event occurred\n\t *                      relative to the containing sprite.\n\t * @param localY        The vertical coordinate at which the event occurred\n\t *                      relative to the containing sprite.\n\t * @param relatedObject The complementary InteractiveObject instance that is\n\t *                      affected by the event. For example, when a\n\t *                      <code>mouseOut</code> event occurs,\n\t *                      <code>relatedObject</code> represents the display\n\t *                      list object to which the pointing device now points.\n\t * @param ctrlKey       On Windows or Linux, indicates whether the Ctrl key\n\t *                      is activated. On Mac, indicates whether either the\n\t *                      Ctrl key or the Command key is activated.\n\t * @param altKey        Indicates whether the Alt key is activated(Windows\n\t *                      or Linux only).\n\t * @param shiftKey      Indicates whether the Shift key is activated.\n\t * @param buttonDown    Indicates whether the primary mouse button is\n\t *                      pressed.\n\t * @param delta         Indicates how many lines should be scrolled for each\n\t *                      unit the user rotates the mouse wheel. A positive\n\t *                      delta value indicates an upward scroll; a negative\n\t *                      value indicates a downward scroll. Typical values are\n\t *                      1 to 3, but faster rotation may produce larger\n\t *                      values. This parameter is used only for the\n\t *                      <code>MouseEvent.mouseWheel</code> event.\n\t */\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.bubbles = bubbles;\n\t\tthis.relatedObject = relatedObject;\n\t\tthis.delta = delta;\n\t\tthis.localX = localX;\n\t\tthis.localY = localY;\n\t\tthis.buttonDown = buttonDown;\n\t\tthis.commandKey = commandKey;\n\t\tthis.clickCount = clickCount;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public static function __create (type:String, button:Int, local:Point, target:InteractiveObject):MouseEvent {\n\t\t\n\t\tvar delta = 2;\n\t\t\n\t\t/*if (type == MouseEvent.MOUSE_WHEEL) {\n\t\t\t\n\t\t\tvar mouseEvent:Dynamic = event;\n\t\t\tif (mouseEvent.wheelDelta) { // IE/Opera.\n\t\t\t\t#if (!haxe_210 && !haxe3)\n\t\t\t\tif (js.Lib.isOpera)\n\t\t\t\t\tdelta = Std.int (mouseEvent.wheelDelta / 40);\n\t\t\t\telse\n\t\t\t\t#end\n\t\t\t\t\tdelta = Std.int (mouseEvent.wheelDelta / 120);\n\t\t\t} else if (mouseEvent.detail) { // Mozilla case.\n\t\t\t\t\n\t\t\t\tStd.int (-mouseEvent.detail);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}*/\n\t\t\n\t\t// source: http://unixpapa.com/js/mouse.html\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase MouseEvent.MOUSE_DOWN, MouseEvent.MIDDLE_MOUSE_DOWN, MouseEvent.RIGHT_MOUSE_DOWN:\n\t\t\t\t\n\t\t\t\t__buttonDown[button] = true;\n\t\t\t\t\n\t\t\tcase MouseEvent.MOUSE_UP, MouseEvent.MIDDLE_MOUSE_UP, MouseEvent.RIGHT_MOUSE_UP:\n\t\t\t\t\n\t\t\t\t__buttonDown[button] = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pseudoEvent = new MouseEvent (type, true, false, local.x, local.y, null, false, false, false/*event.ctrlKey, event.altKey, event.shiftKey*/, __buttonDown[button], delta);\n\t\tpseudoEvent.stageX = Lib.current.stage.mouseX;\n\t\tpseudoEvent.stageY = Lib.current.stage.mouseY;\n\t\tpseudoEvent.target = target;\n\t\t\n\t\treturn pseudoEvent;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\treturn new MouseEvent (type, bubbles, cancelable, localX, localY, relatedObject, ctrlKey, altKey, shiftKey, buttonDown, delta, commandKey, clickCount);\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn \"[MouseEvent type=\" + type + \" bubbles=\" + bubbles + \" cancelable=\" + cancelable + \" localX=\" + localX + \" localY=\" + localY + \" relatedObject=\" + relatedObject + \" ctrlKey=\" + ctrlKey + \" altKey=\" + altKey + \" shiftKey=\" + shiftKey + \" buttonDown=\" + buttonDown + \" delta=\" + delta + \"]\";\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Instructs Flash Player or Adobe AIR to render after processing of this\n\t * event completes, if the display list has been modified.\n\t * \n\t */\n\tpublic function updateAfterEvent ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef MouseEvent = openfl._v2.events.MouseEvent;\n#end\n#else\ntypedef MouseEvent = flash.events.MouseEvent;\n#end","package openfl.events; #if !flash #if !lime_legacy\n\n\nimport openfl.display.InteractiveObject;\nimport openfl.geom.Point;\n\n\n/**\n * The TouchEvent class lets you handle events on devices that detect user\n * contact with the device(such as a finger on a touch screen). When a user\n * interacts with a device such as a mobile phone or tablet with a touch\n * screen, the user typically touches the screen with his or her fingers or a\n * pointing device. You can develop applications that respond to basic touch\n * events(such as a single finger tap) with the TouchEvent class. Create\n * event listeners using the event types defined in this class. For user\n * interaction with multiple points of contact(such as several fingers moving\n * across a touch screen at the same time) use the related GestureEvent,\n * PressAndTapGestureEvent, and TransformGestureEvent classes. And, use the\n * properties and methods of these classes to construct event handlers that\n * respond to the user touching the device.\n *\n * <p>Use the Multitouch class to determine the current environment's support\n * for touch interaction, and to manage the support of touch interaction if\n * the current environment supports it.</p>\n *\n * <p><b>Note:</b> When objects are nested on the display list, touch events\n * target the deepest possible nested object that is visible in the display\n * list. This object is called the target node. To have a target node's\n * ancestor(an object containing the target node in the display list) receive\n * notification of a touch event, use\n * <code>EventDispatcher.addEventListener()</code> on the ancestor node with\n * the type parameter set to the specific touch event you want to detect.</p>\n * \n */\nclass TouchEvent extends Event {\n\t\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_BEGIN</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_BEGIN:String = \"touchBegin\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_END</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_END:String = \"touchEnd\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_MOVE</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_MOVE:String = \"touchMove\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_OUT</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_OUT:String = \"touchOut\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_OVER</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_OVER:String = \"touchOver\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_ROLL_OUT</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_ROLL_OUT:String = \"touchRollOut\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_ROLL_OVER</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_ROLL_OVER:String = \"touchRollOver\";\n\t\n\t/**\n\t * Defines the value of the <code>type</code> property of a\n\t * <code>TOUCH_TAP</code> touch event object.\n\t *\n\t * <p>The dispatched TouchEvent object has the following properties:</p>\n\t */\n\tpublic static inline var TOUCH_TAP:String = \"touchTap\";\n\t\n\t\n\t/**\n\t * Indicates whether the Alt key is active(<code>true</code>) or inactive\n\t * (<code>false</code>). Supported for Windows and Linux operating systems\n\t * only.\n\t */\n\tpublic var altKey:Bool;\n\tpublic var buttonDown:Bool;\n\tpublic var commandKey:Bool;\n\t\n\t/**\n\t * On Windows or Linux, indicates whether the Ctrl key is active\n\t * (<code>true</code>) or inactive(<code>false</code>). On Macintosh,\n\t * indicates whether either the Control key or the Command key is activated.\n\t */\n\tpublic var ctrlKey:Bool;\n\tpublic var delta:Int;\n\t\n\t/**\n\t * Indicates whether the first point of contact is mapped to mouse events.\n\t */\n\tpublic var isPrimaryTouchPoint:Bool;\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred relative to the\n\t * containing sprite.\n\t */\n\tpublic var localX:Float;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred relative to the\n\t * containing sprite.\n\t */\n\tpublic var localY:Float;\n\t\n\t/**\n\t * A value between <code>0.0</code> and <code>1.0</code> indicating force of\n\t * the contact with the device. If the device does not support detecting the\n\t * pressure, the value is <code>1.0</code>.\n\t */\n\tpublic var pressure:Float;\n\t\n\t/**\n\t * A reference to a display list object that is related to the event. For\n\t * example, when a <code>touchOut</code> event occurs,\n\t * <code>relatedObject</code> represents the display list object to which the\n\t * pointing device now points. This property applies to the\n\t * <code>touchOut</code>, <code>touchOver</code>, <code>touchRollOut</code>,\n\t * and <code>touchRollOver</code> events.\n\t *\n\t * <p>The value of this property can be <code>null</code> in two\n\t * circumstances: if there is no related object, or there is a related\n\t * object, but it is in a security sandbox to which you don't have access.\n\t * Use the <code>isRelatedObjectInaccessible()</code> property to determine\n\t * which of these reasons applies.</p>\n\t */\n\tpublic var relatedObject:InteractiveObject;\n\t\n\t/**\n\t * Indicates whether the Shift key is active(<code>true</code>) or inactive\n\t * (<code>false</code>).\n\t */\n\tpublic var shiftKey:Bool;\n\t\n\t/**\n\t * Width of the contact area.\n\t * Only supported on Android(C++ target), in the range of 0-1.\n\t */\n\tpublic var sizeX:Float;\n\t\n\t/**\n\t * Height of the contact area.\n\t * Only supported on Android(C++ target), in the range of 0-1.\n\t */\n\tpublic var sizeY:Float;\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in global Stage\n\t * coordinates. This property is calculated when the <code>localX</code>\n\t * property is set.\n\t */\n\tpublic var stageX:Float;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in global Stage\n\t * coordinates. This property is calculated when the <code>localY</code>\n\t * property is set.\n\t */\n\tpublic var stageY:Float;\n\t\n\t/**\n\t * A unique identification number(as an int) assigned to the touch point.\n\t */\n\tpublic var touchPointID:Int;\n\t\n\t\n\t/**\n\t * Creates an Event object that contains information about touch events.\n\t * Event objects are passed as parameters to event listeners.\n\t * \n\t * @param type                The type of the event. Possible values are:\n\t *                            <code>TouchEvent.TOUCH_BEGIN</code>,\n\t *                            <code>TouchEvent.TOUCH_END</code>,\n\t *                            <code>TouchEvent.TOUCH_MOVE</code>,\n\t *                            <code>TouchEvent.TOUCH_OUT</code>,\n\t *                            <code>TouchEvent.TOUCH_OVER</code>,\n\t *                            <code>TouchEvent.TOUCH_ROLL_OUT</code>,\n\t *                            <code>TouchEvent.TOUCH_ROLL_OVER</code>, and\n\t *                            <code>TouchEvent.TOUCH_TAP</code>.\n\t * @param bubbles             Determines whether the Event object\n\t *                            participates in the bubbling phase of the event\n\t *                            flow.\n\t * @param cancelable          Determines whether the Event object can be\n\t *                            canceled.\n\t * @param touchPointID        A unique identification number(as an int)\n\t *                            assigned to the touch point.\n\t * @param isPrimaryTouchPoint Indicates whether the first point of contact is\n\t *                            mapped to mouse events.\n\t * @param relatedObject       The complementary InteractiveObject instance\n\t *                            that is affected by the event. For example,\n\t *                            when a <code>touchOut</code> event occurs,\n\t *                            <code>relatedObject</code> represents the\n\t *                            display list object to which the pointing\n\t *                            device now points.\n\t * @param ctrlKey             On Windows or Linux, indicates whether the Ctrl\n\t *                            key is activated. On Mac, indicates whether\n\t *                            either the Ctrl key or the Command key is\n\t *                            activated.\n\t * @param altKey              Indicates whether the Alt key is activated\n\t *                           (Windows or Linux only).\n\t * @param shiftKey            Indicates whether the Shift key is activated.\n\t */\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, sizeX:Float = 1, sizeY:Float = 1, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.bubbles = bubbles;\n\t\tthis.relatedObject = relatedObject;\n\t\tthis.delta = delta;\n\t\tthis.localX = localX;\n\t\tthis.localY = localY;\n\t\tthis.sizeX = sizeX;\n\t\tthis.sizeY = sizeY;\n\t\tthis.buttonDown = buttonDown;\n\t\tthis.commandKey = commandKey;\n\t\t\n\t\tpressure = 1;\n\t\ttouchPointID = 0;\n\t\tisPrimaryTouchPoint = true;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Instructs Flash Player or Adobe AIR to render after processing of this\n\t * event completes, if the display list has been modified.\n\t * \n\t */\n\tpublic function updateAfterEvent ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public static function __create (type:String, /*event:lime.ui.TouchEvent,*/ touch:Dynamic /*js.html.Touch*/, local:Point, target:InteractiveObject):TouchEvent {\n\t\t\n\t\t#if js\n\t\tvar evt = new TouchEvent (type, true, false, local.x, local.y, null, false, false, false/*event.ctrlKey, event.altKey, event.shiftKey*/, false /* note: buttonDown not supported on w3c spec */, 0, 0);\n\t\t\n\t\tevt.stageX = Lib.current.stage.mouseX;\n\t\tevt.stageY = Lib.current.stage.mouseY;\n\t\tevt.target = target;\n\t\t\n\t\treturn evt;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef TouchEvent = openfl._v2.events.TouchEvent;\n#end\n#else\ntypedef TouchEvent = flash.events.TouchEvent;\n#end","package openfl.media; #if !flash #if !lime_legacy\n\n\nimport haxe.io.Path;\nimport lime.audio.AudioBuffer;\nimport lime.audio.AudioSource;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.events.IOErrorEvent;\nimport openfl.net.URLRequest;\nimport openfl.utils.ByteArray;\n\n\n/**\n * The Sound class lets you work with sound in an application. The Sound class\n * lets you create a Sound object, load and play an external MP3 file into\n * that object, close the sound stream, and access data about the sound, such\n * as information about the number of bytes in the stream and ID3 metadata.\n * More detailed control of the sound is performed through the sound source\n *  -  the SoundChannel or Microphone object for the sound  -  and through the\n * properties in the SoundTransform class that control the output of the sound\n * to the computer's speakers.\n *\n * <p>In Flash Player 10 and later and AIR 1.5 and later, you can also use\n * this class to work with sound that is generated dynamically. In this case,\n * the Sound object uses the function you assign to a <code>sampleData</code>\n * event handler to poll for sound data. The sound is played as it is\n * retrieved from a ByteArray object that you populate with sound data. You\n * can use <code>Sound.extract()</code> to extract sound data from a Sound\n * object, after which you can manipulate it before writing it back to the\n * stream for playback.</p>\n *\n * <p>To control sounds that are embedded in a SWF file, use the properties in\n * the SoundMixer class.</p>\n *\n * <p><b>Note</b>: The ActionScript 3.0 Sound API differs from ActionScript\n * 2.0. In ActionScript 3.0, you cannot take sound objects and arrange them in\n * a hierarchy to control their properties.</p>\n *\n * <p>When you use this class, consider the following security model: </p>\n *\n * <ul>\n *   <li>Loading and playing a sound is not allowed if the calling file is in\n * a network sandbox and the sound file to be loaded is local.</li>\n *   <li>By default, loading and playing a sound is not allowed if the calling\n * file is local and tries to load and play a remote sound. A user must grant\n * explicit permission to allow this type of access.</li>\n *   <li>Certain operations dealing with sound are restricted. The data in a\n * loaded sound cannot be accessed by a file in a different domain unless you\n * implement a cross-domain policy file. Sound-related APIs that fall under\n * this restriction are <code>Sound.id3</code>,\n * <code>SoundMixer.computeSpectrum()</code>,\n * <code>SoundMixer.bufferTime</code>, and the <code>SoundTransform</code>\n * class.</li>\n * </ul>\n *\n * <p>However, in Adobe AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n * \n * @event complete   Dispatched when data has loaded successfully.\n * @event id3        Dispatched by a Sound object when ID3 data is available\n *                   for an MP3 sound.\n * @event ioError    Dispatched when an input/output error occurs that causes\n *                   a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as a load operation\n *                   progresses.\n * @event sampleData Dispatched when the runtime requests new audio data.\n */\n\n@:autoBuild(openfl.Assets.embedSound())\n\n\nclass Sound extends EventDispatcher {\n\t\n\t\n\t#if html5\n\t@:noCompletion private static var __registeredSounds = new Map<String, Bool> ();\n\t#end\n\t\n\t/**\n\t * Returns the currently available number of bytes in this sound object. This\n\t * property is usually useful only for externally loaded files.\n\t */\n\tpublic var bytesLoaded (default, null):Int;\n\t\n\t/**\n\t * Returns the total number of bytes in this sound object.\n\t */\n\tpublic var bytesTotal (default, null):Int;\n\t\n\t/**\n\t * Provides access to the metadata that is part of an MP3 file.\n\t *\n\t * <p>MP3 sound files can contain ID3 tags, which provide metadata about the\n\t * file. If an MP3 sound that you load using the <code>Sound.load()</code>\n\t * method contains ID3 tags, you can query these properties. Only ID3 tags\n\t * that use the UTF-8 character set are supported.</p>\n\t *\n\t * <p>Flash Player 9 and later and AIR support ID3 2.0 tags, specifically 2.3\n\t * and 2.4. The following tables list the standard ID3 2.0 tags and the type\n\t * of content the tags represent. The <code>Sound.id3</code> property\n\t * provides access to these tags through the format\n\t * <code>my_sound.id3.COMM</code>, <code>my_sound.id3.TIME</code>, and so on.\n\t * The first table describes tags that can be accessed either through the ID3\n\t * 2.0 property name or the ActionScript property name. The second table\n\t * describes ID3 tags that are supported but do not have predefined\n\t * properties in ActionScript. </p>\n\t *\n\t * <p>When using this property, consider the Flash Player security model:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>id3</code> property of a Sound object is always permitted\n\t * for SWF files that are in the same security sandbox as the sound file. For\n\t * files in other sandboxes, there are security checks.</li>\n\t *   <li>When you load the sound, using the <code>load()</code> method of the\n\t * Sound class, you can specify a <code>context</code> parameter, which is a\n\t * SoundLoaderContext object. If you set the <code>checkPolicyFile</code>\n\t * property of the SoundLoaderContext object to <code>true</code>, Flash\n\t * Player checks for a URL policy file on the server from which the sound is\n\t * loaded. If a policy file exists and permits access from the domain of the\n\t * loading SWF file, then the file is allowed to access the <code>id3</code>\n\t * property of the Sound object; otherwise it is not.</li>\n\t * </ul>\n\t *\n\t * <p>However, in Adobe AIR, content in the <code>application</code> security\n\t * sandbox(content installed with the AIR application) are not restricted by\n\t * these security limitations.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t */\n\tpublic var id3 (get, null):ID3Info;\n\t\n\t/**\n\t * Returns the buffering state of external MP3 files. If the value is\n\t * <code>true</code>, any playback is currently suspended while the object\n\t * waits for more data.\n\t */\n\tpublic var isBuffering (default, null):Bool;\n\t\n\t/**\n\t * The length of the current sound in milliseconds.\n\t */\n\tpublic var length (default, null):Float;\n\t\n\t/**\n\t * The URL from which this sound was loaded. This property is applicable only\n\t * to Sound objects that were loaded using the <code>Sound.load()</code>\n\t * method. For Sound objects that are associated with a sound asset from a\n\t * SWF file's library, the value of the <code>url</code> property is\n\t * <code>null</code>.\n\t *\n\t * <p>When you first call <code>Sound.load()</code>, the <code>url</code>\n\t * property initially has a value of <code>null</code>, because the final URL\n\t * is not yet known. The <code>url</code> property will have a non-null value\n\t * as soon as an <code>open</code> event is dispatched from the Sound\n\t * object.</p>\n\t *\n\t * <p>The <code>url</code> property contains the final, absolute URL from\n\t * which a sound was loaded. The value of <code>url</code> is usually the\n\t * same as the value passed to the <code>stream</code> parameter of\n\t * <code>Sound.load()</code>. However, if you passed a relative URL to\n\t * <code>Sound.load()</code> the value of the <code>url</code> property\n\t * represents the absolute URL. Additionally, if the original URL request is\n\t * redirected by an HTTP server, the value of the <code>url</code> property\n\t * reflects the final URL from which the sound file was actually downloaded.\n\t * This reporting of an absolute, final URL is equivalent to the behavior of\n\t * <code>LoaderInfo.url</code>.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic var url (default, null):String;\n\t\n\t@:noCompletion private var __buffer:AudioBuffer;\n\t\n\t#if html5\n\t@:noCompletion private var __sound:SoundJSInstance;\n\t@:noCompletion private var __soundID:String;\n\t#end\n\t\n\t\n\t/**\n\t * Creates a new Sound object. If you pass a valid URLRequest object to the\n\t * Sound constructor, the constructor automatically calls the\n\t * <code>load()</code> function for the Sound object. If you do not pass a\n\t * valid URLRequest object to the Sound constructor, you must call the\n\t * <code>load()</code> function for the Sound object yourself, or the stream\n\t * will not load.\n\t *\n\t * <p>Once <code>load()</code> is called on a Sound object, you can't later\n\t * load a different sound file into that Sound object. To load a different\n\t * sound file, create a new Sound object.</p>\n\t * In Flash Player 10 and later and AIR 1.5 and later, instead of using\n\t * <code>load()</code>, you can use the <code>sampleData</code> event handler\n\t * to load sound dynamically into the Sound object.\n\t * \n\t * @param stream  The URL that points to an external MP3 file.\n\t * @param context An optional SoundLoader context object, which can define\n\t *                the buffer time(the minimum number of milliseconds of MP3\n\t *                data to hold in the Sound object's buffer) and can specify\n\t *                whether the application should check for a cross-domain\n\t *                policy file prior to loading the sound.\n\t */\n\tpublic function new (stream:URLRequest = null, context:SoundLoaderContext = null) {\n\t\t\n\t\tsuper (this);\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tid3 = null;\n\t\tisBuffering = false;\n\t\tlength = 0;\n\t\turl = null;\n\t\t\n\t\tif (stream != null) {\n\t\t\t\n\t\t\tload (stream, context);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Closes the stream, causing any download of data to cease. No data may be\n\t * read from the stream after the <code>close()</code> method is called.\n\t * \n\t * @throws IOError The stream could not be closed, or the stream was not\n\t *                 open.\n\t */\n\tpublic function close ():Void {\n\t\t\n\t\t#if !html5\n\t\tif (__buffer != null) {\n\t\t\t\n\t\t\t__buffer.dispose ();\n\t\t\t\n\t\t}\n\t\t#else\n\t\tif (__registeredSounds.exists (__soundID)) {\n\t\t\t\n\t\t\tSoundJS.removeSound (__soundID);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromAudioBuffer (buffer:AudioBuffer):Sound {\n\t\t\n\t\tvar sound = new Sound ();\n\t\tsound.__buffer = buffer;\n\t\treturn sound;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Initiates loading of an external MP3 file from the specified URL. If you\n\t * provide a valid URLRequest object to the Sound constructor, the\n\t * constructor calls <code>Sound.load()</code> for you. You only need to call\n\t * <code>Sound.load()</code> yourself if you don't pass a valid URLRequest\n\t * object to the Sound constructor or you pass a <code>null</code> value.\n\t *\n\t * <p>Once <code>load()</code> is called on a Sound object, you can't later\n\t * load a different sound file into that Sound object. To load a different\n\t * sound file, create a new Sound object.</p>\n\t *\n\t * <p>When using this method, consider the following security model:</p>\n\t *\n\t * <ul>\n\t *   <li>Calling <code>Sound.load()</code> is not allowed if the calling file\n\t * is in the local-with-file-system sandbox and the sound is in a network\n\t * sandbox.</li>\n\t *   <li>Access from the local-trusted or local-with-networking sandbox\n\t * requires permission from a website through a URL policy file.</li>\n\t *   <li>You cannot connect to commonly reserved ports. For a complete list\n\t * of blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript\n\t * 3.0 Developer's Guide</i>.</li>\n\t *   <li>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</li>\n\t * </ul>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standards). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>In Adobe AIR, content in the <code>application</code> security sandbox\n\t * (content installed with the AIR application) are not restricted by these\n\t * security limitations.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t * \n\t * @param stream  A URL that points to an external MP3 file.\n\t * @param context An optional SoundLoader context object, which can define\n\t *                the buffer time(the minimum number of milliseconds of MP3\n\t *                data to hold in the Sound object's buffer) and can specify\n\t *                whether the application should check for a cross-domain\n\t *                policy file prior to loading the sound.\n\t * @throws IOError       A network error caused the load to fail.\n\t * @throws IOError       The <code>digest</code> property of the\n\t *                       <code>stream</code> object is not <code>null</code>.\n\t *                       You should only set the <code>digest</code> property\n\t *                       of a URLRequest object when calling the\n\t *                       <code>URLLoader.load()</code> method when loading a\n\t *                       SWZ file(an Adobe platform component).\n\t * @throws SecurityError Local untrusted files may not communicate with the\n\t *                       Internet. You can work around this by reclassifying\n\t *                       this file as local-with-networking or trusted.\n\t * @throws SecurityError You cannot connect to commonly reserved ports. For a\n\t *                       complete list of blocked ports, see \"Restricting\n\t *                       Networking APIs\" in the <i>ActionScript 3.0\n\t *                       Developer's Guide</i>.\n\t */\n\tpublic function load (stream:URLRequest, context:SoundLoaderContext = null):Void {\n\t\t\n\t\t#if !html5\n\t\tAudioBuffer.fromURL (stream.url, AudioBuffer_onURLLoad);\n\t\t#else\n\t\turl = stream.url;\n\t\t__soundID = Path.withoutExtension (stream.url);\n\t\t\n\t\tif (!__registeredSounds.exists (__soundID)) {\n\t\t\t\n\t\t\t__registeredSounds.set (__soundID, true);\n\t\t\tSoundJS.addEventListener (\"fileload\", SoundJS_onFileLoad);\n\t\t\tSoundJS.addEventListener (\"fileerror\", SoundJS_onFileError);\n\t\t\tSoundJS.registerSound (url, __soundID);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadCompressedDataFromByteArray (bytes:ByteArray, bytesLength:Int, forcePlayAsMusic = false):Void {\n\t\t\n\t\t// TODO: handle byte length\n\t\t\n\t\t#if !html5\n\t\t__buffer = AudioBuffer.fromBytes (bytes);\n\t\t#else\n\t\topenfl.Lib.notImplemented (\"Sound.loadCompressedDataFromByteArray\");\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadPCMFromByteArray (bytes:ByteArray, samples:Int, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {\n\t\t\n\t\t// TODO: handle pre-decoded data\n\t\t\n\t\t#if !html5\n\t\t__buffer = AudioBuffer.fromBytes (bytes);\n\t\t#else\n\t\topenfl.Lib.notImplemented (\"Sound.loadPCMFromByteArray\");\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Generates a new SoundChannel object to play back the sound. This method\n\t * returns a SoundChannel object, which you access to stop the sound and to\n\t * monitor volume.(To control the volume, panning, and balance, access the\n\t * SoundTransform object assigned to the sound channel.)\n\t * \n\t * @param startTime    The initial position in milliseconds at which playback\n\t *                     should start.\n\t * @param loops        Defines the number of times a sound loops back to the\n\t *                     <code>startTime</code> value before the sound channel\n\t *                     stops playback.\n\t * @param sndTransform The initial SoundTransform object assigned to the\n\t *                     sound channel.\n\t * @return A SoundChannel object, which you use to control the sound. This\n\t *         method returns <code>null</code> if you have no sound card or if\n\t *         you run out of available sound channels. The maximum number of\n\t *         sound channels available at once is 32.\n\t */\n\tpublic function play (startTime:Float = 0.0, loops:Int = 0, sndTransform:SoundTransform = null):SoundChannel {\n\t\t\n\t\tif (sndTransform == null) {\n\t\t\t\n\t\t\tsndTransform = new SoundTransform (1, 0);\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: handle start time, loops, sound transform\n\t\t\n\t\t#if !html5\n\t\tvar source = new AudioSource (__buffer);\n\t\treturn new SoundChannel (source);\n\t\t#else\n\t\tvar instance = SoundJS.play (__soundID, SoundJS.INTERRUPT_ANY, 0, Std.int (startTime), loops, sndTransform.volume, sndTransform.pan);\n\t\treturn new SoundChannel (instance);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if html5\n\t@:noCompletion private static function __init__ ():Void {\n\t\t\n\t\tif (untyped window.createjs != null) {\n\t\t\t\n\t\t\tSoundJS.alternateExtensions = [ \"ogg\", \"mp3\", \"wav\" ];\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_id3 ():ID3Info {\n\t\t\n\t\treturn new ID3Info ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\t@:noCompletion private function AudioBuffer_onURLLoad (buffer:AudioBuffer):Void {\n\t\t\n\t\t__buffer = buffer;\n\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\n\t}\n\t\n\t\n\t#if html5\n\t@:noCompletion private function SoundJS_onFileLoad (event:Dynamic):Void {\n\t\t\n\t\tif (event.id == __soundID) {\n\t\t\t\n\t\t\tSoundJS.removeEventListener (\"fileload\", SoundJS_onFileLoad);\n\t\t\tSoundJS.removeEventListener (\"fileerror\", SoundJS_onFileError);\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:noCompletion private function SoundJS_onFileError (event:Dynamic):Void {\n\t\t\n\t\tif (event.id == __soundID) {\n\t\t\t\n\t\t\tSoundJS.removeEventListener (\"fileload\", SoundJS_onFileLoad);\n\t\t\tSoundJS.removeEventListener (\"fileerror\", SoundJS_onFileError);\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n#if html5\n@:native(\"createjs.Sound\") extern class SoundJS {\n\t\n\tpublic static function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;\n\tpublic static function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;\n\tpublic static function hasEventListener (type:String):Bool;\n\tpublic static function removeAllEventListeners (?type:String):Void;\n\tpublic static function removeEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Void;\n\t\n\tpublic static function createInstance (src:String):SoundJSInstance;\n\tpublic static function getCapabilities ():Dynamic;\n\tpublic static function getCapability (key:String):Dynamic;\n\tpublic static function getMute ():Bool;\n\tpublic static function getVolume ():Float;\n\tpublic static function initializeDefaultPlugins ():Bool;\n\tpublic static function isReady ():Bool;\n\tpublic static function loadComplete (src:String):Bool;\n\t//public static function mute(value:Bool):Void;\n\tpublic static function play (src:String, ?interrupt:String = INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):SoundJSInstance;\n\tpublic static function registerManifest (manifest:Array<Dynamic>, basepath:String):Dynamic;\n\tpublic static function registerPlugin (plugin:Dynamic):Bool;\n\tpublic static function registerPlugins (plugins:Array<Dynamic>):Bool;\n\tpublic static function registerSound (src:String, ?id:String, ?data:Float, ?preload:Bool = true):Dynamic;\n\t\n\tpublic static function removeAllSounds ():Void;\n\tpublic static function removeManifest (manifest:Array<Dynamic>):Dynamic;\n\tpublic static function removeSound (src:String):Void;\n\t\n\tpublic static function setMute (value:Bool):Bool;\n\tpublic static function setVolume (value:Float):Void;\n\tpublic static function stop ():Void;\n\t\n\tpublic static var activePlugin:Dynamic;\n\tpublic static var alternateExtensions:Array<String>;\n\t//public static var AUDIO_TIMEOUT:Float;\n\tpublic static var defaultInterruptBehavior:String;\n\tpublic static var DELIMITER:String;\n\t//public static var EXTENSION_MAP:Dynamic;\n\tpublic static inline var INTERRUPT_ANY:String = \"any\";\n\tpublic static inline var INTERRUPT_EARLY:String = \"early\";\n\tpublic static inline var INTERRUPT_LATE:String = \"late\";\n\tpublic static inline var INTERRUPT_NONE:String = \"none\";\n\t//public var onLoadComplete:Dynamic->Void;\n\tpublic static var PLAY_FAILED:String;\n\tpublic static var PLAY_FINISHED:String;\n\tpublic static var PLAY_INITED:String;\n\tpublic static var PLAY_INTERRUPTED:String;\n\tpublic static var PLAY_SUCCEEDED:String;\n\tpublic static var SUPPORTED_EXTENSIONS:Array<String>;\n\t\n}\n\n\n@:native(\"createjs.SoundInstance\") extern class SoundJSInstance extends SoundJSEventDispatcher {\n\t\n\tpublic function new (src:String, owner:Dynamic):Void;\n\tpublic function getDuration ():Int;\n\tpublic function getMute ():Bool;\n\tpublic function getPan ():Float;\n\tpublic function getPosition ():Int;\n\tpublic function getVolume ():Float;\n\t//public function mute (value:Bool):Bool;\n\tpublic function pause ():Bool;\n\tpublic function play (?interrupt:String = Sound.INTERRUPT_NONE, ?delay:Int = 0, ?offset:Int = 0, ?loop:Int = 0, ?volume:Float = 1, ?pan:Float = 0):Void;\n\tpublic function resume ():Bool;\n\tpublic function setMute (value:Bool):Bool;\n\tpublic function setPan (value:Float):Float;\n\tpublic function setPosition (value:Int):Void;\n\tpublic function setVolume (value:Float):Bool;\n\tpublic function stop ():Bool;\n\t\n\tpublic var gainNode:Dynamic;\n\tpublic var pan:Float;\n\tpublic var panNode:Dynamic;\n\tpublic var playState:String;\n\tpublic var sourceNode:Dynamic;\n\t//public var startTime:Float;\n\tpublic var uniqueId:Dynamic;\n\tpublic var volume:Float;\n\t\n\tpublic var onComplete:SoundJSInstance->Void;\n\tpublic var onLoop:SoundJSInstance->Void;\n\tpublic var onPlayFailed:SoundJSInstance->Void;\n\tpublic var onPlayInterrupted:SoundJSInstance->Void;\n\tpublic var onPlaySucceeded:SoundJSInstance->Void;\n\tpublic var onReady:SoundJSInstance->Void;\n\t\n}\n\n\n@:native(\"createjs.EventDispatcher\") extern class SoundJSEventDispatcher {\n\t\n\tpublic function addEventListener (type:String, listener:Dynamic, ?useCapture:Bool):Dynamic;\n\tpublic function dispatchEvent (eventObj:Dynamic, ?target:Dynamic):Bool;\n\tpublic function hasEventListener (type:String):Bool;\n\tpublic static function initialize (target:Dynamic):Void;\n\tpublic function off (type:String, listener:Dynamic, ?useCapture:Bool):Bool;\n\tpublic function on (type:String, listener:Dynamic, ?scope:Dynamic, ?once:Bool=false, ?data:Dynamic = null, ?useCapture:Bool=false):Dynamic;\n\tpublic function removeAllEventListeners (?type:String):Void;\n\tpublic function removeEventListener(type:String, listener:Dynamic, ?useCapture:Bool):Void;\n\tpublic function toString ():String;\n\t\n}\n#end\n\n\n#else\ntypedef Sound = openfl._v2.media.Sound;\n#end\n#else\ntypedef Sound = flash.media.Sound;\n#end","package openfl.net; #if !flash #if !lime_legacy\n\n\nimport openfl.utils.ByteArray;\n\n\n/**\n * The URLRequest class captures all of the information in a single HTTP\n * request. URLRequest objects are passed to the <code>load()</code> methods\n * of the Loader, URLStream, and URLLoader classes, and to other loading\n * operations, to initiate URL downloads. They are also passed to the\n * <code>upload()</code> and <code>download()</code> methods of the\n * FileReference class.\n *\n * <p>A SWF file in the local-with-filesystem sandbox may not load data from,\n * or provide data to, a resource that is in the network sandbox. </p>\n *\n * <p>By default, the calling SWF file and the URL you load must be in the\n * same domain. For example, a SWF file at www.adobe.com can load data only\n * from sources that are also at www.adobe.com. To load data from a different\n * domain, place a URL policy file on the server hosting the data.</p>\n *\n * <p> However, in Adobe AIR, content in the application security sandbox\n * (content installed with the AIR application) is not restricted by these\n * security limitations. For content running in Adobe AIR, files in the\n * application security sandbox can access URLs using any of the following URL\n * schemes:</p>\n *\n * <ul>\n *   <li><code>http</code> and <code>https</code> </li>\n *   <li><code>file</code> </li>\n *   <li><code>app-storage</code> </li>\n *   <li><code>app</code> </li>\n * </ul>\n *\n * <p>Content running in Adobe AIR that is not in the application security\n * sandbox observes the same restrictions as content running in the browser\n * (in Flash Player), and loading is governed by the content's domain and any\n * permissions granted in URL policy files.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n */\nclass URLRequest {\n\t\n\t\n\t/**\n\t * The MIME content type of the content in the the <code>data</code>\n\t * property.\n\t *\n\t * <p>The default value is\n\t * <code>application/x-www-form-urlencoded</code>.</p>\n\t *\n\t * <p><b>Note</b>:The <code>FileReference.upload()</code>,\n\t * <code>FileReference.download()</code>, and <code>HTMLLoader.load()</code>\n\t * methods do not support the <code>URLRequest.contentType</code>\n\t * property.</p>\n\t *\n\t * <p>When sending a POST request, the values of the <code>contentType</code>\n\t * and <code>data</code> properties must correspond properly. The value of\n\t * the <code>contentType</code> property instructs servers on how to\n\t * interpret the value of the <code>data</code> property. </p>\n\t *\n\t * <ul>\n\t *   <li>If the value of the <code>data</code> property is a URLVariables\n\t * object, the value of <code>contentType</code> must be\n\t * <code>application/x-www-form-urlencoded</code>. </li>\n\t *   <li> If the value of the <code>data</code> property is any other type,\n\t * the value of <code>contentType</code> should indicate the type of the POST\n\t * data that will be sent(which is the binary or string data contained in\n\t * the value of the <code>data</code> property). </li>\n\t *   <li>For <code>FileReference.upload()</code>, the Content-Type of the\n\t * request is set automatically to <code>multipart/form-data</code>, and the\n\t * value of the <code>contentType</code> property is ignored.</li>\n\t * </ul>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standards). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t */\n\tpublic var contentType:String;\n\t\n\t/**\n\t * An object containing data to be transmitted with the URL request.\n\t *\n\t * <p>This property is used in conjunction with the <code>method</code>\n\t * property. When the value of <code>method</code> is <code>GET</code>, the\n\t * value of <code>data</code> is appended to the value of\n\t * <code>URLRequest.url</code>, using HTTP query-string syntax. When the\n\t * <code>method</code> value is <code>POST</code>(or any value other than\n\t * <code>GET</code>), the value of <code>data</code> is transmitted in the\n\t * body of the HTTP request.</p>\n\t *\n\t * <p>The URLRequest API offers binary <code>POST</code> support and support\n\t * for URL-encoded variables, as well as support for strings. The data object\n\t * can be a ByteArray, URLVariables, or String object.</p>\n\t *\n\t * <p>The way in which the data is used depends on the type of object\n\t * used:</p>\n\t *\n\t * <ul>\n\t *   <li>If the object is a ByteArray object, the binary data of the\n\t * ByteArray object is used as <code>POST</code> data. For <code>GET</code>,\n\t * data of ByteArray type is not supported. Also, data of ByteArray type is\n\t * not supported for <code>FileReference.upload()</code> and\n\t * <code>FileReference.download()</code>.</li>\n\t *   <li>If the object is a URLVariables object and the method is\n\t * <code>POST</code>, the variables are encoded using\n\t * <i>x-www-form-urlencoded</i> format and the resulting string is used as\n\t * <code>POST</code> data. An exception is a call to\n\t * <code>FileReference.upload()</code>, in which the variables are sent as\n\t * separate fields in a <code>multipart/form-data</code> post.</li>\n\t *   <li>If the object is a URLVariables object and the method is\n\t * <code>GET</code>, the URLVariables object defines variables to be sent\n\t * with the URLRequest object.</li>\n\t *   <li>Otherwise, the object is converted to a string, and the string is\n\t * used as the <code>POST</code> or <code>GET</code> data.</li>\n\t * </ul>\n\t *\n\t * <p>This data is not sent until a method, such as\n\t * <code>navigateToURL()</code> or <code>FileReference.upload()</code>, uses\n\t * the URLRequest object.</p>\n\t *\n\t * <p><b>Note</b>: The value of <code>contentType</code> must correspond to\n\t * the type of data in the <code>data</code> property. See the note in the\n\t * description of the <code>contentType</code> property.</p>\n\t */\n\tpublic var data:Dynamic;\n\t\n\t/**\n\t * Controls the HTTP form submission method.\n\t *\n\t * <p>For SWF content running in Flash Player(in the browser), this property\n\t * is limited to GET or POST operations, and valid values are\n\t * <code>URLRequestMethod.GET</code> or\n\t * <code>URLRequestMethod.POST</code>.</p>\n\t *\n\t * <p>For content running in Adobe AIR, you can use any string value if the\n\t * content is in the application security sandbox. Otherwise, as with content\n\t * running in Flash Player, you are restricted to using GET or POST\n\t * operations.</p>\n\t *\n\t * <p>For content running in Adobe AIR, when using the\n\t * <code>navigateToURL()</code> function, the runtime treats a URLRequest\n\t * that uses the POST method(one that has its <code>method</code> property\n\t * set to <code>URLRequestMethod.POST</code>) as using the GET method.</p>\n\t *\n\t * <p><b>Note:</b> If running in Flash Player and the referenced form has no\n\t * body, Flash Player automatically uses a GET operation, even if the method\n\t * is set to <code>URLRequestMethod.POST</code>. For this reason, it is\n\t * recommended to always include a \"dummy\" body to ensure that the correct\n\t * method is used.</p>\n\t * \n\t * @default URLRequestMethod.GET\n\t * @throws ArgumentError If the <code>value</code> parameter is not\n\t *                       <code>URLRequestMethod.GET</code> or\n\t *                       <code>URLRequestMethod.POST</code>.\n\t */\n\tpublic var method:String;\n\t\n\t/**\n\t * The array of HTTP request headers to be appended to the HTTP request. The\n\t * array is composed of URLRequestHeader objects. Each object in the array\n\t * must be a URLRequestHeader object that contains a name string and a value\n\t * string, as follows:\n\t *\n\t * <p>Flash Player and the AIR runtime impose certain restrictions on request\n\t * headers; for more information, see the URLRequestHeader class\n\t * description.</p>\n\t *\n\t * <p>Not all methods that accept URLRequest parameters support the\n\t * <code>requestHeaders</code> property, consult the documentation for the\n\t * method you are calling. For example, the\n\t * <code>FileReference.upload()</code> and\n\t * <code>FileReference.download()</code> methods do not support the\n\t * <code>URLRequest.requestHeaders</code> property.</p>\n\t *\n\t * <p>Due to browser limitations, custom HTTP request headers are only\n\t * supported for <code>POST</code> requests, not for <code>GET</code>\n\t * requests.</p>\n\t */\n\tpublic var requestHeaders:Array<URLRequestHeader>;\n\t\n\t/**\n\t * The URL to be requested.\n\t *\n\t * <p>Be sure to encode any characters that are either described as unsafe in\n\t * the Uniform Resource Locator specification(see\n\t * http://www.faqs.org/rfcs/rfc1738.html) or that are reserved in the URL\n\t * scheme of the URLRequest object(when not used for their reserved\n\t * purpose). For example, use <code>\"%25\"</code> for the percent(%) symbol\n\t * and <code>\"%23\"</code> for the number sign(#), as in\n\t * <code>\"http://www.example.com/orderForm.cfm?item=%23B-3&discount=50%25\"</code>.</p>\n\t *\n\t * <p>By default, the URL must be in the same domain as the calling file,\n\t * unless the content is running in the Adobe AIR application security\n\t * sandbox. If you need to load data from a different domain, put a URL\n\t * policy file on the server that is hosting the data. For more information,\n\t * see the description of the URLRequest class.</p>\n\t *\n\t * <p>For content running in Adobe AIR, files in the application security\n\t * sandobx  -  files installed with the AIR application  -  can access URLs\n\t * using any of the following URL schemes:</p>\n\t *\n\t * <ul>\n\t *   <li><code>http</code> and <code>https</code> </li>\n\t *   <li><code>file</code> </li>\n\t *   <li><code>app-storage</code> </li>\n\t *   <li><code>app</code> </li>\n\t * </ul>\n\t *\n\t * <p><b>Note:</b> IPv6(Internet Protocol version 6) is supported in AIR and\n\t * in Flash Player 9.0.115.0 and later. IPv6 is a version of Internet\n\t * Protocol that supports 128-bit addresses(an improvement on the earlier\n\t * IPv4 protocol that supports 32-bit addresses). You might need to activate\n\t * IPv6 on your networking interfaces. For more information, see the Help for\n\t * the operating system hosting the data. If IPv6 is supported on the hosting\n\t * system, you can specify numeric IPv6 literal addresses in URLs enclosed in\n\t * brackets([]), as in the following. </p>\n\t * <pre xml:space=\"preserve\">\n\t * rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]:1935/test </pre>\n\t */\n\tpublic var url:String;\n\tpublic var userAgent:String;\n\t\n\t\n\t/**\n\t * Creates a URLRequest object. If <code>System.useCodePage</code> is\n\t * <code>true</code>, the request is encoded using the system code page,\n\t * rather than Unicode. If <code>System.useCodePage</code> is\n\t * <code>false</code>, the request is encoded using Unicode, rather than the\n\t * system code page.\n\t * \n\t * @param url The URL to be requested. You can set the URL later by using the\n\t *            <code>url</code> property.\n\t */\n\tpublic function new (inURL:String = null) {\n\t\t\n\t\tif (inURL != null) {\n\t\t\t\n\t\t\turl = inURL;\n\t\t\t\n\t\t}\n\t\t\n\t\trequestHeaders = [];\n\t\tmethod = URLRequestMethod.GET;\n\t\tcontentType = null; // \"application/x-www-form-urlencoded\";\n\t\t\n\t}\n\t\n\t\n\tpublic function formatRequestHeaders ():Array<URLRequestHeader> {\n\t\t\n\t\tvar res = requestHeaders;\n\t\tif (res == null) res = [];\n\t\t\n\t\tif (method == URLRequestMethod.GET || data == null) return res;\n\t\t\n\t\tif (Std.is (data, String) || Std.is (data, ByteArray)) {\n\t\t\t\n\t\t\tres = res.copy ();\n\t\t\tres.push (new URLRequestHeader (\"Content-Type\", contentType != null ? contentType : \"application/x-www-form-urlencoded\"));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn res;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\ntypedef URLRequest = openfl._v2.net.URLRequest;\n#end\n#else\ntypedef URLRequest = flash.net.URLRequest;\n#end","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders;\r\n\r\nimport openfl.events.Event;\r\n\r\n@:keepSub\r\nclass InjectionEvent extends Event\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\t/**\r\n\t * @eventType postInstantiate\r\n\t */\r\n\tpublic static var POST_INSTANTIATE:String = 'postInstantiate';\r\n\t/**\r\n\t * @eventType preConstruct\r\n\t */\r\n\tpublic static var PRE_CONSTRUCT:String = 'preConstruct';\r\n\t/**\r\n\t * @eventType postConstruct\r\n\t */\r\n\tpublic static var POST_CONSTRUCT:String = 'postConstruct';\r\n\r\n\tpublic var instance :Dynamic;\r\n\tpublic var instanceType:Class<Dynamic>;\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(type:String, instance:Dynamic, instanceType:Class<Dynamic>)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.instance = instance;\r\n\t\tthis.instanceType = instanceType;\r\n\t}\r\n\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new InjectionEvent(type, instance, instanceType);\r\n\t}\r\n}","package org.swiftsuspenders.utils;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n@:keepSub\r\nclass CallProxy\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function replaceClassName(c:Class<Dynamic>):String\r\n\t{\r\n\t\tvar className = CallProxy.getClassName(c);\r\n\t\tclassName = className.split(\"flash.\").join(\"openfl.\");\r\n\t\treturn className;\r\n\t}\r\n\t\r\n\tpublic static function getClassName(c:Class<Dynamic>):String\r\n\t{\r\n\t\tvar className = Type.getClassName(c);\r\n\t\treturn className;\r\n\t}\r\n\t\r\n\tpublic static function hasField( o:Dynamic, field:String):Bool\r\n\t{\r\n\t\tvar fields;\r\n\t\tvar clazz:Class<Dynamic>;\r\n\t\tif (Std.is(o, Class)) {\r\n\t\t\tclazz = o;\r\n\t\t\tfields = Type.getInstanceFields(clazz);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfields = Reflect.fields(o);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...fields.length) \r\n\t\t{\r\n\t\t\tif (fields[i] == field) return true;\r\n\t\t}\r\n\t\t\r\n\t\t#if js\r\n\t\t\tvar f:Dynamic = Reflect.getProperty(o, field);\r\n\t\t\tvar isFunction = Reflect.isFunction(f);\r\n\t\t\tvar isObject = Reflect.isObject(f);\r\n\t\t\tif (isFunction || isObject) return true;\r\n\t\t\telse return false;\r\n\t\t#else \r\n\t\t\tvar hasField = Reflect.hasField(o, field);\r\n\t\t\treturn hasField;\r\n\t\t#end\r\n\t}\r\n\t\r\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T\r\n\t{\r\n\t\tvar instance = Type.createInstance(cl, args);\r\n\t\treturn instance;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders;\r\n\r\nimport openfl.errors.Error;\r\nimport org.swiftsuspenders.reflection.DescribeTypeRTTIReflector;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport org.swiftsuspenders.utils.UID;\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.system.ApplicationDomain;\r\n\r\nimport org.swiftsuspenders.dependencyproviders.DependencyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.FallbackDependencyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.LocalOnlyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.SoftDependencyProvider;\r\nimport org.swiftsuspenders.errors.InjectorError;\r\nimport org.swiftsuspenders.errors.InjectorInterfaceConstructionError;\r\nimport org.swiftsuspenders.errors.InjectorMissingMappingError;\r\nimport org.swiftsuspenders.mapping.InjectionMapping;\r\nimport org.swiftsuspenders.mapping.MappingEvent;\r\nimport org.swiftsuspenders.reflection.Reflector;\r\nimport org.swiftsuspenders.typedescriptions.ConstructorInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.InjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.PreDestroyInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.TypeDescription;\r\nimport org.swiftsuspenders.utils.TypeDescriptor;\r\n\r\n\r\n/**\r\n * This event is dispatched each time the injector instantiated a class\r\n *\r\n * <p>At the point where the event is dispatched none of the injection points have been processed.</p>\r\n *\r\n * <p>The only difference to the <code>PRE_CONSTRUCT</code> event is that\r\n * <code>POST_INSTANTIATE</code> is only dispatched for instances that are created in the\r\n * injector, whereas <code>PRE_CONSTRUCT</code> is also dispatched for instances the injector\r\n * only injects into.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to\r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.InjectionEvent.POST_INSTANTIATE\r\n */\r\n@:meta(Event(name='postInstantiate', type='org.swiftsuspenders.InjectionEvent'))\r\n/**\r\n * This event is dispatched each time the injector is about to inject into a class\r\n *\r\n * <p>At the point where the event is dispatched none of the injection points have been processed.</p>\r\n *\r\n * <p>The only difference to the <code>POST_INSTANTIATE</code> event is that\r\n * <code>PRE_CONSTRUCT</code> is only dispatched for instances that are created in the\r\n * injector, whereas <code>POST_INSTANTIATE</code> is also dispatched for instances the\r\n * injector only injects into.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to\r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.InjectionEvent.PRE_CONSTRUCT\r\n */\r\n@:meta(Event(name='preConstruct', type='org.swiftsuspenders.InjectionEvent'))\r\n/**\r\n * This event is dispatched each time the injector created and fully initialized a new instance\r\n *\r\n * <p>At the point where the event is dispatched all dependencies for the newly created instance\r\n * have already been injected. That means that creation-events for leaf nodes of the created\r\n * object graph will be dispatched before the creation-events for the branches they are\r\n * injected into.</p>\r\n *\r\n * <p>The newly created instance's [PostConstruct]-annotated methods will also have run already.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to\r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.InjectionEvent.POST_CONSTRUCT\r\n */\r\n@:meta(Event(name='postConstruct', type='org.swiftsuspenders.InjectionEvent'))\r\n\r\n/**\r\n * This event is dispatched each time the injector creates a new mapping for a type/ name\r\n * combination, right before the mapping is created\r\n *\r\n * <p>At the point where the event is dispatched the mapping hasn't yet been created. Thus, the\r\n * respective field in the event is null.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to\r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.PRE_MAPPING_CREATE\r\n */\r\n@:meta(Event(name='preMappingCreate', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n/**\r\n * This event is dispatched each time the injector creates a new mapping for a type/ name\r\n * combination, right after the mapping was created\r\n *\r\n * <p>At the point where the event is dispatched the mapping has already been created and stored\r\n * in the injector's lookup table.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to\r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.POST_MAPPING_CREATE\r\n */\r\n@:meta(Event(name='postMappingCreate', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n/**\r\n * This event is dispatched each time an injector mapping is changed in any way, right before\r\n * the change is applied.\r\n *\r\n * <p>At the point where the event is dispatched the changes haven't yet been applied, meaning the\r\n * mapping stored in the event can be queried for its pre-change state.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to \r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.PRE_MAPPING_CHANGE\r\n */\r\n@:meta(Event(name='preMappingChange', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n/**\r\n * This event is dispatched each time an injector mapping is changed in any way, right after\r\n * the change is applied.\r\n *\r\n * <p>At the point where the event is dispatched the changes have already been applied, meaning\r\n * the mapping stored in the event can be queried for its post-change state</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to \r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.POST_MAPPING_CHANGE\r\n */\r\n@:meta(Event(name='postMappingChange', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n/**\r\n * This event is dispatched each time an injector mapping is removed, right after\r\n * the mapping is deleted from the configuration.\r\n *\r\n * <p>At the point where the event is dispatched the changes have already been applied, meaning\r\n * the mapping is lost to the injector and can't be queried anymore.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to \r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.POST_MAPPING_REMOVE\r\n */\r\n@:meta(Event(name='postMappingRemove', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n/**\r\n * This event is dispatched if an existing mapping is overridden without first unmapping it.\r\n *\r\n * <p>The reason for dispatching an event (and tracing a warning) is that in most cases,\r\n * overriding existing mappings is a sign of bugs in the application. Deliberate mapping\r\n * changes should be done by first removing the existing mapping.</p>\r\n *\r\n * <p>This event is only dispatched if there are one or more relevant listeners attached to \r\n * the dispatching injector.</p>\r\n *\r\n * @eventType org.swiftsuspenders.MappingEvent.POST_MAPPING_REMOVE\r\n */\r\n@:meta(Event(name='mappingOverride', type='org.swiftsuspenders.mapping.MappingEvent'))\r\n\r\n/**\r\n * The <code>Injector</code> manages the mappings and acts as the central hub from which all\r\n * injections are started.\r\n */\r\n@:keepSub\r\nclass Injector extends EventDispatcher\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate static var INJECTION_POINTS_CACHE = new Map<String,TypeDescription>();\r\n\r\n\t\r\n\t/**\r\n\t * Sets the <code>Injector</code> to ask in case the current <code>Injector</code> doesn't\r\n\t * have a mapping for a dependency.\r\n\t *\r\n\t * <p>Parent Injectors can be nested in arbitrary depths with very little overhead,\r\n\t * enabling very modular setups for the managed object graphs.</p>\r\n\t *\r\n\t * @param parentInjector The <code>Injector</code> to use for dependencies the current\r\n\t * <code>Injector</code> can't supply\r\n\t */\r\n\t\r\n\t//private var _parentInjector:Injector;\r\n\t/**\r\n\t * Returns the <code>Injector</code> used for dependencies the current\r\n\t * <code>Injector</code> can't supply\r\n\t */\r\n\t@:isVar public var parentInjector(get, set):Injector;\r\n\tfunction set_parentInjector(parentInjector:Injector):Injector\r\n\t{\r\n\t\tthis.parentInjector = parentInjector;\r\n\t\treturn this.parentInjector;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the <code>Injector</code> used for dependencies the current\r\n\t * <code>Injector</code> can't supply\r\n\t */\r\n\tfunction get_parentInjector():Injector\r\n\t{\r\n\t\treturn this.parentInjector;\r\n\t}\r\n\t\r\n\t\r\n\t//private var _applicationDomain:ApplicationDomain;\r\n\t@:isVar public var applicationDomain(get, set):ApplicationDomain;\r\n\tfunction set_applicationDomain(applicationDomain:ApplicationDomain = null):ApplicationDomain\r\n\t{\r\n\t\tif (applicationDomain != null) this.applicationDomain = applicationDomain;\r\n\t\telse this.applicationDomain = ApplicationDomain.currentDomain;\r\n\t\treturn this.applicationDomain;\r\n\t}\r\n\t\r\n\tfunction get_applicationDomain():ApplicationDomain\r\n\t{\r\n\t\treturn this.applicationDomain;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tprivate var _classDescriptor:TypeDescriptor;\r\n\tprivate var _mappings:Map<String,InjectionMapping>;\r\n\t\r\n\tprivate var _mappingsInProcess:Map<String,Bool>;\r\n\tprivate var _managedObjects:Map<String,Dynamic>;\r\n\tprivate var _reflector:Reflector;\r\n\t\r\n\t\r\n\t//private var _fallbackProvider:FallbackDependencyProvider;\r\n\t@:isVar public var fallbackProvider(get, set):FallbackDependencyProvider;\r\n\tfunction get_fallbackProvider():FallbackDependencyProvider\r\n\t{\r\n\t\treturn this.fallbackProvider;\r\n\t}\r\n\r\n\tfunction set_fallbackProvider(provider:FallbackDependencyProvider):FallbackDependencyProvider\r\n\t{\r\n\t\tthis.fallbackProvider = provider;\r\n\t\treturn provider;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t//private var _blockParentFallbackProvider:Bool = false;\r\n\t@:isVar public var blockParentFallbackProvider(get, set):Bool;\r\n\tfunction get_blockParentFallbackProvider():Bool\r\n\t{\r\n\t\treturn this.blockParentFallbackProvider;\r\n\t}\r\n\t\r\n\tfunction set_blockParentFallbackProvider(value:Bool):Bool\r\n\t{\r\n\t\tthis.blockParentFallbackProvider = value;\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tprivate static var _baseTypes:Array<String> = initBaseTypeMappingIds([Dynamic, Array, Class/*, Function*//*, Bool*/, Float, Int, UInt, String]);\r\n\r\n \tprivate static function initBaseTypeMappingIds(types:Array<Dynamic>):Array<String>\r\n\t{\r\n\t\t// CHECK\r\n\t\tvar returnArray = new Array<String>();\r\n\t\tfor (i in 0...types.length) \r\n\t\t{\r\n\t\t\treturnArray.push(CallProxy.replaceClassName(types[i]) + '|');\r\n\t\t}\r\n\t\treturn returnArray;\r\n\t}\r\n\t\r\n\t//----------------------            Internal Properties             ----------------------//\r\n\tpublic var providerMappings = new Map<String,DependencyProvider>();\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new()\r\n\t{\r\n\t\t_mappings = new Map<String,InjectionMapping>();\r\n\t\t_mappingsInProcess = new Map<String,Bool>();\r\n\t\t_managedObjects = new Map<String,Dynamic>();\r\n\t\t_reflector = new DescribeTypeRTTIReflector();\r\n\t\t_classDescriptor = new TypeDescriptor(_reflector, INJECTION_POINTS_CACHE);\r\n\t\tthis.applicationDomain = ApplicationDomain.currentDomain;\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Maps a request description, consisting of the <code>type</code> and, optionally, the\r\n\t * <code>name</code>.\r\n\t *\r\n\t * <p>The returned mapping is created if it didn't exist yet or simply returned otherwise.</p>\r\n\t *\r\n\t * <p>Named mappings should be used as sparingly as possible as they increase the likelyhood\r\n\t * of typing errors to cause hard to debug errors at runtime.</p>\r\n\t *\r\n\t * @param type The <code>class</code> describing the mapping\r\n\t * @param name The name, as a case-sensitive string, to further describe the mapping\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> for the given request description\r\n\t *\r\n\t * @see #unmap()\r\n\t * @see org.swiftsuspenders.mapping.InjectionMapping\r\n\t */\r\n\tpublic function map(type:Class<Dynamic>, name:String = ''):InjectionMapping\r\n\t{\r\n\t\tvar mappingId:String = CallProxy.replaceClassName(type) + '|' + name;\r\n\t\tif (_mappings[mappingId] != null) return _mappings[mappingId];\r\n\t\treturn createMapping(type, name, mappingId);\r\n\t}\r\n\r\n\t/**\r\n\t *  Removes the mapping described by the given <code>type</code> and <code>name</code>.\r\n\t *\r\n\t * @param type The <code>class</code> describing the mapping\r\n\t * @param name The name, as a case-sensitive string, to further describe the mapping\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Descriptions that are not mapped can't be unmapped\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings have to be unsealed before unmapping them\r\n\t *\r\n\t * @see #map()\r\n\t * @see org.swiftsuspenders.mapping.InjectionMapping\r\n\t * @see org.swiftsuspenders.mapping.InjectionMapping#unseal()\r\n\t */\r\n\tpublic function unmap(type:Class<Dynamic>, name:String = ''):Void\r\n\t{\r\n\t\tvar mappingId:String = CallProxy.replaceClassName(type) + '|' + name;\r\n\t\tvar mapping:InjectionMapping = _mappings[mappingId];\r\n\t\tif (mapping != null && mapping.isSealed)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Can\\'t unmap a sealed mapping');\r\n\t\t}\r\n\t\tif (mapping == null)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Error while removing an injector mapping: ' +\r\n\t\t\t\t\t'No mapping defined for dependency ' + mappingId);\r\n\t\t}\r\n\t\tmapping.getProvider().destroy();\r\n\t\t_mappings.remove(mappingId);\r\n\t\tproviderMappings.remove(mappingId);\r\n\t\thasEventListener(MappingEvent.POST_MAPPING_REMOVE) && dispatchEvent(\r\n\t\t\tnew MappingEvent(MappingEvent.POST_MAPPING_REMOVE, type, name, null));\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the injector can supply a response for the specified dependency either\r\n\t * by using a mapping of its own or by querying one of its ancestor injectors.\r\n\t *\r\n\t * @param type The type of the dependency under query\r\n\t * @param name The name of the dependency under query\r\n\t *\r\n\t * @return <code>true</code> if the dependency can be satisfied, <code>false</code> if not\r\n\t */\r\n\tpublic function satisfies(type:Class<Dynamic>, name:String = ''):Bool\r\n\t{\r\n\t\tvar mappingId:String = CallProxy.replaceClassName(type) + '|' + name;\r\n\t\treturn getProvider(mappingId, true) != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the injector can directly supply a response for the specified\r\n\t * dependency.\r\n\t *\r\n\t * <p>In contrast to <code>#satisfies()</code>, <code>satisfiesDirectly</code> only informs\r\n\t * about mappings on this injector itself, without querying its ancestor injectors.</p>\r\n\t *\r\n\t * @param type The type of the dependency under query\r\n\t * @param name The name of the dependency under query\r\n\t *\r\n\t * @return <code>true</code> if the dependency can be satisfied, <code>false</code> if not\r\n\t */\r\n\tpublic function satisfiesDirectly(type:Class<Dynamic>, name:String = ''):Bool\r\n\t{\r\n\t\treturn hasDirectMapping(type, name)\r\n\t\t\t|| getDefaultProvider(CallProxy.replaceClassName(type) + '|' + name, false) != null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the mapping for the specified dependency class\r\n\t *\r\n\t * <p>Note that getMapping will only return mappings in exactly this injector, not ones\r\n\t * mapped in an ancestor injector. To get mappings from ancestor injectors, query them \r\n\t * using <code>parentInjector</code>.\r\n\t * This restriction is in place to prevent accidential changing of mappings in ancestor\r\n\t * injectors where only the child's response is meant to be altered.</p>\r\n\t * \r\n\t * @param type The type of the dependency to return the mapping for\r\n\t * @param name The name of the dependency to return the mapping for\r\n\t *\r\n\t * @return The mapping for the specified dependency class\r\n\t * \r\n\t * @throws org.swiftsuspenders.errors.InjectorMissingMappingError when no mapping was found\r\n\t * for the specified dependency\r\n\t */\r\n\tpublic function getMapping(type:Class<Dynamic>, name:String = ''):InjectionMapping\r\n\t{\r\n\t\tvar mappingId:String = CallProxy.replaceClassName(type) + '|' + name;\r\n\t\tvar mapping:InjectionMapping = _mappings[mappingId];\r\n\t\tif (mapping == null)\r\n\t\t{\r\n\t\t\tthrow new InjectorMissingMappingError('Error while retrieving an injector mapping: '\r\n\t\t\t\t\t+ 'No mapping defined for dependency ' + mappingId);\r\n\t\t}\r\n\t\treturn mapping;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if an instance is managed by this Injector.\r\n\t *\r\n\t * <p>An instance is \"managed\" if it was created or injected into by this Injector.</p>\r\n\t *\r\n\t * @param instance The instance to check\r\n\t * @return True if the Injector is managing this instance\r\n\t */\r\n\tpublic function hasManagedInstance(instance:Dynamic):Bool\r\n\t{\r\n\t\treturn _managedObjects[UID.instanceID(instance)];\r\n\t}\r\n\r\n\t/**\r\n\t * Inspects the given object and injects into all injection points configured for its class.\r\n\t *\r\n\t * @param target The instance to inject into\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError The <code>Injector</code> must have mappings\r\n\t * for all injection points\r\n\t *\r\n\t * @see #map()\r\n\t */\r\n\tpublic function injectInto(target:Dynamic):Void\r\n\t{\r\n\t\tvar type:Class<Dynamic> = _reflector.getClass(target);\r\n\t\tapplyInjectionPoints(target, type, _classDescriptor.getDescription(type));\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates the class identified by the given <code>type</code> and <code>name</code>.\r\n\t *\r\n\t * <p>The parameter <code>targetType</code> is only useful if the\r\n\t * <code>InjectionMapping</code> used to satisfy the request might vary its result based on\r\n\t * that <code>targetType</code>. An Example of that would be a provider returning a logger\r\n\t * instance pre-configured for the instance it is used in.</p>\r\n\t *\r\n\t * @param type The <code>class</code> describing the mapping\r\n\t * @param name The name, as a case-sensitive string, to use for mapping resolution\r\n\t * @param targetType The type of the instance that is dependent on the returned value\r\n\t *\r\n\t * @return The mapped or created instance\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorMissingMappingError if no mapping was found\r\n\t * for the specified dependency and no <code>fallbackProvider</code> is set.\r\n\t */\r\n\tpublic function getInstance(type:Class<Dynamic>, name:String = '', targetType:Class<Dynamic> = null) :Dynamic\r\n\t{\r\n\t\tvar mappingId:String = CallProxy.replaceClassName(type) + '|' + name;\r\n\t\tvar provider:DependencyProvider;\r\n\t\tif (getProvider(mappingId) != null) {\r\n\t\t\tprovider = getProvider(mappingId);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprovider = getDefaultProvider(mappingId, true);\r\n\t\t}\r\n\t\t//var provider:DependencyProvider = getProvider(mappingId) || getDefaultProvider(mappingId, true);\r\n\t\tif(provider != null)\r\n\t\t{\r\n\t\t\tvar ctor:ConstructorInjectionPoint = _classDescriptor.getDescription(type).ctor;\r\n\t\t\tvar returnVal;\r\n\t\t\tif (ctor != null) returnVal = provider.apply(targetType, this, ctor.injectParameters);\r\n\t\t\telse returnVal = provider.apply(targetType, this, null);\r\n\t\t\treturn returnVal;\r\n\t\t}\r\n\t\t\r\n\t\tvar fallbackMessage:String;\r\n\t\tif (this.fallbackProvider != null) {\r\n\t\t\tfallbackMessage = \"the fallbackProvider, '\" + this.fallbackProvider + \"', was unable to fulfill this request.\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfallbackMessage = \"the injector has no fallbackProvider.\";\r\n\t\t}\r\n\t\t/*var fallbackMessage:String = this.fallbackProvider\r\n\t\t\t? \"the fallbackProvider, '\" + this.fallbackProvider + \"', was unable to fulfill this request.\"\r\n\t\t\t: \"the injector has no fallbackProvider.\";*/\r\n\t\t\r\n\t\tthrow new InjectorMissingMappingError('No mapping found for request ' + mappingId\r\n\t\t\t\t+ ' and ' + fallbackMessage);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an instance of the given type. If the Injector has a mapping for the type, that\r\n\t * is used for getting the instance. If not, a new instance of the class is created and\r\n\t * injected into.\r\n\t *\r\n\t * @param type The type to get an instance of\r\n\t * @return The instance that was created or retrieved from the mapped provider\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorMissingMappingError if no mapping is found\r\n\t * for one of the type's dependencies and no <code>fallbackProvider</code> is set\r\n\t * @throws org.swiftsuspenders.errors.InjectorInterfaceConstructionError if the given type\r\n\t * is an interface and no mapping was found\r\n\t */\r\n\tpublic function getOrCreateNewInstance(type:Class<Dynamic>) :Dynamic\r\n\t{\r\n\t\t// CHECK\r\n\t\tvar _satisfies = satisfies(type);\r\n\t\tif (_satisfies) return getInstance(type);\r\n\t\telse return instantiateUnmapped(type);\r\n\t\t\r\n\t\t\r\n\t\t//return satisfies(type) && getInstance(type) || instantiateUnmapped(type);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an instance of the given type and injects into it.\r\n\t *\r\n\t * @param type The type to instantiate\r\n\t * @return The new instance, with all of its dependencies fulfilled\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorMissingMappingError if no mapping is found\r\n\t * for one of the type's dependencies and no <code>fallbackProvider</code> is set\r\n\t */\r\n\tpublic function instantiateUnmapped(type:Class<Dynamic>) :Dynamic\r\n\t{\r\n\t\tif(!canBeInstantiated(type))\r\n\t\t{\r\n\t\t\tthrow new InjectorInterfaceConstructionError(\r\n\t\t\t\t\"Can't instantiate interface \" + CallProxy.replaceClassName(type));\r\n\t\t}\r\n\t\tvar description:TypeDescription = _classDescriptor.getDescription(type);\r\n\t\tvar instance :Dynamic = description.ctor.createInstance(type, this);\r\n\t\tif (hasEventListener(InjectionEvent.POST_INSTANTIATE)) {\r\n\t\t\tdispatchEvent(new InjectionEvent(InjectionEvent.POST_INSTANTIATE, instance, type));\r\n\t\t}\r\n\t\tapplyInjectionPoints(instance, type, description);\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\t/**\r\n\t * Uses the <code>TypeDescription</code> the injector associates with the given instance's\r\n\t * type to iterate over all <code>[PreDestroy]</code> methods in the instance, supporting\r\n\t * automated destruction.\r\n\t *\r\n\t * @param instance The instance to destroy\r\n\t */\r\n\tpublic function destroyInstance(instance:Dynamic):Void\r\n\t{\r\n\t\t_managedObjects[UID.clearInstanceID(instance)] = null;\r\n\t\tvar type:Class<Dynamic> = _reflector.getClass(instance);\r\n\t\tvar typeDescription:TypeDescription = getTypeDescription(type);\r\n\t\t// FIX\r\n\t\t/*for (var preDestroyHook:PreDestroyInjectionPoint = typeDescription.preDestroyMethods; preDestroyHook; preDestroyHook = PreDestroyInjectionPoint(preDestroyHook.next))\r\n\t\t{\r\n\t\t\tpreDestroyHook.applyInjection(instance, type, this);\r\n\t\t}*/\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the injector by cleaning up all instances it manages.\r\n\t *\r\n\t * Cleanup in this context means iterating over all mapped dependency providers and invoking\r\n\t * their <code>destroy</code> methods and calling preDestroy methods on all objects the\r\n\t * injector created or injected into.\r\n\t *\r\n\t * Of note, the <link>SingletonProvider</link>'s implementation of <code>destroy</code>\r\n\t * invokes all preDestroy methods on the managed singleton to guarantee its orderly\r\n\t * destruction. Implementers of custom implementations of <link>DependencyProviders</link>\r\n\t * are encouraged to do likewise.\r\n\t */\r\n\tpublic function teardown():Void\r\n\t{\r\n\t\tfor ( mapping in _mappings)\r\n\t\t{\r\n\t\t\tmapping.getProvider().destroy();\r\n\t\t}\r\n\t\tvar objectsToRemove:Array<Dynamic> = new Array<Dynamic>();\r\n\t\tvar fields;\r\n\t\t// CHECK\r\n\t\tfor ( instance in _managedObjects)\r\n\t\t{\r\n\t\t\tif (instance) objectsToRemove.push(instance);\r\n\t\t}\r\n\t\t\r\n\t\twhile(objectsToRemove.length > 0)\r\n\t\t{\r\n\t\t\tdestroyInstance(objectsToRemove.pop());\r\n\t\t}\r\n\t\tfields = Reflect.fields(providerMappings);\r\n\t\tfor (mappingId in fields) {\r\n\t\t\tproviderMappings.remove(mappingId);\r\n\t\t}\r\n\t\t_mappings = new Map<String,InjectionMapping>();\r\n\t\t_mappingsInProcess = new Map<String,Bool>();\r\n\t\t_managedObjects = new Map<String,Dynamic>();\r\n\t\tthis.fallbackProvider = null;\r\n\t\tthis.blockParentFallbackProvider = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Injector</code> and sets itself as that new <code>Injector</code>'s\r\n\t * <code>parentInjector</code>.\r\n\t *\r\n\t * @param applicationDomain The optional domain to use in the new Injector.\r\n\t * If not given, the creating injector's domain is set on the new Injector as well.\r\n\t * @return The newly created <code>Injector</code> instance\r\n\t *\r\n\t * @see #parentInjector\r\n\t */\r\n\tpublic function createChildInjector(applicationDomain:ApplicationDomain = null):Injector\r\n\t{\r\n\t\tvar injector:Injector = new Injector();\r\n\t\tif (applicationDomain != null) injector.applicationDomain = applicationDomain;\r\n\t\telse injector.applicationDomain = this.applicationDomain;\r\n\t\t//injector.applicationDomain = applicationDomain || this.applicationDomain;\r\n\t\tinjector.parentInjector = this;\r\n\t\treturn injector;\r\n\t}\r\n\r\n\t\r\n\t\r\n\t/**\r\n\t * Instructs the injector to use the description for the given type when constructing or\r\n\t * destroying instances.\r\n\t *\r\n\t * The description consists details for the constructor, all properties and methods to\r\n\t * inject into during construction and all methods to invoke during destruction.\r\n\t *\r\n\t * @param type\r\n\t * @param description\r\n\t */\r\n\tpublic function addTypeDescription(type:Class<Dynamic>, description:TypeDescription):Void\r\n\t{\r\n\t\t_classDescriptor.addDescription(type, description);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a description of the given type containing its constructor, injection points\r\n\t * and post construct and pre destroy hooks\r\n\t *\r\n\t * @param type The type to describe\r\n\t * @return The TypeDescription containing all information the injector has about the type\r\n\t */\r\n\tpublic function getTypeDescription(type:Class<Dynamic>):TypeDescription\r\n\t{\r\n\t\treturn _reflector.describeInjections(type);\r\n\t}\r\n\t\r\n\tpublic function hasMapping(type:Class<Dynamic>, name:String = ''):Bool\r\n\t{\r\n\t\treturn getProvider(CallProxy.replaceClassName(type) + '|' + name) != null;\r\n\t}\r\n\t\r\n\tpublic function hasDirectMapping(type:Class<Dynamic>, name:String = ''):Bool\r\n\t{\r\n\t\treturn _mappings[CallProxy.replaceClassName(type) + '|' + name] != null;\r\n\t}\r\n\r\n\t\r\n\t\r\n\t//----------------------             Internal Methods               ----------------------//\r\n\tpublic static function purgeInjectionPointsCache():Void\r\n\t{\r\n\t\tINJECTION_POINTS_CACHE = new Map<String,TypeDescription>();\r\n\t}\r\n\t\t\t\r\n\tpublic function canBeInstantiated(type:Class<Dynamic>):Bool\r\n\t{\r\n\t\tvar description:TypeDescription = _classDescriptor.getDescription(type);\r\n\t\treturn description.ctor != null;\r\n\t}\r\n\r\n\tpublic function getProvider(mappingId:String, fallbackToDefault:Bool = true):DependencyProvider\r\n\t{\r\n\t\tvar softProvider:DependencyProvider = null;\r\n\t\tvar injector:Injector = this;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\twhile (injector != null)\r\n\t\t{\r\n\t\t\tvar provider:DependencyProvider = injector.providerMappings[mappingId];\r\n\t\t\t\r\n\t\t\tif (provider != null)\r\n\t\t\t{\r\n\t\t\t\tif (Std.is(provider, SoftDependencyProvider))\r\n\t\t\t\t{\r\n\t\t\t\t\tsoftProvider = provider;\r\n\t\t\t\t\tinjector = injector.parentInjector;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (Std.is(provider, LocalOnlyProvider) && injector != this)\r\n\t\t\t\t{\r\n\t\t\t\t\tinjector = injector.parentInjector;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn provider;\r\n\t\t\t}\r\n\t\t\tinjector = injector.parentInjector;\r\n\t\t}\r\n\t\tif (softProvider != null)\r\n\t\t{\r\n\t\t\treturn softProvider;\r\n\t\t}\r\n\t\tif (fallbackToDefault) {\r\n\t\t\treturn getDefaultProvider(mappingId, true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t//return fallbackToDefault ? getDefaultProvider(mappingId, true):null;\r\n\t}\r\n\r\n\tpublic function getDefaultProvider(mappingId:String, consultParents:Bool):DependencyProvider\r\n\t{\r\n\t\t//No meaningful way to automatically create base types without names\r\n\t\tif (_baseTypes.indexOf(mappingId) > -1)\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (this.fallbackProvider != null && this.fallbackProvider.prepareNextRequest(mappingId))\r\n\t\t{\r\n\t\t\treturn this.fallbackProvider;\r\n\t\t}\r\n\t\tif (consultParents && this.blockParentFallbackProvider && this.parentInjector != null)\r\n\t\t{\r\n\t\t\treturn this.parentInjector.getDefaultProvider(mappingId,  consultParents);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function createMapping(type:Class<Dynamic>, name: String, mappingId:String):InjectionMapping\r\n\t{\r\n\t\tif (_mappingsInProcess[mappingId])\r\n\t\t{\r\n\t\t\tthrow new InjectorError(\r\n\t\t\t\t'Can\\'t change a mapping from inside a listener to it\\'s creation event');\r\n\t\t}\r\n\t\t_mappingsInProcess[mappingId] = true;\r\n\t\t\r\n\t\thasEventListener(MappingEvent.PRE_MAPPING_CREATE) && dispatchEvent(\r\n\t\t\tnew MappingEvent(MappingEvent.PRE_MAPPING_CREATE, type, name, null));\r\n\r\n\t\tvar mapping:InjectionMapping = new InjectionMapping(this, type, name, mappingId);\r\n\t\t_mappings[mappingId] = mapping;\r\n\r\n\t\tvar sealKey:Dynamic = mapping.seal();\r\n\t\thasEventListener(MappingEvent.POST_MAPPING_CREATE) && dispatchEvent(new MappingEvent(MappingEvent.POST_MAPPING_CREATE, type, name, mapping));\r\n\t\t_mappingsInProcess.remove(mappingId);\r\n\t\tmapping.unseal(sealKey);\r\n\t\treturn mapping;\r\n\t}\r\n\r\n\tprivate function applyInjectionPoints(target:Dynamic, targetType:Class<Dynamic>, description:TypeDescription):Void\r\n\t{\r\n\t\tvar injectionPoint = description.injectionPoints;\r\n\t\tif (hasEventListener(InjectionEvent.PRE_CONSTRUCT)) {\r\n\t\t\tdispatchEvent(new InjectionEvent(InjectionEvent.PRE_CONSTRUCT, target, targetType));\r\n\t\t}\r\n\t\twhile (injectionPoint != null)\r\n\t\t{\r\n\t\t\tinjectionPoint.applyInjection(target, targetType, this);\r\n\t\t\tinjectionPoint = injectionPoint.next;\r\n\t\t}\r\n\t\tif (description.preDestroyMethods != null)\r\n\t\t{\r\n\t\t\t_managedObjects[UID.instanceID(target)] = target;\r\n\t\t}\r\n\t\t\r\n\t\thasEventListener(InjectionEvent.POST_CONSTRUCT) && dispatchEvent(new InjectionEvent(InjectionEvent.POST_CONSTRUCT, target, targetType));\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\nimport org.swiftsuspenders.Injector;\r\n\r\n@:keepSub\r\nclass ClassProvider implements DependencyProvider\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _responseType:Class<Dynamic>;\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(responseType:Class<Dynamic>)\r\n\t{\r\n\t\t_responseType = responseType;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t *\r\n\t * @return A new instance of the class given to the ClassProvider's constructor,\r\n\t * constructed using the <code>usingInjector</code>\r\n\t */\r\n\tpublic function apply(targetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\treturn activeInjector.instantiateUnmapped(_responseType);\r\n\t}\r\n\r\n\tpublic function destroy():Void\r\n\t{\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\nimport org.swiftsuspenders.Injector;\r\n\r\n@:keepSub\r\nclass ForwardingProvider implements DependencyProvider\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\tpublic var provider:DependencyProvider;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(provider:DependencyProvider)\r\n\t{\r\n\t\tthis.provider = provider;\r\n\t}\r\n\r\n\tpublic function apply(\r\n\t\ttargetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\treturn provider.apply(targetType, activeInjector, injectParameters);\r\n\t}\r\n\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\tprovider.destroy();\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\nimport org.swiftsuspenders.Injector;\r\n\r\n@:keepSub\r\nclass InjectorUsingProvider extends ForwardingProvider\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\tpublic var injector:Injector;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(injector:Injector, provider:DependencyProvider)\r\n\t{\r\n\t\tsuper(provider);\r\n\t\tthis.injector = injector;\r\n\t}\r\n\r\n\toverride public function apply(\r\n\t\ttargetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\treturn provider.apply(targetType, injector, injectParameters);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\n@:keepSub\r\nclass LocalOnlyProvider extends ForwardingProvider\r\n{\r\n\tpublic function new(provider:DependencyProvider)\r\n\t{\r\n\t\tsuper(provider);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.errors.InjectorError;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass SingletonProvider implements DependencyProvider\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _responseType:Class<Dynamic>;\r\n\tprivate var _creatingInjector:Injector;\r\n\tprivate var _response:Dynamic;\r\n\tprivate var _destroyed:Bool;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\t/**\r\n\t *\r\n\t * @param responseType The class the provider returns the same, lazily created, instance\r\n\t * of for each request\r\n\t * @param creatingInjector The injector that was used to create the\r\n\t * <code>InjectionMapping</code> this DependencyProvider is associated with\r\n\t */\r\n\tpublic function new(responseType:Class<Dynamic>, creatingInjector:Injector)\r\n\t{\r\n\t\t_responseType = responseType;\r\n\t\t_creatingInjector = creatingInjector;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t *\r\n\t * @return The same, lazily created, instance of the class given to the SingletonProvider's\r\n\t * constructor on each invocation\r\n\t */\r\n\tpublic function apply(targetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\tif (_response == null) {\r\n\t\t\t_response = createResponse(_creatingInjector);\r\n\t\t}\r\n\t\t//_response = _response || createResponse(_creatingInjector);\r\n\t\treturn _response;\r\n\t}\r\n\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function createResponse(injector:Injector):Dynamic\r\n\t{\r\n\t\tif (_destroyed)\r\n\t\t{\r\n\t\t\tthrow new InjectorError(\"Forbidden usage of unmapped singleton provider for type \"\r\n\t\t\t\t+ CallProxy.replaceClassName(_responseType));\r\n\t\t}\r\n\t\treturn injector.instantiateUnmapped(_responseType);\r\n\t}\r\n\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\t_destroyed = true;\r\n\t\tif (_response != null && _creatingInjector != null && _creatingInjector.hasManagedInstance(_response))\r\n\t\t{\r\n\t\t\t_creatingInjector.destroyInstance(_response);\r\n\t\t}\r\n\t\t_creatingInjector = null;\r\n\t\t_response = null;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\n@:keepSub\r\nclass SoftDependencyProvider extends ForwardingProvider\r\n{\r\n\tpublic function new(provider:DependencyProvider)\r\n\t{\r\n\t\tsuper(provider);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.dependencyproviders;\r\n\r\nimport org.swiftsuspenders.Injector;\r\n\r\n@:keepSub\r\nclass ValueProvider implements DependencyProvider\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _value:Dynamic;\r\n\tprivate var _creatingInjector:Injector;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(value:Dynamic, creatingInjector:Injector = null)\r\n\t{\r\n\t\t_value = value;\r\n\t\t_creatingInjector = creatingInjector;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t *\r\n\t * @return The value provided to this provider's constructor\r\n\t */\r\n\tpublic function apply(targetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\treturn _value;\r\n\t}\r\n\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\tif (_value != null && _creatingInjector != null && _creatingInjector.hasManagedInstance(_value))\r\n\t\t{\r\n\t\t\t_creatingInjector.destroyInstance(_value);\r\n\t\t}\r\n\t\t_creatingInjector = null;\r\n\t\t_value = null;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.errors;\r\n\r\nimport openfl.errors.Error;\r\n\r\n@:keepSub\r\nclass InjectorError extends Error\r\n{\r\n\tpublic function new(message:Dynamic=\"\", id:Dynamic=0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.errors;\r\n\r\n@:keepSub\r\nclass InjectorInterfaceConstructionError extends InjectorError\r\n{\r\n\tpublic function new(message :Dynamic = \"\", id :Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.errors;\r\n\r\n@:keepSub\r\nclass InjectorMissingMappingError extends InjectorError\r\n{\r\n\tpublic function new(message :Dynamic = \"\", id :Dynamic = 0)\r\n\t{\r\n\t\tsuper(message, id);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.mapping;\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.dependencyproviders.ClassProvider;\r\nimport org.swiftsuspenders.dependencyproviders.DependencyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.ForwardingProvider;\r\nimport org.swiftsuspenders.dependencyproviders.InjectorUsingProvider;\r\nimport org.swiftsuspenders.dependencyproviders.LocalOnlyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.SingletonProvider;\r\nimport org.swiftsuspenders.dependencyproviders.SoftDependencyProvider;\r\nimport org.swiftsuspenders.dependencyproviders.ValueProvider;\r\nimport org.swiftsuspenders.errors.InjectorError;\r\n\r\n@:keepSub\r\nclass InjectionMapping implements ProviderlessMapping implements UnsealedMapping\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _type:Class<Dynamic>;\r\n\tprivate var _name:String;\r\n\tprivate var _mappingId:String;\r\n\tprivate var _creatingInjector:Injector;\r\n\tprivate var _defaultProviderSet:Bool;\r\n\r\n\tprivate var _overridingInjector:Injector;\r\n\tprivate var _soft:Bool;\r\n\tprivate var _local:Bool;\r\n\tprivate var _sealed:Bool;\r\n\tprivate var _sealKey:Dynamic;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(creatingInjector:Injector, type:Class<Dynamic>, name:String, mappingId:String)\r\n\t{\r\n\t\t_creatingInjector = creatingInjector;\r\n\t\t_type = type;\r\n\t\t_name = name;\r\n\t\t_mappingId = mappingId;\r\n\t\t_defaultProviderSet = true;\r\n\t\tmapProvider(new ClassProvider(type));\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping return a lazily constructed singleton instance of the mapped type for\r\n\t * each consecutive request.\r\n\t *\r\n\t * <p>Syntactic sugar method wholly equivalent to using <code>toSingleton(type)</code>.</p>\r\n\t *\r\n\t * @param initializeImmediately Determines when the instance should be created, immediately after mapping or after the first request (default)\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t *\r\n\t * @see #toSingleton()\r\n\t */\r\n\tpublic function asSingleton(initializeImmediately:Bool = false):UnsealedMapping\r\n\t{\r\n\t\ttoSingleton(_type, initializeImmediately);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping return a newly created instance of the given <code>type</code> for\r\n\t * each consecutive request.\r\n\t *\r\n\t * <p>Syntactic sugar method wholly equivalent to using\r\n\t * <code>toProvider(new ClassProvider(type))</code>.</p>\r\n\t *\r\n\t * @param type The <code>class</code> to instantiate upon each request\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t *\r\n\t * @see #toProvider()\r\n\t */\r\n\tpublic function toType(type:Class<Dynamic>):UnsealedMapping\r\n\t{\r\n\t\ttoProvider(new ClassProvider(type));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping return a lazily constructed singleton instance of the mapped type for\r\n\t * each consecutive request.\r\n\t *\r\n\t * <p>Syntactic sugar method wholly equivalent to using\r\n\t * <code>toProvider(new SingletonProvider(type, injector))</code>, where\r\n\t * <code>injector</code> denotes the Injector that should manage the singleton.</p>\r\n\t *\r\n\t * @param type The <code>class</code> to instantiate upon each request\r\n\t * @param initializeImmediately Determines when the instance should be created, immediately after mapping or after the first request (default)\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t *\r\n\t * @see #toProvider()\r\n\t */\r\n\tpublic function toSingleton(type:Class<Dynamic>, initializeImmediately:Bool = false):UnsealedMapping\r\n\t{\r\n\t\ttoProvider(new SingletonProvider(type, _creatingInjector));\r\n\t\tif (initializeImmediately) {\r\n\t\t\t_creatingInjector.getInstance(_type, _name);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping return the given value for each consecutive request.\r\n\t *\r\n\t * <p>Syntactic sugar method wholly equivalent to using\r\n\t * <code>toProvider(new ValueProvider(value))</code>.</p>\r\n\t *\r\n\t * @param value The instance to return upon each request\r\n\t * @param autoInject Inspects the given object and injects into all injection points configured for its class directly after mapping\r\n\t * @param destroyOnUnmap Destroy the given object after it will unmapped\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t *\r\n\t * @see #toProvider()\r\n\t * @see Injector#injectInto()\r\n\t * @see Injector#destroyInstance()\r\n\t */\r\n\tpublic function toValue(value:Dynamic, autoInject:Bool = false, destroyOnUnmap:Bool = false):UnsealedMapping\r\n\t{\r\n\t\ttoProvider(new ValueProvider(value, destroyOnUnmap ? _creatingInjector:null));\r\n\t\tif (autoInject)\r\n\t\t{\r\n\t\t\t_creatingInjector.injectInto(value);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping apply the given <code>DependencyProvider</code> and return the\r\n\t * resulting value for each consecutive request.\r\n\t *\r\n\t * @param provider The <code>DependencyProvider</code> to use for fulfilling requests\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t */\r\n\tpublic function toProvider(provider:DependencyProvider):UnsealedMapping\r\n\t{\r\n\t\t// CHECK\r\n\t\t//_sealed && throwSealedError();\r\n\t\tif (_sealed) throwSealedError();\r\n\t\tif (hasProvider() && provider != null && !_defaultProviderSet)\r\n\t\t{\r\n\t\t\ttrace('Warning: Injector already has a mapping for ' + _mappingId + '.\\n ' +\r\n\t\t\t\t'If you have overridden this mapping intentionally you can use ' +\r\n\t\t\t\t'\"injector.unmap()\" prior to your replacement mapping in order to ' +\r\n\t\t\t\t'avoid seeing this message.');\r\n\t\t\t_creatingInjector.hasEventListener(MappingEvent.MAPPING_OVERRIDE)\r\n\t\t\t&& _creatingInjector.dispatchEvent(\r\n\t\t\t\tnew MappingEvent(MappingEvent.MAPPING_OVERRIDE, _type, _name, this));\r\n\t\t}\r\n\t\tdispatchPreChangeEvent();\r\n\t\t_defaultProviderSet = false;\r\n\t\tmapProvider(provider);\r\n\t\tdispatchPostChangeEvent();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the mapping apply the <code>DependencyProvider</code> mapped to <code>type</code>\r\n\t * and (optionally) <code>name</code> and return the resulting value for each consecutive\r\n\t * request.\r\n\t *\r\n\t * @param type The type to use the provider of\r\n\t * @param name The name to use the provider of\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorMissingMappingError when no mapping was found\r\n\t * for the specified dependency\r\n\t */\r\n\tpublic function toProviderOf(type:Class<Dynamic>, name:String = ''):UnsealedMapping{\r\n\t\tvar provider:DependencyProvider = _creatingInjector.getMapping(type, name).getProvider();\r\n\t\ttoProvider(provider);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Causes the Injector the mapping is defined in to look further up in its inheritance\r\n\t * chain for other mappings for the requested dependency. The Injector will use the\r\n\t * inner-most strong mapping if one exists or the outer-most soft mapping otherwise.\r\n\t *\r\n\t * <p>Soft mappings enable modules to be set up in such a way that some of their settings\r\n\t * can optionally be configured from the outside without them failing to run in standalone\r\n\t * mode.</p>\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t */\r\n\tpublic function softly():ProviderlessMapping\r\n\t{\r\n\t\t// CHECK\r\n\t\t//_sealed && throwSealedError();\r\n\t\tif (_sealed) throwSealedError();\r\n\t\tif (!_soft)\r\n\t\t{\r\n\t\t\tvar provider:DependencyProvider = getProvider();\r\n\t\t\tdispatchPreChangeEvent();\r\n\t\t\t_soft = true;\r\n\t\t\tmapProvider(provider);\r\n\t\t\tdispatchPostChangeEvent();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables sharing the mapping with child Injectors of the Injector it is defined in.\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Sealed mappings can't be changed in any way\r\n\t */\r\n\tpublic function locally():ProviderlessMapping\r\n\t{\r\n\t\t// CHECK\r\n\t\t//_sealed && throwSealedError();\r\n\t\tif (_sealed) throwSealedError();\r\n\t\tif (_local)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar provider:DependencyProvider = getProvider();\r\n\t\tdispatchPreChangeEvent();\r\n\t\t_local = true;\r\n\t\tmapProvider(provider);\r\n\t\tdispatchPostChangeEvent();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents all subsequent changes to the mapping, including removal. Trying to change it\r\n\t * in any way at all will throw an <code>InjectorError</code>.\r\n\t *\r\n\t * <p>To enable unsealing of the mapping at a later time, <code>seal</code> returns a\r\n\t * unique object that can be used as the argument to <code>unseal</code>. As long as that\r\n\t * key object is kept secret, there's no way to tamper with or remove the mapping.</p>\r\n\t *\r\n\t * @returns An internally created object that can be used as the key for unseal\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Can't be invoked on a mapping that's already sealed\r\n\t *\r\n\t * @see #unseal()\r\n\t */\r\n\tpublic function seal():Dynamic\r\n\t{\r\n\t\tif (_sealed)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Mapping is already sealed.');\r\n\t\t}\r\n\t\t_sealed = true;\r\n\t\t_sealKey = {};\r\n\t\treturn _sealKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts the effect of <code>seal</code>, makes the mapping changeable again.\r\n\t *\r\n\t * @param key The key to unseal the mapping. Has to be the instance returned by\r\n\t * <code>seal()</code>\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t *\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Has to be invoked with the unique key object returned by an earlier call to <code>seal</code>\r\n\t * @throws org.swiftsuspenders.errors.InjectorError Can't unseal a mapping that's not sealed\r\n\t *\r\n\t * @see #seal()\r\n\t */\r\n\tpublic function unseal(key:Dynamic):InjectionMapping\r\n\t{\r\n\t\tif (!_sealed)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Can\\'t unseal a non-sealed mapping.');\r\n\t\t}\r\n\t\tif (key != _sealKey)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Can\\'t unseal mapping without the correct key.');\r\n\t\t}\r\n\t\t_sealed = false;\r\n\t\t_sealKey = null;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return <code>true</code> if the mapping is sealed, <code>false</code> if not\r\n\t */\r\n\t\r\n\tpublic var isSealed(get_isSealed, null):Bool;\r\n\t\r\n\tpublic function get_isSealed():Bool\r\n\t{\r\n\t\treturn _sealed;\r\n\t}\r\n\r\n\t/**\r\n\t * @return <code>true</code> if the mapping has a provider, <code>false</code> if not\r\n\t */\r\n\tpublic function hasProvider():Bool\r\n\t{\r\n\t\tif (_creatingInjector.providerMappings[_mappingId] == null) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return The provider currently associated with the mapping\r\n\t */\r\n\tpublic function getProvider():DependencyProvider\r\n\t{\r\n\t\tvar provider:DependencyProvider = _creatingInjector.providerMappings[_mappingId];\r\n\t\twhile (Std.is(provider, ForwardingProvider))\r\n\t\t{\r\n\t\t\tprovider = cast(provider, ForwardingProvider).provider;\r\n\t\t}\r\n\t\treturn provider;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the Injector to supply to the mapped DependencyProvider or to query for ancestor\r\n\t * mappings.\r\n\t *\r\n\t * An Injector is always provided when calling apply, but if one is also set using\r\n\t * setInjector, it takes precedence. This is used to implement forks in a dependency graph,\r\n\t * allowing the use of a different Injector from a certain point in the constructed object\r\n\t * graph on.\r\n\t *\r\n\t * @param injector - The Injector to use in the mapping. Set to null to reset.\r\n\t *\r\n\t * @return The <code>InjectionMapping</code> the method is invoked on\r\n\t */\r\n\tpublic function setInjector(injector:Injector):InjectionMapping\r\n\t{\r\n\t\t// CHECK\r\n\t\t//_sealed && throwSealedError();\r\n\t\tif (_sealed) throwSealedError();\r\n\t\t\r\n\t\tif (injector == _overridingInjector)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar provider:DependencyProvider = getProvider();\r\n\t\t_overridingInjector = injector;\r\n\t\tmapProvider(provider);\r\n\t\treturn this;\r\n\t}\r\n\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function mapProvider(provider:DependencyProvider):Void\r\n\t{\r\n\t\tif (_soft)\r\n\t\t{\r\n\t\t\tprovider = new SoftDependencyProvider(provider);\r\n\t\t}\r\n\t\tif (_local)\r\n\t\t{\r\n\t\t\tprovider = new LocalOnlyProvider(provider);\r\n\t\t}\r\n\t\tif (_overridingInjector != null)\r\n\t\t{\r\n\t\t\tprovider = new InjectorUsingProvider(_overridingInjector, provider);\r\n\t\t}\r\n\t\t\r\n\t\t_creatingInjector.providerMappings[_mappingId] = provider;\r\n\t}\r\n\r\n\tprivate function throwSealedError():Void\r\n\t{\r\n\t\tthrow new InjectorError('Can\\'t change a sealed mapping');\r\n\t}\r\n\r\n\tprivate function dispatchPreChangeEvent():Void\r\n\t{\r\n\t\t_creatingInjector.hasEventListener(MappingEvent.PRE_MAPPING_CHANGE)\r\n\t\t\t&& _creatingInjector.dispatchEvent(\r\n\t\t\tnew MappingEvent(MappingEvent.PRE_MAPPING_CHANGE, _type, _name, this));\r\n\t}\r\n\r\n\tprivate function dispatchPostChangeEvent():Void\r\n\t{\r\n\t\t_creatingInjector.hasEventListener(MappingEvent.POST_MAPPING_CHANGE)\r\n\t\t\t&& _creatingInjector.dispatchEvent(\r\n\t\t\tnew MappingEvent(MappingEvent.POST_MAPPING_CHANGE, _type, _name, this));\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.mapping;\r\n\r\nimport openfl.events.Event;\r\n\r\n@:keepSub\r\nclass MappingEvent extends Event\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\t/**\r\n\t * @eventType preMappingCreate\r\n\t */\r\n\tpublic static var PRE_MAPPING_CREATE:String = 'preMappingCreate';\r\n\t/**\r\n\t * @eventType postMappingCreate\r\n\t */\r\n\tpublic static var POST_MAPPING_CREATE:String = 'postMappingCreate';\r\n\t/**\r\n\t * @eventType preMappingChange\r\n\t */\r\n\tpublic static var PRE_MAPPING_CHANGE:String = 'preMappingChange';\r\n\t/**\r\n\t * @eventType postMappingChange\r\n\t */\r\n\tpublic static var POST_MAPPING_CHANGE:String = 'postMappingChange';\r\n\t/**\r\n\t * @eventType postMappingRemove\r\n\t */\r\n\tpublic static var POST_MAPPING_REMOVE:String = 'postMappingRemove';\r\n\t/**\r\n\t * @eventType mappingOverride\r\n\t */\r\n\tpublic static var MAPPING_OVERRIDE:String = 'mappingOverride';\r\n\r\n\r\n\tpublic var mappedType:Class<Dynamic>;\r\n\tpublic var mappedName:String;\r\n\tpublic var mapping:InjectionMapping;\r\n\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(type:String, mappedType:Class<Dynamic>, mappedName:String, mapping:InjectionMapping)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.mappedType = mappedType;\r\n\t\tthis.mappedName = mappedName;\r\n\t\tthis.mapping = mapping;\r\n\t}\r\n\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new MappingEvent(type, mappedType, mappedName, mapping);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.reflection;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n//import flash.utils.Proxy;\r\n//import flash.utils.getDefinitionByName;\r\n\r\n@:keepSub\r\nclass ReflectorBase\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\r\n\tpublic function getClass(value:Dynamic):Class<Dynamic>\r\n\t{\r\n\t\t/*\r\n\t\t There are several types for which the 'constructor' property doesn't work:\r\n\t\t - instances of Proxy, Xml and XMLList throw exceptions when trying to access 'constructor'\r\n\t\t - instances of Vector, always returns Array<Dynamic> as their constructor except numeric vectors\r\n\t\t - for numeric vectors 'value is Array<Dynamic>' wont work, but 'value.constructor' will return correct result\r\n\t\t - Int and UInt return Float as their constructor\r\n\t\t For these, we have to fall back to more verbose ways of getting the constructor.\r\n\t\t */\r\n\t\t// FIX (add XMLList, Float)\r\n\t\t/*if (Std.is(value, Proxy))\r\n\t\t{\r\n\t\t\treturn Proxy;\r\n\t\t}*/\r\n\t\t/*else if (Std.is(value, Float))\r\n\t\t{\r\n\t\t\treturn Float;\r\n\t\t}*/\r\n\t\t/*else */if (Std.is(value, Xml))\r\n\t\t{\r\n\t\t\treturn Xml;\r\n\t\t}\r\n\t\telse if (Std.is(value, Array))\r\n\t\t{\r\n\t\t\treturn Array;\r\n\t\t}\r\n\t\t\r\n\t\t/*if (Std.is(value, Proxy) || Std.is(value, Float) || Std.is(value, Xml) || Std.is(value, XMLList) || Std.is(value, Array))\r\n\t\t{\r\n\t\t\tvar classReference = Type.resolveClass(\"flash.display.Sprite\");\r\n\t\t\tvar instance = Type.createEmptyInstance(classReference);\r\n\t\t\t\r\n\t\t\treturn cast(getDefinitionByName(CallProxy.replaceClassName(value)), Class<Dynamic>);\r\n\t\t\t\r\n\t\t\t//return cast(getDefinitionByName(CallProxy.replaceClassName(value)), Class<Dynamic>);\r\n\t\t}*/\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/*#if js\r\n\t\t\treturn untyped __typeof__(value);\r\n\t\t#else */\r\n\t\t\treturn value.constructor;\r\n\t\t//#end\r\n\t}\r\n\r\n\tpublic function getFQCN(value :Dynamic, replaceColons:Bool = false):String\r\n\t{\r\n\t\tvar fqcn:String;\r\n\t\tif (Std.is(value, String))\r\n\t\t{\r\n\t\t\tfqcn = value;\r\n\t\t\t// Add colons if missing and desired.\r\n\t\t\tif (!replaceColons && fqcn.indexOf('::') == -1)\r\n\t\t\t{\r\n\t\t\t\tvar lastDotIndex:Int = fqcn.lastIndexOf('.');\r\n\t\t\t\tif (lastDotIndex == -1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn fqcn;\r\n\t\t\t\t}\r\n\t\t\t\treturn fqcn.substring(0, lastDotIndex) + '::' +\r\n\t\t\t\t\t\tfqcn.substring(lastDotIndex + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfqcn = CallProxy.replaceClassName(value);\r\n\t\t}\r\n\t\t\r\n\t\tif (replaceColons == true) {\r\n\t\t\treturn fqcn.split('::').join('.');\r\n\t\t}\r\n\t\treturn fqcn;\r\n\t}\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.reflection;\r\n\r\n\r\n//import flash.utils.describeType;\r\nimport haxe.rtti.Meta;\r\nimport haxe.xml.Fast;\r\nimport openfl.errors.Error;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\nimport org.swiftsuspenders.errors.InjectorError;\r\n\r\nimport org.swiftsuspenders.typedescriptions.ConstructorInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.MethodInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.NoParamsConstructorInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.PostConstructInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.PreDestroyInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.PropertyInjectionPoint;\r\nimport org.swiftsuspenders.typedescriptions.TypeDescription;\r\n\r\n@:keepSub\r\n@:rtti\r\nclass DescribeTypeRTTIReflector extends ReflectorBase implements Reflector\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _currentFactoryXML:Xml;\r\n\tprivate var _currentFactoryXMLFast:Fast;\r\n\tvar constructorElem:Fast;\r\n\tvar rtti:String;\r\n\tvar extendPath:String;\r\n\t\r\n\tprivate var extendDescribeTypeReflector:DescribeTypeRTTIReflector;\r\n\tvar extendTypeDescription:org.swiftsuspenders.typedescriptions.TypeDescription;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function typeImplements(type:Class<Dynamic>, superType:Class<Dynamic>):Bool\r\n\t{\r\n\t\treturn classExtendsOrImplements(type, superType);\r\n\t}\r\n\t\r\n\t/*\r\n\tMethod Credits: 2012-2014 Massive Interactive\r\n\t//package minject.Reflector;\r\n\t*/\r\n\t\r\n\tpublic function classExtendsOrImplements(classOrClassName:Dynamic, superClass:Class<Dynamic>):Bool\r\n\t{\r\n\t\tvar actualClass:Class<Dynamic> = null;\r\n\t\t\r\n\t\tif (Std.is(classOrClassName, Class))\r\n\t\t{\r\n\t\t\tactualClass = cast(classOrClassName, Class<Dynamic>);\r\n\t\t}\r\n\t\telse if (Std.is(classOrClassName, String))\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tactualClass = Type.resolveClass(cast(classOrClassName, String));\r\n\t\t\t}\r\n\t\t\tcatch (e:Dynamic)\r\n\t\t\t{\r\n\t\t\t\tthrow \"The class name \" + classOrClassName + \" is not valid because of \" + e + \"\\n\" + e.getStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (actualClass == null)\r\n\t\t{\r\n\t\t\tthrow \"The parameter classOrClassName must be a Class or fully qualified class name.\";\r\n\t\t}\r\n\t\t\r\n\t\tvar classInstance = Type.createEmptyInstance(actualClass);\r\n\t\treturn Std.is(classInstance, superClass);\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tpublic function describeInjections(_type:Class<Dynamic>):TypeDescription\r\n\t{\r\n\t\tif (extendDescribeTypeReflector == null) {\r\n\t\t\textendDescribeTypeReflector = new DescribeTypeRTTIReflector();\r\n\t\t}\r\n\t\t\r\n\t\t#if cpp\r\n\t\t\tvar type:Dynamic = _type;\r\n\t\t#else \r\n\t\t\tvar type:Class<Dynamic> = _type;\r\n\t\t#end\r\n\t\t\r\n\t\trtti = untyped type.__rtti;\r\n\t\tif (rtti == null) {\r\n\t\t\tif (!isInterface(type)) trace(\"Warning: \" + CallProxy.getClassName(type) + \" missing @:rtti matadata\");\r\n\t\t}\r\n\t\t\r\n\t\tif (rtti != null) {\r\n\t\t\t\r\n\t\t\t_currentFactoryXML = Xml.parse(rtti).firstElement();\r\n\t\t\t_currentFactoryXMLFast = new Fast(_currentFactoryXML);\r\n\t\t\t\r\n\t\t\tfor (elem in _currentFactoryXMLFast.elements) {\r\n\t\t\t\tif (elem.name == 'new') constructorElem = elem;\r\n\t\t\t\tif (elem.name == 'extends') {\r\n\t\t\t\t\textendPath = elem.att.path;\r\n\t\t\t\t\tvar extendClass = Type.resolveClass(extendPath);\r\n\t\t\t\t\textendTypeDescription = extendDescribeTypeReflector.describeInjections(extendClass);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar description:TypeDescription = new TypeDescription(false);\r\n\t\taddCtorInjectionPoint(description, type); // TEMP\r\n\t\taddFieldInjectionPoints(description, type); // FIX\r\n\t\taddMethodInjectionPoints(description, type); // FIX\r\n\t\taddPostConstructMethodPoints(description, type); // FIX\r\n\t\taddPreDestroyMethodPoints(description, type); // FIX\r\n\t\t\r\n\t\t_currentFactoryXML = null;\r\n\t\t_currentFactoryXMLFast = null;\r\n\t\tconstructorElem = null;\r\n\t\t\r\n\t\trtti = null;\r\n\t\textendPath = null;\r\n\t\textendTypeDescription = null;\r\n\t\t\r\n\t\treturn description;\r\n\t}\r\n\t\r\n\tfunction isInterface(type:Class<Dynamic>):Bool\r\n\t{\r\n\t\t// Hack to check if class is an interface by looking at its class name and seeing if it Starts with a (IU)ppercase\r\n\t\tvar classPath = CallProxy.replaceClassName(type);\r\n\t\tvar split = classPath.split(\".\");\r\n\t\tvar className:String = split[split.length - 1];\r\n\t\tif (className.length <= 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar r = ~/(I)([A-Z])/;\r\n\t\t\tvar f2 = className.substr(0, 2);\r\n\t\t\tif (r.match(f2)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse return false;\r\n\t\t}\r\n\t}\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function addCtorInjectionPoint(description:TypeDescription, type:Class<Dynamic>):Void\r\n\t{\r\n\t\t// TEMP (no CtorInjectionPoints will be added)\r\n\t\t\r\n\t\tif (constructorElem == null) {\r\n\t\t\tdescription.ctor = new NoParamsConstructorInjectionPoint();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tvar className = CallProxy.getClassName(type);\r\n\t\t\r\n\t\t// CHECK add injectParameters\r\n\t\tvar injectParameters:Map<String,Dynamic> = null;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar parameterNames:Array<String> = constructorElem.node.f.att.a.split(\":\");\r\n\t\tvar parameters:Array<String> = parametersFromXml(constructorElem.x);\r\n\t\t\r\n\t\t\r\n\t\tvar requiredParameters:UInt = 0;\r\n\t\tfor (j in 0...parameterNames.length) \r\n\t\t{\r\n\t\t\tif (parameterNames[j].indexOf(\"?\") != 0) {\r\n\t\t\t\trequiredParameters++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdescription.ctor = new ConstructorInjectionPoint(parameters, requiredParameters, injectParameters);\r\n\t}\r\n\t\r\n\tfunction parametersFromXml(x:Xml):Array<String>\r\n\t{\r\n\t\tvar parameters:Array<String> = [];\r\n\t\tfor (node in x.firstElement().iterator()) \r\n\t\t{\r\n\t\t\tif(node.nodeType == Xml.Element ){\r\n\t\t\t\tvar nodeFast = new Fast(node);\r\n\t\t\t\tparameters.push(nodeFast.att.path + \"|\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tparameters.pop();\r\n\t\treturn parameters;\r\n\t}\r\n\t\r\n\t// FIX\r\n\t/*private function extractNodeParameters(args:XMLList):Map<Dynamic,Dynamic>\r\n\t{\r\n\t\tvar parametersMap:Map<Dynamic,Dynamic> = new Map<Dynamic,Dynamic>();\r\n\t\tvar length:UInt = args.length();\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\tvar parameter:Xml = args[i];\r\n\t\t\tvar key:String = parameter.@key;\r\n\t\t\tparametersMap[key] = parametersMap[key]\r\n\t\t\t\t? parametersMap[key] + ',' + parameter.attribute('value')\r\n\t\t\t\t: parameter.attribute('value');\r\n\t\t}\r\n\t\treturn parametersMap;\r\n\t}*/\r\n\t\r\n\tprivate function addFieldInjectionPoints(description:TypeDescription, type:Class<Dynamic>):Void\r\n\t{\r\n\t\t// CHECK\r\n\t\tvar metaFields = Meta.getFields(type);\r\n\t\tvar fields = Reflect.fields(metaFields);\r\n\t\tvar injectFields:Array<String> = [];\r\n\t\t\r\n\t\tfor (value in fields) {\r\n\t\t\t\r\n\t\t\tvar metaFields1 = Reflect.getProperty(metaFields, value);\r\n\t\t\tvar fields1 = Reflect.fields(metaFields1);\r\n\t\t\tif (fields1[0] == 'inject') {\r\n\t\t\t\tinjectFields.push(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (extendTypeDescription != null) {\r\n\t\t\tdescription.injectionPoints = extendTypeDescription.injectionPoints;\r\n\t\t}\r\n\t\t\r\n\t\tfor (propertyName in injectFields) {\r\n\t\t\tvar optional = false;\r\n\t\t\tvar injectParams:Array<String> = Reflect.getProperty(Reflect.getProperty(metaFields, propertyName), \"inject\");\r\n\t\t\tif (injectParams != null){\r\n\t\t\t\tfor (i in 0...injectParams.length) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (injectParams[i].indexOf(\"optional=\") != -1) {\r\n\t\t\t\t\t\tif (injectParams[i].split(\"optional=\")[1].toLowerCase() == 'true') {\r\n\t\t\t\t\t\t\toptional = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//var mappingId:String = CallProxy.replaceClassName(type) + '|';// + node.arg.(@key == 'name').attribute('value');\r\n\t\t\t\r\n\t\t\tvar mappingId:String = \"\";\r\n\t\t\tfor (elem in _currentFactoryXMLFast.elements) {\r\n\t\t\t\tif (elem.name == propertyName) {\r\n\t\t\t\t\t// FIX missing key \r\n\t\t\t\t\tvar pathFast = new Fast(elem.x.firstElement());\r\n\t\t\t\t\tif (pathFast.has.path) mappingId = pathFast.att.path + '|';// + node.arg.(@key == 'name').attribute('value');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*<init public=\"1\" set=\"method\" line=\"54\">\r\n\t\t\t\t<f a=\"\"><x path=\"Void\"/></f>\r\n\t\t\t\t<meta><m n=\"PostConstruct\"/></meta>\r\n\t\t\t</init>\r\n\t\t\t*/\r\n\t\t\t/*<init public=\"1\" set=\"method\" line=\"54\">\r\n\t\t\t\t<f a=\"\"><x path=\"Void\"/></f>\r\n\t\t\t</init>*/\r\n\t\t\t\r\n\t\t\t//var optional = Reflect.getProperty(injectParams, \"optional\");\r\n\t\t\t\r\n\t\t\t// FIX missing injectParameters\r\n\t\t\t//var injectParameters:Map<String,Dynamic> = extractNodeParameters(node.arg);\r\n\t\t\tvar injectParameters = new Map<String,Dynamic>();\r\n\t\t\t\r\n\t\t\tvar injectionPoint:PropertyInjectionPoint = new PropertyInjectionPoint(mappingId, propertyName, optional, injectParameters);\r\n\t\t\tdescription.addInjectionPoint(injectionPoint);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// FIX\r\n\t\t/*for (var node:Xml in _currentFactoryXML.*.\r\n\t\t\t\t(name() == 'variable' || name() == 'accessor').metadata.(@name == 'Inject'))\r\n\t\t{\r\n\t\t\tvar mappingId:String =\r\n\t\t\t\t\tnode.parent().@type + '|' + node.arg.(@key == 'name').attribute('value');\r\n\t\t\tvar propertyName:String = node.parent().@name;\r\n\t\t\tvar injectParameters:Map<Dynamic,Dynamic> = extractNodeParameters(node.arg);\r\n\t\t\tvar injectionPoint:PropertyInjectionPoint = new PropertyInjectionPoint(mappingId,\r\n\t\t\t\tpropertyName, injectParameters.optional == 'true', injectParameters);\r\n\t\t\tdescription.addInjectionPoint(injectionPoint);\r\n\t\t}*/\r\n\t}\r\n\r\n\tprivate function addMethodInjectionPoints(description:TypeDescription, type:Class<Dynamic>):Void\r\n\t{\r\n\t\t// FIX\r\n\t\t/*for each (var node:Xml in _currentFactoryXML.method.metadata.(@name == 'Inject'))\r\n\t\t{\r\n\t\t\tvar injectParameters:Map<Dynamic,Dynamic> = extractNodeParameters(node.arg);\r\n\t\t\tvar parameterNames:Array = (injectParameters.name || '').split(',');\r\n\t\t\tvar parameters:Array =\r\n\t\t\t\t\tgatherMethodParameters(node.parent().parameter, parameterNames);\r\n\t\t\tvar requiredParameters:UInt = parameters.required;\r\n\t\t\tdelete parameters.required;\r\n\t\t\tvar injectionPoint:MethodInjectionPoint = new MethodInjectionPoint(\r\n\t\t\t\tnode.parent().@name, parameters, requiredParameters,\r\n\t\t\t\tinjectParameters.optional == 'true', injectParameters);\r\n\t\t\tdescription.addInjectionPoint(injectionPoint);\r\n\t\t}*/\r\n\t}\r\n\r\n\tprivate function addPostConstructMethodPoints(description:TypeDescription, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar injectionPoints:Array<Dynamic> = gatherOrderedInjectionPointsForTag(PostConstructInjectionPoint, 'PostConstruct', type);\r\n\t\t\r\n\t\tvar length = injectionPoints.length;\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\tdescription.addInjectionPoint(injectionPoints[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function addPreDestroyMethodPoints(description:TypeDescription, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar injectionPoints:Array<Dynamic> = gatherOrderedInjectionPointsForTag(PreDestroyInjectionPoint, 'PreDestroy', type);\r\n\t\t\r\n\t\tif (injectionPoints.length == 0)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdescription.preDestroyMethods = injectionPoints[0];\r\n\t\tdescription.preDestroyMethods.last = injectionPoints[0];\r\n\t\tvar length = injectionPoints.length;\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\tdescription.preDestroyMethods.last.next = injectionPoints[i];\r\n\t\t\tdescription.preDestroyMethods.last = injectionPoints[i];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function gatherOrderedInjectionPointsForTag(injectionPointType:Class<Dynamic>, tag:String, type:Class<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\tvar injectionPoints:Array<Dynamic> = [];\r\n\t\t\r\n\t\tvar metaFields = Meta.getFields(type);\r\n\t\tvar fields = Reflect.fields(metaFields);\r\n\t\tvar injectMethods:Array<String> = [];\r\n\t\t\r\n\t\tfor (value in fields) {\r\n\t\t\t\r\n\t\t\tvar metaFields1 = Reflect.getProperty(metaFields, value);\r\n\t\t\tvar fields1 = Reflect.fields(metaFields1);\r\n\t\t\t\r\n\t\t\t//trace(\"tag = \" + tag);\r\n\t\t\t//trace(\"fields1[0] = \" + fields1[0]);\r\n\t\t\tif (fields1[0].toLowerCase() == tag.toLowerCase()) {\r\n\t\t\t\tinjectMethods.push(value);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tfor (node in _currentFactoryXML.iterator()) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (node.nodeType == Xml.Element ) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (node.nodeName == value){\r\n\t\t\t\t\t\t\t//trace(\"node = \" + node);\r\n\t\t\t\t\t\t\tvar parameterNames:Array<String> = new Fast(node).node.f.att.a.split(\":\");\r\n\t\t\t\t\t\t\tvar requiredParameters:Int = 0;\r\n\t\t\t\t\t\t\tfor (i in 0...parameterNames.length) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//trace('parameterNames[i] = ' + parameterNames[i]);\r\n\t\t\t\t\t\t\t\t//trace(\"parameterNames[i].indexOf('?') = \" + parameterNames[i].indexOf(\"?\"));\r\n\t\t\t\t\t\t\t\tif (parameterNames[i].indexOf(\"?\") != 0) {\r\n\t\t\t\t\t\t\t\t\trequiredParameters++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trequiredParameters--;\r\n\t\t\t\t\t\t\tvar parameters:Array<String> = parametersFromXml(node);\r\n\t\t\t\t\t\t\t//trace(\"parameterNames = \" + parameterNames);\r\n\t\t\t\t\t\t\t//trace(\"parameters = \" + parameters);\r\n\t\t\t\t\t\t\t//trace(\"requiredParameters = \" + requiredParameters);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// FIX ORDER\r\n\t\t\t\t\t\t\t//var injectionPoint = Type.createInstance(injectionPointType, [node.nodeName, parameters, requiredParameters, 0x3FFFFFFF]); // ORDER: isNaN(order) ? Limits.IntMax:order\r\n\t\t\t\t\t\t\tvar injectionPoint = CallProxy.createInstance(injectionPointType, [node.nodeName, parameters, requiredParameters, 0x3FFFFFFF]); // ORDER: isNaN(order) ? Limits.IntMax:order\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tinjectionPoints.push(injectionPoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//var nodeFast = new Fast(node);\r\n\t\t\t\t\t\t//parameters.push(nodeFast.att.path + \"|\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn injectionPoints;\r\n\t}\r\n\r\n\tprivate function createDummyInstance(constructorNode:Xml, clazz:Class<Dynamic>):Void\r\n\t{\r\n\t\t// FIX\r\n\t\t/*try\r\n\t\t{\r\n\t\t\tswitch (constructorNode.children().length())\r\n\t\t\t{\r\n\t\t\t\tcase 0 :(Type.createInstance(clazz, null));\r\n\t\t\t\tcase 1 :(Type.createInstance(clazz, [null]));\r\n\t\t\t\tcase 2 :(Type.createInstance(clazz, [null, null]));\r\n\t\t\t\tcase 3 :(Type.createInstance(clazz, [null, null, null]));\r\n\t\t\t\tcase 4 :(Type.createInstance(clazz, [null, null, null, null]));\r\n\t\t\t\tcase 5 :(Type.createInstance(clazz, [null, null, null, null, null]));\r\n\t\t\t\tcase 6 :(Type.createInstance(clazz, [null, null, null, null, null, null]));\r\n\t\t\t\tcase 7 :(Type.createInstance(clazz, [null, null, null, null, null, null, null]));\r\n\t\t\t\tcase 8 :(Type.createInstance(clazz, [null, null, null, null, null, null, null, null]));\r\n\t\t\t\tcase 9 :(Type.createInstance(clazz, [null, null, null, null, null, null, null, null, null]));\r\n\t\t\t\tcase 10 :(Type.createInstance(clazz, [null, null, null, null, null, null, null, null, null, null]));\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (error:Error)\r\n\t\t{\r\n\t\t\ttrace('Exception caught while trying to create dummy instance for constructor ' +\r\n\t\t\t\t\t'injection. It\\'s almost certainly ok to ignore this exception, but you ' +\r\n\t\t\t\t\t'might want to restructure your constructor to prevent errors from ' +\r\n\t\t\t\t\t'happening. See the Swiftsuspenders documentation for more details.\\n' +\r\n\t\t\t\t\t'The caught exception was:\\n' + error);\r\n\t\t}*/\r\n\t\t// FIX\r\n\t\t//constructorNode.setChildren(describeType(clazz).factory.constructor[0].children());\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n\r\n\r\nimport org.swiftsuspenders.Injector;\r\n\r\n@:keepSub\r\nclass InjectionPoint\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\tpublic var next:InjectionPoint;\r\n\tpublic var last:InjectionPoint;\r\n\tpublic var injectParameters:Map<Dynamic,Dynamic>;\r\n\t\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new()\r\n\t{\r\n\t}\r\n\t\r\n\tpublic function applyInjection(target:Dynamic, targetType:Class<Dynamic>, injector:Injector):Void\r\n\t{\r\n\t\t\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n//import avmplus.getQualifiedClassName;\r\n\r\n\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.errors.InjectorMissingMappingError;\r\nimport org.swiftsuspenders.dependencyproviders.DependencyProvider;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass MethodInjectionPoint extends InjectionPoint\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _parameterMappingIDs:Array<Dynamic>;\r\n\tprivate var _requiredParameters:Int;\r\n\r\n\tprivate var _isOptional:Bool;\r\n\tprivate var _methodName:String;\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(methodName:String, parameters:Array<Dynamic>, requiredParameters:UInt, isOptional:Bool, injectParameters:Map<Dynamic,Dynamic>)\r\n\t{\r\n\t\t_methodName = methodName;\r\n\t\t_parameterMappingIDs = parameters;\r\n\t\t_requiredParameters = requiredParameters;\r\n\t\t_isOptional = isOptional;\r\n\t\tthis.injectParameters = injectParameters;\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\toverride public function applyInjection(target:Dynamic, targetType:Class<Dynamic>, injector:Injector):Void\r\n\t{\r\n\t\tvar p:Array<Dynamic> = gatherParameterValues(target, targetType, injector);\r\n\t\t\r\n\t\tif (p.length >= _requiredParameters)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tvar func = Reflect.getProperty(target, _methodName);\r\n\t\t\tif (Reflect.isFunction(func)) {\r\n\t\t\t\tReflect.callMethod(target, func, p);\r\n\t\t\t}\r\n\t\t}\r\n\t\tp = [];\r\n\t}\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function gatherParameterValues(target:Dynamic, targetType:Class<Dynamic>, injector:Injector):Array<Dynamic>\r\n\t{\r\n\t\tvar length:Int = _parameterMappingIDs.length;\r\n\t\tvar parameters:Array<Dynamic> = [];\r\n\t\t// CHECK\r\n\t\t//parameters.length = length;\r\n\t\t\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\tvar parameterMappingId:String = _parameterMappingIDs[i];\r\n\t\t\tvar provider:DependencyProvider = injector.getProvider(parameterMappingId);\r\n\t\t\tif (provider == null)\r\n\t\t\t{\r\n\t\t\t\tif (i >= _requiredParameters || _isOptional)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar errorMsg:String = 'Injector is missing a mapping to handle injection into target \"';\r\n\t\t\t\terrorMsg += target;\r\n\t\t\t\terrorMsg += '\" of type \"';\r\n\t\t\t\terrorMsg += CallProxy.replaceClassName(targetType);\r\n\t\t\t\terrorMsg += '\". Target dependency: ';\r\n\t\t\t\terrorMsg += parameterMappingId;\r\n\t\t\t\terrorMsg += ', method: ';\r\n\t\t\t\terrorMsg += _methodName;\r\n\t\t\t\terrorMsg += ', parameter: ';\r\n\t\t\t\terrorMsg += (i + 1);\r\n\t\t\t\t\r\n\t\t\t\tthrow(new InjectorMissingMappingError(errorMsg));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tparameters[i] = provider.apply(targetType, injector, injectParameters);\r\n\t\t}\r\n\t\treturn parameters;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n\r\nimport openfl.errors.Error;\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass ConstructorInjectionPoint extends MethodInjectionPoint\r\n{\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(parameters:Array<Dynamic>, requiredParameters:UInt, injectParameters:Map<Dynamic,Dynamic>)\r\n\t{\r\n\t\tsuper('ctor', parameters, requiredParameters, false, injectParameters);\r\n\t}\r\n\r\n\tpublic function createInstance(type:Class<Dynamic>, injector:Injector):Dynamic\r\n\t{\r\n\t\tvar p:Array<Dynamic> = gatherParameterValues(type, type, injector);\r\n\t\tvar result:Dynamic;\r\n\t\t//the only way to implement ctor injections, really!\r\n\t\t\r\n\t\tswitch (p.length)\r\n\t\t{\r\n\t\t\t/*case 0:result = Type.createInstance( type, [] );\r\n\t\t\tcase 1:result = Type.createInstance( type, [p[0]] );\r\n\t\t\tcase 2:result = Type.createInstance( type, [p[0], p[1]] );\r\n\t\t\tcase 3:result = Type.createInstance( type, [p[0], p[1], p[2]] );\r\n\t\t\tcase 4:result = Type.createInstance( type, [p[0], p[1], p[2], p[3]] );\r\n\t\t\tcase 5:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4]] );\r\n\t\t\tcase 6:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5]] );\r\n\t\t\tcase 7:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6]] );\r\n\t\t\tcase 8:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7]] );\r\n\t\t\tcase 9:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8]] );\r\n\t\t\tcase 10:result = Type.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8], p[9]] );\r\n\t\t\tdefault: throw new Error(\"The constructor for \" + type + \" has too many arguments, maximum is 10\");*/\r\n\t\t\t\r\n\t\t\tcase 0:result = CallProxy.createInstance( type, [] );\r\n\t\t\tcase 1:result = CallProxy.createInstance( type, [p[0]] );\r\n\t\t\tcase 2:result = CallProxy.createInstance( type, [p[0], p[1]] );\r\n\t\t\tcase 3:result = CallProxy.createInstance( type, [p[0], p[1], p[2]] );\r\n\t\t\tcase 4:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3]] );\r\n\t\t\tcase 5:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4]] );\r\n\t\t\tcase 6:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5]] );\r\n\t\t\tcase 7:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6]] );\r\n\t\t\tcase 8:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7]] );\r\n\t\t\tcase 9:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8]] );\r\n\t\t\tcase 10:result = CallProxy.createInstance( type, [p[0], p[1], p[2], p[3], p[4], p[5], p[6], p[7], p[8], p[9]] );\r\n\t\t\tdefault: throw new Error(\"The constructor for \" + type + \" has too many arguments, maximum is 10\");\r\n\t\t}\r\n\t\tp = [];\r\n\t\treturn result;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass NoParamsConstructorInjectionPoint extends ConstructorInjectionPoint\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper([], 0, injectParameters);\r\n\t}\r\n\r\n\toverride public function createInstance(type:Class<Dynamic>, injector:Injector):Dynamic\r\n\t{\r\n\t\t//return Type.createInstance(type, []);\r\n\t\treturn CallProxy.createInstance(type, []);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2011 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n@:keepSub\r\nclass OrderedInjectionPoint extends MethodInjectionPoint\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\tpublic var order:Int;\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(methodName:String, parameters:Array<Dynamic>, requiredParameters:UInt, order:Int)\r\n\t{\r\n\t\tsuper(methodName, parameters, requiredParameters, false, null);\r\n\t\tthis.order = order;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2011 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n@:keepSub\r\nclass PostConstructInjectionPoint extends OrderedInjectionPoint\r\n{\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(methodName:String, parameters:Array<Dynamic>, requiredParameters:UInt, order:Int)\r\n\t{\r\n\t\tsuper(methodName, parameters, requiredParameters, order);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2011 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n@:keepSub\r\nclass PreDestroyInjectionPoint extends OrderedInjectionPoint\r\n{\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(methodName:String, parameters:Array<Dynamic>, requiredParameters:UInt, order:Int)\r\n\t{\r\n\t\tsuper(methodName, parameters, requiredParameters, order);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file \r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.errors.InjectorMissingMappingError;\r\nimport org.swiftsuspenders.dependencyproviders.DependencyProvider;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass PropertyInjectionPoint extends InjectionPoint\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _propertyName:String;\r\n\tprivate var _mappingId:String;\r\n\tprivate var _optional:Bool;\r\n\t\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(mappingId:String, propertyName:String, optional:Bool, injectParameters:Map<Dynamic,Dynamic>)\r\n\t{\r\n\t\t_propertyName = propertyName;\r\n\t\t_mappingId = mappingId;\r\n\t\t_optional = optional;\r\n\t\tthis.injectParameters = injectParameters;\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\toverride public function applyInjection(target:Dynamic, targetType:Class<Dynamic>, injector:Injector):Void\r\n\t{\r\n\t\tvar provider:DependencyProvider = injector.getProvider(_mappingId);\r\n\t\tif (provider == null)\r\n\t\t{\r\n\t\t\tif (_optional)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow(new InjectorMissingMappingError('Injector is missing a mapping to handle injection into property \"' + _propertyName + '\" of object \"' + target + '\" with type \"' +CallProxy.replaceClassName(targetType) +'\". Target dependency: \"' + _mappingId + '\"'));\r\n\t\t}\r\n\t\tReflect.setProperty(target, _propertyName, provider.apply(targetType, injector, injectParameters));\r\n\t\t//target[_propertyName] = provider.apply(targetType, injector, injectParameters);\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.typedescriptions;\r\n\r\n\r\n\r\nimport org.swiftsuspenders.errors.InjectorError;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n@:keepSub\r\nclass TypeDescription\r\n{\r\n\t//----------------------              Public Properties             ----------------------//\r\n\tpublic var ctor:ConstructorInjectionPoint;\r\n\tpublic var injectionPoints:InjectionPoint;\r\n\tpublic var preDestroyMethods:PreDestroyInjectionPoint;\r\n\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tprivate var _postConstructAdded:Bool;\r\n\t\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(useDefaultConstructor:Bool = true)\r\n\t{\r\n\t\tif (useDefaultConstructor)\r\n\t\t{\r\n\t\t\tctor = new NoParamsConstructorInjectionPoint();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic function setConstructor(parameterTypes:Array<Dynamic>, parameterNames:Array<Dynamic> = null, requiredParameters:UInt = 0x3FFFFFFF, metadata:Map<Dynamic,Dynamic> = null):TypeDescription\r\n\t{\r\n\t\tvar param:Array<Dynamic>;\r\n\t\tif (parameterNames != null) param = parameterNames;\r\n\t\telse param = [];\r\n\t\t\r\n\t\tctor = new ConstructorInjectionPoint(createParameterMappings(parameterTypes, param), requiredParameters, metadata);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function addFieldInjection(fieldName:String, type:Class<Dynamic>, injectionName:String = '', optional:Bool = false, metadata:Map<Dynamic,Dynamic> = null):TypeDescription\r\n\t{\r\n\t\tif (_postConstructAdded)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Can\\'t add injection point after post construct method');\r\n\t\t}\r\n\t\taddInjectionPoint(new PropertyInjectionPoint(\r\n\t\t\tCallProxy.replaceClassName(type) + '|' + injectionName, fieldName, optional, metadata));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function addMethodInjection(methodName:String, parameterTypes:Array<Dynamic>, parameterNames:Array<Dynamic> = null, requiredParameters:UInt = 0x3FFFFFFF, optional:Bool = false, metadata:Map<Dynamic,Dynamic> = null):TypeDescription\r\n\t{\r\n\t\tif (_postConstructAdded)\r\n\t\t{\r\n\t\t\tthrow new InjectorError('Can\\'t add injection point after post construct method');\r\n\t\t}\r\n\t\tvar param:Array<Dynamic>;\r\n\t\tif (parameterNames != null) param = parameterNames;\r\n\t\telse param = [];\r\n\t\t\r\n\t\taddInjectionPoint(new MethodInjectionPoint(\r\n\t\t\tmethodName, createParameterMappings(parameterTypes, param),\r\n\t\t\tcast(Math.min(requiredParameters, parameterTypes.length), UInt), optional, metadata));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function addPostConstructMethod(methodName:String, parameterTypes:Array<Dynamic>, parameterNames:Array<Dynamic> = null, requiredParameters:UInt = 0x3FFFFFFF):TypeDescription\r\n\t{\r\n\t\tvar param:Array<Dynamic>;\r\n\t\tif (parameterNames != null) param = parameterNames;\r\n\t\telse param = [];\r\n\t\t\r\n\t\t_postConstructAdded = true;\r\n\t\taddInjectionPoint(new PostConstructInjectionPoint(\r\n\t\t\tmethodName, createParameterMappings(parameterTypes, param),\r\n\t\t\tcast(Math.min(requiredParameters, parameterTypes.length), UInt), 0));\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function addPreDestroyMethod(methodName:String, parameterTypes:Array<Dynamic>, parameterNames:Array<Dynamic> = null, requiredParameters:UInt = 0x3FFFFFFF):TypeDescription\r\n\t{\r\n\t\tvar param:Array<Dynamic>;\r\n\t\tif (parameterNames != null) param = parameterNames;\r\n\t\telse param = [];\r\n\t\t\r\n\t\tvar method:PreDestroyInjectionPoint = new PreDestroyInjectionPoint(\r\n\t\t\tmethodName, createParameterMappings(parameterTypes, param),\r\n\t\t\tcast(Math.min(requiredParameters, parameterTypes.length), UInt), 0);\r\n\t\tif (preDestroyMethods != null)\r\n\t\t{\r\n\t\t\tpreDestroyMethods.last.next = method;\r\n\t\t\tpreDestroyMethods.last = method;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpreDestroyMethods = method;\r\n\t\t\tpreDestroyMethods.last = method;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function addInjectionPoint(injectionPoint:InjectionPoint):Void\r\n\t{\r\n\t\tif (injectionPoints != null)\r\n\t\t{\r\n\t\t\tinjectionPoints.last.next = injectionPoint;\r\n\t\t\tinjectionPoints.last = injectionPoint;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tinjectionPoints = injectionPoint;\r\n\t\t\tinjectionPoints.last = injectionPoint;\r\n\t\t}\r\n\t}\r\n\r\n\t//----------------------         Private / Protected Methods        ----------------------//\r\n\tprivate function createParameterMappings(parameterTypes:Array<Dynamic>, parameterNames:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\tvar parameters = new Array<Dynamic>();\r\n\t\tfor (n in 0...parameterTypes.length)\r\n\t\t{\r\n\t\t\tvar i = parameters.length - n;\r\n\t\t\tparameters[i] = CallProxy.replaceClassName(parameterTypes[i]) + '|';\r\n\t\t\tif (parameterNames[i]) parameters[i] += parameterNames[i];\r\n\t\t}\r\n\t\treturn parameters;\r\n\t}\r\n}","/*\r\n * Copyright (c) 2012 the original author or authors\r\n *\r\n * Permission is hereby granted to use, modify, and distribute this file\r\n * in accordance with the terms of the license agreement accompanying it.\r\n */\r\n\r\npackage org.swiftsuspenders.utils;\r\n\r\nimport org.swiftsuspenders.reflection.Reflector;\r\nimport org.swiftsuspenders.typedescriptions.TypeDescription;\r\n\r\n@:keepSub\r\nclass TypeDescriptor\r\n{\r\n\t//----------------------       Private / Protected Properties       ----------------------//\r\n\tpublic var _descriptionsCache:Map<String,TypeDescription>;\r\n\tprivate var _reflector:Reflector;\r\n\r\n\r\n\t//----------------------               Public Methods               ----------------------//\r\n\tpublic function new(reflector:Reflector, descriptionsCache:Map<String,TypeDescription>)\r\n\t{\r\n\t\t_descriptionsCache = descriptionsCache;\r\n\t\t_reflector = reflector;\r\n\t}\r\n\r\n\tpublic function getDescription(type:Class<Dynamic>):TypeDescription\r\n\t{\r\n\t\tvar id = UID.classID(type);\r\n\t\t//get type description or cache it if the given type wasn't encountered before\r\n\t\tif (_descriptionsCache[id] == null) {\r\n\t\t\t_descriptionsCache[id] = _reflector.describeInjections(type);\r\n\t\t}\r\n\t\t//_descriptionsCache[type] = _descriptionsCache[type] || _reflector.describeInjections(type);\r\n\t\treturn _descriptionsCache[id];\r\n\t}\r\n\r\n\tpublic function addDescription(type:Class<Dynamic>, description:TypeDescription):Void\r\n\t{\r\n\t\t_descriptionsCache[UID.classID(type)] = description;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage org.swiftsuspenders.utils;\r\nimport openfl.errors.Error;\r\n\r\n\r\n/**\r\n * Utility for generating unique object IDs\r\n */\r\n\r\n@:keepSub\r\nclass UID\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Properties                                                  */\r\n\t/*============================================================================*/\r\n\r\n\tprivate static var _i:UInt;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Functions                                                    */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Generates a UID for a given source object or class\r\n\t * @param source The source object or class\r\n\t * @return Generated UID\r\n\t */\r\n\tpublic static function create(source:Dynamic = null):String\r\n\t{\r\n\t\tvar className = UID.classID(source);\r\n\t\treturn (source ? source + '-':'')\r\n\t\t\t+ StringTools.hex(_i++, 16)\r\n\t\t\t+ '-'\r\n\t\t\t+ StringTools.hex(Math.floor(Math.random() * 255), 16);\r\n\t}\r\n\t\r\n\tpublic static function classID(source:Dynamic):String\r\n\t{\r\n\t\tvar className = \"\";\r\n\t\tif (Std.is(source, Class)) {\r\n\t\t\tclassName = CallProxy.replaceClassName(source); \r\n\t\t}\r\n\t\telse if (Type.getClass(source) != null) {\r\n\t\t\tclassName = CallProxy.replaceClassName(Type.getClass(source)); \r\n\t\t}\r\n\t\treturn className;\r\n\t}\r\n\t\r\n\t// Be careful here (you are storing references to objects)\r\n\t//private static var refs = new Array<Dynamic>();\r\n\tprivate static var classRefs = new Map<String,Array<Dynamic>>();\r\n\t\r\n\tpublic static function instanceID(source:Dynamic):String\r\n\t{\r\n\t\tvar classID = classID(source);\r\n\t\tif (Std.is(source, Class)) {\r\n\t\t\t// Instance can not be of type Class\r\n\t\t\treturn classID;\r\n\t\t}\r\n\t\tif (classRefs[classID] == null) {\r\n\t\t\tclassRefs[classID] = [];\r\n\t\t}\r\n\t\tvar id:Int = -1;\r\n\t\tfor (i in 0...classRefs[classID].length) \r\n\t\t{\r\n\t\t\tif (classRefs[classID][i] == source) {\r\n\t\t\t\tid = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (id == -1) {\r\n\t\t\tid = classRefs[classID].length;\r\n\t\t\tclassRefs[classID].push(source);\r\n\t\t}\r\n\t\treturn UID.classID(source) + \"-\" + id;\r\n\t}\r\n\t\r\n\tpublic static function clearInstanceID(source:Dynamic):String\r\n\t{\r\n\t\t// Warning, the next time instanceID is called, a new ID will be assigned!\r\n\t\tvar classID = classID(source);\r\n\t\tif (Std.is(source, Class)) {\r\n\t\t\t// Instance can not be of type Class\r\n\t\t\treturn classID;\r\n\t\t}\r\n\t\tif (classRefs[classID] == null) {\r\n\t\t\tclassRefs[classID] = [];\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...classRefs[classID].length) \r\n\t\t{\r\n\t\t\tif (classRefs[classID][i] == source) {\r\n\t\t\t\tclassRefs[classID][i] = null;\r\n\t\t\t\treturn UID.classID(source) + \"-\" + i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(\"instanceID: \" + source + \" is not in use\");\r\n\t\treturn \"\";\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.bundles.mvcs;\r\n\r\nimport robotlegs.bender.extensions.contextView.ContextViewExtension;\r\nimport robotlegs.bender.extensions.contextView.StageSyncExtension;\r\nimport robotlegs.bender.extensions.contextView.ContextViewListenerConfig;\r\nimport robotlegs.bender.extensions.directCommandMap.DirectCommandMapExtension;\r\nimport robotlegs.bender.extensions.enhancedLogging.InjectableLoggerExtension;\r\nimport robotlegs.bender.extensions.enhancedLogging.TraceLoggingExtension;\r\nimport robotlegs.bender.extensions.eventCommandMap.EventCommandMapExtension;\r\nimport robotlegs.bender.extensions.eventDispatcher.EventDispatcherExtension;\r\nimport robotlegs.bender.extensions.localEventMap.LocalEventMapExtension;\r\nimport robotlegs.bender.extensions.mediatorMap.MediatorMapExtension;\r\nimport robotlegs.bender.extensions.modularity.ModularityExtension;\r\nimport robotlegs.bender.extensions.viewManager.StageCrawlerExtension;\r\nimport robotlegs.bender.extensions.viewManager.StageObserverExtension;\r\nimport robotlegs.bender.extensions.viewManager.ViewManagerExtension;\r\nimport robotlegs.bender.extensions.viewProcessorMap.ViewProcessorMapExtension;\r\nimport robotlegs.bender.extensions.vigilance.VigilanceExtension;\r\nimport robotlegs.bender.framework.api.IBundle;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.LogLevel;\r\n\r\n/**\r\n * For that Classic Robotlegs flavour\r\n *\r\n * <p>This bundle installs a number of extensions commonly used\r\n * in typical Robotlegs applications and modules.</p>\r\n */\r\n\r\n@:keepSub\r\nclass MVCSBundle implements IBundle\r\n{\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.logLevel = LogLevel.INFO;\r\n\t\t\r\n\t\tcontext.install([\r\n\t\t\tTraceLoggingExtension,\r\n\t\t\tVigilanceExtension,\r\n\t\t\tInjectableLoggerExtension,\r\n\t\t\tContextViewExtension,\r\n\t\t\tEventDispatcherExtension,\r\n\t\t\tModularityExtension,\r\n\t\t\tDirectCommandMapExtension,\r\n\t\t\tEventCommandMapExtension,\r\n\t\t\tLocalEventMapExtension,\r\n\t\t\tViewManagerExtension,\r\n\t\t\tStageObserverExtension,\r\n\t\t\tMediatorMapExtension,\r\n\t\t\tViewProcessorMapExtension,\r\n\t\t\tStageCrawlerExtension,\r\n\t\t\tStageSyncExtension]);\r\n\t\t\t\r\n\t\tcontext.configure([ContextViewListenerConfig]);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.api;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandPayload\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t//private var _values:Array<Dynamic>;\r\n\tpublic var values(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * Ordered list of values\r\n\t */\r\n\tfunction get_values():Array<Dynamic>\r\n\t{\r\n\t\treturn this.values;\r\n\t}\r\n\r\n\t//private var _classes:Array<Dynamic>;\r\n\tpublic var classes(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * Ordered list of value classes\r\n\t */\r\n\tfunction get_classes():Array<Dynamic>\r\n\t{\r\n\t\treturn this.classes;\r\n\t}\r\n\r\n\tpublic var length(get, null):UInt;\r\n\t/**\r\n\t * The number of payload items\r\n\t */\r\n\tfunction get_length():UInt\r\n\t{\r\n\t\tif (this.classes != null) return this.classes.length;\r\n\t\telse return 0;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a command payload\r\n\t * @param values Optional values\r\n\t * @param classes Optional classes\r\n\t */\r\n\tpublic function new(values:Array<Dynamic> = null, classes:Array<Dynamic> = null)\r\n\t{\r\n\t\tthis.values = values;\r\n\t\tthis.classes = classes;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Adds an item to this payload\r\n\t * @param payloadValue The value\r\n\t * @param payloadClass The class of the value\r\n\t * @return Self\r\n\t */\r\n\tpublic function addPayload(payloadValue:Dynamic, payloadClass:Class<Dynamic>):CommandPayload\r\n\t{\r\n\t\tif (this.values != null)\r\n\t\t{\r\n\t\t\tthis.values.push(payloadValue);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.values = [payloadValue];\r\n\t\t}\r\n\t\tif (this.classes != null)\r\n\t\t{\r\n\t\t\tthis.classes.push(payloadClass);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.classes = [payloadClass];\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Does this payload have any items?\r\n\t * @return Bool\r\n\t */\r\n\tpublic function hasPayload():Bool\r\n\t{\r\n\t\t// todo: the final clause will make this fail silently\r\n\t\t// todo: rethink\r\n\t\t// CHECK\r\n\t\tif (this.values != null && this.classes != null) {\r\n\t\t\tif (this.values.length > 0 && this.classes.length == this.values.length) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//return this.values && this.values.length > 0 && this.classes && this.classes.length == this.values.length;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMapping;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.impl.ApplyHooks;\r\nimport robotlegs.bender.framework.impl.GuardsApprove;\r\nimport robotlegs.bender.extensions.commandCenter.api.CommandPayload;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandExecutor implements ICommandExecutor\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _removeMapping:ICommandMapping->Void;\r\n\r\n\tprivate var _handleResult:Dynamic;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Command Executor\r\n\t * @param injector The Injector to use. A child injector will be created from it.\r\n\t * @param removeMapping Remove mapping handler (optional)\r\n\t * @param handleResult Result handler (optional)\r\n\t */\r\n\tpublic function new(injector:IInjector, removeMapping:ICommandMapping->Void = null, handleResult:Dynamic = null)\r\n\t{\r\n\t\t_injector = injector.createChild();\r\n\t\t_removeMapping = removeMapping;\r\n\t\t_handleResult = handleResult;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function executeCommands(mappings:Array<ICommandMapping>, payload:CommandPayload = null):Void\r\n\t{\r\n\t\tvar length:Int = mappings.length;\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\texecuteCommand(mappings[i], payload);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function executeCommand(mapping:ICommandMapping, payload:CommandPayload = null):Void\r\n\t{\r\n\t\t\r\n\t\tvar hasPayload:Bool = (payload != null) && payload.hasPayload();\r\n\t\t\r\n\t\tvar injectionEnabled:Bool = hasPayload && mapping.payloadInjectionEnabled;\r\n\t\tvar command:Dynamic = null;\r\n\r\n\t\tif (injectionEnabled) mapPayload(payload);\r\n\r\n\t\tif (mapping.guards.length == 0 || GuardsApprove.call(mapping.guards, _injector))\r\n\t\t{\r\n\t\t\tvar commandClass:Class<Dynamic> = mapping.commandClass;\r\n\t\t\tif (mapping.fireOnce && (_removeMapping != null)) {\r\n\t\t\t\t_removeMapping(mapping);\r\n\t\t\t}\r\n\t\t\tcommand = _injector.getOrCreateNewInstance(commandClass);\r\n\t\t\tif (mapping.hooks.length > 0)\r\n\t\t\t{\r\n\t\t\t\t_injector.map(commandClass).toValue(command);\r\n\t\t\t\tApplyHooks.call(mapping.hooks, _injector);\r\n\t\t\t\t_injector.unmap(commandClass);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (injectionEnabled) unmapPayload(payload);\r\n\r\n\t\tif (command != null && mapping.executeMethod != null)\r\n\t\t{\r\n\t\t\tvar executeMethod:Dynamic = Reflect.getProperty(command, mapping.executeMethod);\r\n\t\t\tvar result:Dynamic;\r\n\t\t\tif ((hasPayload && executeMethod.length > 0)) {\r\n\t\t\t\tresult = Reflect.callMethod(null, executeMethod, payload.values);\r\n\t\t\t\t//result = executeMethod.apply(null, payload.values);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tresult = Reflect.callMethod(command, executeMethod, []);\r\n\t\t\t\t//result = executeMethod();\r\n\t\t\t}\r\n\t\t\t//var result:Dynamic = (hasPayload && executeMethod.length > 0) ? executeMethod.apply(null, payload.values) : executeMethod();\r\n\t\t\tif (_handleResult != null) _handleResult(result, command, mapping);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function mapPayload(payload:CommandPayload):Void\r\n\t{\r\n\t\tvar i:UInt = payload.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\t_injector.map(payload.classes[i]).toValue(payload.values[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function unmapPayload(payload:CommandPayload):Void\r\n\t{\r\n\t\tvar i:UInt = payload.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\t_injector.unmap(payload.classes[i]);\r\n\t\t}\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMapping;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.dsl.ICommandConfigurator;\r\nimport robotlegs.bender.extensions.commandCenter.dsl.ICommandMapper;\r\nimport robotlegs.bender.extensions.commandCenter.dsl.ICommandUnmapper;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandMapper implements ICommandMapper implements ICommandUnmapper implements ICommandConfigurator\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings:ICommandMappingList;\r\n\r\n\tprivate var _mapping:ICommandMapping;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Command Mapper\r\n\t * @param mappings The command mapping list to add mappings to\r\n\t */\r\n\tpublic function new(mappings:ICommandMappingList)\r\n\t{\r\n\t\t_mappings = mappings;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function toCommand(commandClass:Class<Dynamic>):ICommandConfigurator\r\n\t{\r\n\t\t_mapping = new CommandMapping(commandClass);\r\n\t\t_mappings.addMapping(_mapping);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromCommand(commandClass:Class<Dynamic>):Void\r\n\t{\r\n\t\t_mappings.removeMappingFor(commandClass);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromAll():Void\r\n\t{\r\n\t\t_mappings.removeAllMappings();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function once(value:Bool = true):ICommandConfigurator\r\n\t{\r\n\t\t_mapping.setFireOnce(value);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withGuards(guards:Array<Dynamic>):ICommandConfigurator\r\n\t{\r\n\t\tReflect.callMethod (null, _mapping.addGuards, guards);\r\n\t\t//_mapping.addGuards.apply(null, guards);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withHooks(hooks:Array<Dynamic>):ICommandConfigurator\r\n\t{\r\n\t\tReflect.callMethod (null, _mapping.addHooks, hooks);\r\n\t\t//_mapping.addHooks.apply(null, hooks);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withExecuteMethod(name:String):ICommandConfigurator\r\n\t{\r\n\t\t_mapping.setExecuteMethod(name);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withPayloadInjection(value:Bool = true):ICommandConfigurator\r\n\t{\r\n\t\t_mapping.setPayloadInjectionEnabled(value);\r\n\t\treturn this;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMapping;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandMapping implements ICommandMapping\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _commandClass:Class<Dynamic>;\r\n\tpublic var commandClass(get, null):Class<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_commandClass():Class<Dynamic>\r\n\t{\r\n\t\treturn _commandClass;\r\n\t}\r\n\r\n\tprivate var _executeMethod:String = \"execute\";\r\n\tpublic var executeMethod(get, null):String;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_executeMethod():String\r\n\t{\r\n\t\treturn _executeMethod;\r\n\t}\r\n\r\n\tprivate var _guards:Array<Dynamic> = [];\r\n\tpublic var guards(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_guards():Array<Dynamic>\r\n\t{\r\n\t\treturn _guards;\r\n\t}\r\n\r\n\tprivate var _hooks:Array<Dynamic> = [];\r\n\tpublic var hooks(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_hooks():Array<Dynamic>\r\n\t{\r\n\t\treturn _hooks;\r\n\t}\r\n\r\n\tprivate var _fireOnce:Bool = false;\r\n\tpublic var fireOnce(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_fireOnce():Bool\r\n\t{\r\n\t\treturn _fireOnce;\r\n\t}\r\n\r\n\tprivate var _payloadInjectionEnabled:Bool = true;\r\n\tpublic var payloadInjectionEnabled(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_payloadInjectionEnabled():Bool\r\n\t{\r\n\t\treturn _payloadInjectionEnabled;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Command Mapping\r\n\t * @param commandClass The concrete Command class\r\n\t */\r\n\tpublic function new(commandClass:Class<Dynamic>)\r\n\t{\r\n\t\t_commandClass = commandClass;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function setExecuteMethod(name:String):ICommandMapping\r\n\t{\r\n\t\t_executeMethod = name;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t\r\n\tpublic function addGuards(guards:Array<Dynamic>):ICommandMapping\r\n\t{\r\n\t\t//_guards = _guards.concat.apply(null, guards);\r\n\t\t_guards = Reflect.callMethod(null, _guards.concat, guards);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t\r\n\tpublic function addHooks(hooks:Array<Dynamic>):ICommandMapping\r\n\t{\r\n\t\t//_hooks = _hooks.concat.apply(null, hooks);\r\n\t\t_hooks = Reflect.callMethod(null, _hooks.concat, hooks);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function setFireOnce(value:Bool):ICommandMapping\r\n\t{\r\n\t\t_fireOnce = value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function setPayloadInjectionEnabled(value:Bool):ICommandMapping\r\n\t{\r\n\t\t_payloadInjectionEnabled = value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn 'Command ' + _commandClass;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMapping;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandTrigger;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandMappingList implements ICommandMappingList\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappingsByCommand = new Map<String,Dynamic>();\r\n\r\n\tprivate var _mappings = new Array<ICommandMapping>();\r\n\r\n\tprivate var _trigger:ICommandTrigger;\r\n\r\n\tprivate var _processors:Array<Dynamic>;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _compareFunction:Dynamic;\r\n\r\n\tprivate var _sorted:Bool = false;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Create a command mapping list\r\n\t * @param trigger The trigger that owns this list\r\n\t * @param processors A reference to the mapping processors for this command map\r\n\t * @param logger Optional logger\r\n\t */\r\n\tpublic function new(trigger:ICommandTrigger, processors:Array<Dynamic>, logger:ILogger = null)\r\n\t{\r\n\t\t_trigger = trigger;\r\n\t\t_processors = processors;\r\n\t\t_logger = logger;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function getList():Array<ICommandMapping>\r\n\t{\r\n\t\tif (!_sorted) sortMappings();\r\n\t\treturn _mappings.concat([]);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withSortFunction(sorter:Dynamic):ICommandMappingList\r\n\t{\r\n\t\t_sorted = false;\r\n\t\t_compareFunction = sorter;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addMapping(mapping:ICommandMapping):Void\r\n\t{\r\n\t\t_sorted = false;\r\n\t\tapplyProcessors(mapping);\r\n\t\tvar oldMapping:ICommandMapping = _mappingsByCommand[UID.instanceID(mapping.commandClass)];\r\n\t\tif (oldMapping != null)\r\n\t\t{\r\n\t\t\toverwriteMapping(oldMapping, mapping);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tstoreMapping(mapping);\r\n\t\t\tif (_mappings.length == 1) _trigger.activate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeMapping(mapping:ICommandMapping):Void\r\n\t{\r\n\t\tif (_mappingsByCommand[UID.clearInstanceID(mapping.commandClass)])\r\n\t\t{\r\n\t\t\tdeleteMapping(mapping);\r\n\t\t\tif (_mappings.length == 0) _trigger.deactivate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeMappingFor(commandClass:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar mapping:ICommandMapping = _mappingsByCommand[UID.instanceID(commandClass)];\r\n\t\tif (mapping != null) removeMapping(mapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeAllMappings():Void\r\n\t{\r\n\t\tif (_mappings.length > 0)\r\n\t\t{\r\n\t\t\tvar list:Array<ICommandMapping> = _mappings.concat([]);\r\n\t\t\tvar length:Int = list.length;\r\n\t\t\twhile (length-- > 0)\r\n\t\t\t{\r\n\t\t\t\tdeleteMapping(list[length]);\r\n\t\t\t}\r\n\t\t\t_trigger.deactivate();\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function storeMapping(mapping:ICommandMapping):Void\r\n\t{\r\n\t\t_mappingsByCommand[UID.instanceID(mapping.commandClass)] = mapping;\r\n\t\t_mappings.push(mapping);\r\n\t\tif (_logger != null) _logger.debug('{0} mapped to {1}', [_trigger, mapping]);\r\n\t}\r\n\r\n\tprivate function deleteMapping(mapping:ICommandMapping):Void\r\n\t{\r\n\t\t_mappingsByCommand.remove(UID.clearInstanceID(mapping.commandClass));\r\n\t\t_mappings.splice(_mappings.indexOf(mapping), 1);\r\n\t\tif (_logger != null) _logger.debug('{0} unmapped from {1}', [_trigger, mapping]);\r\n\t}\r\n\r\n\tprivate function overwriteMapping(oldMapping:ICommandMapping, newMapping:ICommandMapping):Void\r\n\t{\r\n\t\tif (_logger != null) {\r\n\t\t\t_logger.warn('{0} already mapped to {1}\\n' + 'If you have overridden this mapping intentionally you can use \"unmap()\" ' + 'prior to your replacement mapping in order to avoid seeing this message.\\n', [_trigger, oldMapping]);\r\n\t\t}\r\n\t\tdeleteMapping(oldMapping);\r\n\t\tstoreMapping(newMapping);\r\n\t}\r\n\r\n\tprivate function sortMappings():Void\r\n\t{\r\n\t\t// FIX\r\n\t\t/*if (_compareFunction != null)\r\n\t\t{\r\n\t\t\t_mappings = _mappings.sort(_compareFunction);\r\n\t\t}*/\r\n\t\t_sorted = true;\r\n\t}\r\n\r\n\tprivate function applyProcessors(mapping:ICommandMapping):Void\r\n\t{\r\n\t\tfor (processor in _processors)\r\n\t\t{\r\n\t\t\tprocessor(mapping);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandTrigger;\r\nimport robotlegs.bender.extensions.eventCommandMap.impl.EventCommandTrigger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass CommandTriggerMap\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _triggers = new Map<String,Dynamic>();\r\n\r\n\tprivate var _keyFactory:String -> Class<Dynamic> -> String;\r\n\r\n\tprivate var _triggerFactory:String -> Class<Dynamic> -> EventCommandTrigger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a command trigger map\r\n\t * @param keyFactory Factory function to creates keys\r\n\t * @param triggerFactory Factory function to create triggers\r\n\t */\r\n\tpublic function new(keyFactory:Dynamic, triggerFactory:Dynamic)\r\n\t{\r\n\t\t_keyFactory = keyFactory;\r\n\t\t_triggerFactory = triggerFactory;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t\r\n\tpublic function getTrigger(params:Array<Dynamic>):ICommandTrigger\r\n\t{\r\n\t\t//CHECK\r\n\t\tvar key:Dynamic = getKey(params);\r\n\t\tif (_triggers[UID.instanceID(key)] == null) {\r\n\t\t\t_triggers[UID.instanceID(key)] = createTrigger(params);\r\n\t\t}\r\n\t\treturn _triggers[UID.instanceID(key)];\r\n\t\t\r\n\t\t//return _triggers[UID.instanceID(key)] ||= createTrigger(params);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeTrigger(params:Array<Dynamic>):ICommandTrigger\r\n\t{\r\n\t\treturn destroyTrigger(getKey(params));\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function getKey(mapperArgs:Array<Dynamic>):Dynamic\r\n\t{\r\n\t\treturn Reflect.callMethod (null, _keyFactory, mapperArgs);\r\n\t\t//return _keyFactory.apply(null, mapperArgs);\r\n\t}\r\n\r\n\tprivate function createTrigger(mapperArgs:Array<Dynamic>):ICommandTrigger\r\n\t{\r\n\t\treturn Reflect.callMethod (null, _triggerFactory, mapperArgs);\r\n\t\t//return _triggerFactory.apply(null, mapperArgs);\r\n\t}\r\n\r\n\tprivate function destroyTrigger(key:Dynamic):ICommandTrigger\r\n\t{\r\n\t\tvar id:String = UID.clearInstanceID(key);\r\n\t\tvar trigger:ICommandTrigger = _triggers[id];\r\n\t\tif (trigger != null)\r\n\t\t{\r\n\t\t\ttrigger.deactivate();\r\n\t\t\t_triggers.remove(id);\r\n\t\t}\r\n\t\treturn trigger;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.commandCenter.impl;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandTrigger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass NullCommandTrigger implements ICommandTrigger\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function activate():Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function deactivate():Void\r\n\t{\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.contextView;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\n\r\n/**\r\n * The Context View represents the root DisplayObjectContainer for a Context\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass ContextView\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tpublic var view:DisplayObjectContainer;\r\n\t//public var view(get, null):DisplayObjectContainer;\r\n\t/**\r\n\t * The root DisplayObjectContainer for this Context\r\n\t */\r\n\t//public function get_view():DisplayObjectContainer\r\n\t//{\r\n\t\t//return _view;\r\n\t//}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * The Context View represents the root DisplayObjectContainer for a Context\r\n\t * @param view The root DisplayObjectContainer for this Context\r\n\t */\r\n\tpublic function new(view:DisplayObjectContainer)\r\n\t{\r\n\t\tthis.view = view;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.contextView;\r\n\r\nimport robotlegs.bender.extensions.matching.InstanceOfType;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * <p>This Extension waits for a ContextView to be added as a configuration\r\n * and maps it into the context's injector.</p>\r\n *\r\n * <p>It should be installed before context initialization.</p>\r\n */\r\n\r\n@:keepSub\r\nclass ContextViewExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t\tcontext.beforeInitializing(beforeInitializing);\r\n\t\tcontext.addConfigHandler(InstanceOfType.call(ContextView), handleContextView);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function handleContextView(contextView:ContextView):Void\r\n\t{\r\n\t\tif (_injector.hasDirectMapping(ContextView))\r\n\t\t{\r\n\t\t\t_logger.warn('A contextView has already been installed, ignoring {0}', [contextView.view]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Mapping {0} as contextView\", [contextView.view]);\r\n\t\t\t_injector.map(ContextView).toValue(contextView);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function beforeInitializing():Void\r\n\t{\r\n\t\tif (!_injector.hasDirectMapping(ContextView))\r\n\t\t{\r\n\t\t\t_logger.error(\"A ContextView must be installed if you install the ContextViewExtension.\");\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.contextView;\r\n\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.framework.api.IConfig;\r\n\r\n/**\r\n * This configuration file adds the ContextView to the viewManager.\r\n *\r\n * It requires that the ViewManagerExtension, ContextViewExtension\r\n * and a ContextView have been installed.\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass ContextViewListenerConfig implements IConfig\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t@inject public var contextView:ContextView;\r\n\r\n\t@inject public var viewManager:IViewManager;\r\n\r\n\t@:keep public function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function configure():Void\r\n\t{\r\n\t\t// Adds the Context View to the View Manager at startup\r\n\t\tviewManager.addContainer(contextView.view);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.contextView;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.Event;\r\nimport robotlegs.bender.extensions.matching.InstanceOfType;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * <p>This Extension waits for a ContextView to be added as a configuration,\r\n * and initializes and destroys the context based on the contextView's stage presence.</p>\r\n *\r\n * <p>It should be installed before context initialization.</p>\r\n */\r\n\r\n@:keepSub\r\nclass StageSyncExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\tprivate var _contextView:DisplayObjectContainer;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\t_context = context;\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_context.addConfigHandler(InstanceOfType.call(ContextView), handleContextView);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function handleContextView(contextView:ContextView):Void\r\n\t{\r\n\t\tif (_contextView != null)\r\n\t\t{\r\n\t\t\t_logger.warn('A contextView has already been installed, ignoring {0}', [contextView.view]);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_contextView = contextView.view;\r\n\t\tif (_contextView.stage != null)\r\n\t\t{\r\n\t\t\tinitializeContext();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Context view is not yet on stage. Waiting...\");\r\n\t\t\t_contextView.addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onAddedToStage(event:Event):Void\r\n\t{\r\n\t\t_contextView.removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\tinitializeContext();\r\n\t}\r\n\r\n\tprivate function initializeContext():Void\r\n\t{\r\n\t\t_logger.debug(\"Context view is now on stage. Initializing context...\");\r\n\t\t_context.initialize();\r\n\t\t_contextView.addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\t}\r\n\r\n\tprivate function onRemovedFromStage(event:Event):Void\r\n\t{\r\n\t\t_logger.debug(\"Context view has left the stage. Destroying context...\");\r\n\t\t_contextView.removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\t\t_context.destroy();\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.directCommandMap;\r\n\r\nimport robotlegs.bender.extensions.directCommandMap.api.IDirectCommandMap;\r\nimport robotlegs.bender.extensions.directCommandMap.impl.DirectCommandMap;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\n\r\n/**\r\n * Maps commands for direct (manual) execution\r\n */\r\n\r\n@:keepSub\r\nclass DirectCommandMapExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.injector.map(IDirectCommandMap).toType(DirectCommandMap);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.directCommandMap.impl;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.api.CommandPayload;\r\nimport robotlegs.bender.extensions.commandCenter.impl.NullCommandTrigger;\r\nimport robotlegs.bender.extensions.directCommandMap.api.IDirectCommandMap;\r\nimport robotlegs.bender.extensions.directCommandMap.dsl.IDirectCommandConfigurator;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * Maps commands for direct (manual) execution\r\n */\r\n\r\n@:keepSub\r\nclass DirectCommandMap implements IDirectCommandMap\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappingProcessors:Array<Dynamic> = [];\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\tprivate var _executor:ICommandExecutor;\r\n\r\n\tprivate var _mappings:CommandMappingList;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Direct Command Map\r\n\t * @param context The context that owns this map\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_context = context;\r\n\t\tvar sandboxedInjector:IInjector = context.injector.createChild();\r\n\t\t// allow access to this specific instance in the commands\r\n\t\tsandboxedInjector.map(IDirectCommandMap).toValue(this);\r\n\t\t_mappings = new CommandMappingList(\r\n\t\t\tnew NullCommandTrigger(), _mappingProcessors, context.getLogger(this));\r\n\t\t_executor = new CommandExecutor(sandboxedInjector, _mappings.removeMapping);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function map(commandClass:Class<Dynamic>):IDirectCommandConfigurator\r\n\t{\r\n\t\treturn new DirectCommandMapper(_executor, _mappings, commandClass);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function detain(command:Dynamic):Void\r\n\t{\r\n\t\t_context.detain(command);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function release(command:Dynamic):Void\r\n\t{\r\n\t\t_context.release(command);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function execute(payload:CommandPayload = null):Void\r\n\t{\r\n\t\t_executor.executeCommands(_mappings.getList(), payload);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addMappingProcessor(handler:Void->Void):IDirectCommandMap\r\n\t{\r\n\t\tif (_mappingProcessors.indexOf(handler) == -1)\r\n\t\t\t_mappingProcessors.push(handler);\r\n\t\treturn this;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.directCommandMap.impl;\r\n\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMapping;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandMapping;\r\nimport robotlegs.bender.extensions.commandCenter.api.CommandPayload;\r\nimport robotlegs.bender.extensions.directCommandMap.dsl.IDirectCommandConfigurator;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass DirectCommandMapper implements IDirectCommandConfigurator\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings:ICommandMappingList;\r\n\r\n\tprivate var _mapping:ICommandMapping;\r\n\r\n\tprivate var _executor:ICommandExecutor;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(executor:ICommandExecutor, mappings:ICommandMappingList, commandClass:Class<Dynamic>)\r\n\t{\r\n\t\t_executor = executor;\r\n\t\t_mappings = mappings;\r\n\t\t_mapping = new CommandMapping(commandClass);\r\n\t\t_mapping.setFireOnce(true);\r\n\t\t_mappings.addMapping(_mapping);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withExecuteMethod(name:String):IDirectCommandConfigurator\r\n\t{\r\n\t\t_mapping.setExecuteMethod(name);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withGuards(guards:Array<Dynamic>):IDirectCommandConfigurator\r\n\t{\r\n\t\tReflect.callMethod (null, _mapping.addGuards, guards);\r\n\t\t//_mapping.addGuards.apply(null, guards);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withHooks(hooks:Array<Dynamic>):IDirectCommandConfigurator\r\n\t{\r\n\t\tReflect.callMethod (null, _mapping.addHooks, hooks);\r\n\t\t//_mapping.addHooks.apply(null, hooks);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withPayloadInjection(value:Bool = true):IDirectCommandConfigurator\r\n\t{\r\n\t\t_mapping.setPayloadInjectionEnabled(value);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function execute(payload:CommandPayload = null):Void\r\n\t{\r\n\t\t_executor.executeCommands(_mappings.getList(), payload);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function map(commandClass:Class<Dynamic>):IDirectCommandConfigurator\r\n\t{\r\n\t\treturn new DirectCommandMapper(_executor, _mappings, commandClass);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.enhancedLogging;\r\n\r\nimport robotlegs.bender.extensions.enhancedLogging.impl.LoggerProvider;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * Allows you to @inject unique loggers into your objects.\r\n *\r\n * <code>\r\n *     @inject\r\n *     public var logger:ILogger;\r\n * </code>\r\n */\r\n\r\n@:keepSub\r\nclass InjectableLoggerExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.injector.map(ILogger).toProvider(new LoggerProvider(context));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.enhancedLogging;\r\n\r\nimport robotlegs.bender.extensions.enhancedLogging.impl.TraceLogTarget;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\n\r\n/**\r\n * Adds a TraceLogTarget to the context\r\n */\r\n\r\n@:keepSub\r\nclass TraceLoggingExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.addLogTarget(new TraceLogTarget(context));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.enhancedLogging.impl;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass LogMessageParser\r\n{\r\n\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Parse a parametrized message\r\n\t * @param message The message string\r\n\t * @param params The parameter values\r\n\t * @return The parsed message\r\n\t */\r\n\tpublic function parseMessage(message:String, params:Array<Dynamic>):String\r\n\t{\r\n\t\tif (params != null)\r\n\t\t{\r\n\t\t\tvar numParams:Int = params.length;\r\n\t\t\tfor (i in 0...numParams)\r\n\t\t\t{\r\n\t\t\t\tmessage = message.split(\"{\" + i + \"}\").join(params[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn message;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.enhancedLogging.impl;\r\n\r\n\r\nimport org.swiftsuspenders.Injector;\r\nimport org.swiftsuspenders.dependencyproviders.DependencyProvider;\r\nimport robotlegs.bender.framework.api.IContext;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass LoggerProvider implements DependencyProvider\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_context = context;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function apply(targetType:Class<Dynamic>, activeInjector:Injector, injectParameters:Map<Dynamic,Dynamic>):Dynamic\r\n\t{\r\n\t\treturn _context.getLogger(targetType);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.enhancedLogging.impl;\r\n\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.ILogTarget;\r\nimport robotlegs.bender.framework.api.LogLevel;\r\n\r\n/**\r\n * A simple trace logger\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass TraceLogTarget implements ILogTarget\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _messageParser = new LogMessageParser();\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Trace Log Target\r\n\t * @param context Context\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_context = context;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function log(source:Dynamic, level:UInt, timestamp:Int, message:String, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t#if js\r\n\t\t\tvar sourceName = CallProxy.getClassName(Type.getClass(source));\r\n\t\t\tvar split = sourceName.split(\".\");\r\n\t\t\tsourceName = split[split.length - 1];\r\n\t\t\t\r\n\t\t\ttrace(timestamp\r\n\t\t\t\t+ ' ' + LogLevel.NAME[level]\r\n\t\t\t\t+ ' ' + sourceName + \": \"\r\n\t\t\t\t+ ' ' + _messageParser.parseMessage(message, params));\r\n\t\t#else \r\n\t\t\ttrace(timestamp /* (START + timestamp) */\r\n\t\t\t\t+ ' ' + LogLevel.NAME[level]\r\n\t\t\t\t+ ' ' + _context\r\n\t\t\t\t+ ' ' + source\r\n\t\t\t\t+ ' ' + _messageParser.parseMessage(message, params));\r\n\t\t#end\r\n\t\t\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventCommandMap;\r\n\r\nimport robotlegs.bender.extensions.eventCommandMap.api.IEventCommandMap;\r\nimport robotlegs.bender.extensions.eventCommandMap.impl.EventCommandMap;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\n\r\n/**\r\n * The Event Command Map allows you to bind Events to Commands\r\n */\r\n\r\n@:keepSub\r\nclass EventCommandMapExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.injector.map(IEventCommandMap).toSingleton(EventCommandMap);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventCommandMap.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.commandCenter.dsl.ICommandMapper;\r\nimport robotlegs.bender.extensions.commandCenter.dsl.ICommandUnmapper;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandTriggerMap;\r\nimport robotlegs.bender.extensions.eventCommandMap.api.IEventCommandMap;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass EventCommandMap implements IEventCommandMap\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappingProcessors:Array<Dynamic> = [];\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _dispatcher:IEventDispatcher;\r\n\r\n\tprivate var _triggerMap:CommandTriggerMap;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext, dispatcher:IEventDispatcher)\r\n\t{\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_dispatcher = dispatcher;\r\n\t\t_triggerMap = new CommandTriggerMap(getKey, createTrigger);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function map(type:String, eventClass:Class<Dynamic> = null):ICommandMapper\r\n\t{\r\n\t\treturn getTrigger(type, eventClass).createMapper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmap(type:String, eventClass:Class<Dynamic> = null):ICommandUnmapper\r\n\t{\r\n\t\treturn getTrigger(type, eventClass).createMapper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addMappingProcessor(handler:Void->Void):IEventCommandMap\r\n\t{\r\n\t\tif (_mappingProcessors.indexOf(handler) == -1)\r\n\t\t\t_mappingProcessors.push(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function getKey(type:String, eventClass:Class<Dynamic>):String\r\n\t{\r\n\t\treturn type + eventClass;\r\n\t}\r\n\r\n\tprivate function getTrigger(type:String, eventClass:Class<Dynamic>):EventCommandTrigger\r\n\t{\r\n\t\treturn cast(_triggerMap.getTrigger([type, eventClass]), EventCommandTrigger);\r\n\t}\r\n\r\n\tprivate function createTrigger(type:String, eventClass:Class<Dynamic>):EventCommandTrigger\r\n\t{\r\n\t\treturn new EventCommandTrigger(_injector, _dispatcher, type, eventClass, _mappingProcessors, _logger);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventCommandMap.impl;\r\n\r\nimport openfl.events.Event;\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.api.ICommandTrigger;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandExecutor;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandMapper;\r\nimport robotlegs.bender.extensions.commandCenter.impl.CommandMappingList;\r\nimport robotlegs.bender.extensions.commandCenter.api.CommandPayload;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass EventCommandTrigger implements ICommandTrigger\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _dispatcher:IEventDispatcher;\r\n\r\n\tprivate var _type:String;\r\n\r\n\tprivate var _eventClass:Class<Dynamic>;\r\n\r\n\tprivate var _mappings:ICommandMappingList;\r\n\r\n\tprivate var _executor:ICommandExecutor;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(injector:IInjector, dispatcher:IEventDispatcher, type:String, eventClass:Class<Dynamic> = null, processors:Array<Dynamic> = null, logger:ILogger = null)\r\n\t{\r\n\t\t_dispatcher = dispatcher;\r\n\t\t_type = type;\r\n\t\t_eventClass = eventClass;\r\n\t\t_mappings = new CommandMappingList(this, processors, logger);\r\n\t\t_executor = new CommandExecutor(injector, _mappings.removeMapping);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function createMapper():CommandMapper\r\n\t{\r\n\t\treturn new CommandMapper(_mappings);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function activate():Void\r\n\t{\r\n\t\t_dispatcher.addEventListener(_type, eventHandler);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function deactivate():Void\r\n\t{\r\n\t\t_dispatcher.removeEventListener(_type, eventHandler);\r\n\t}\r\n\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn _eventClass + \" with selector '\" + _type + \"'\";\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function eventHandler(event:Event):Void\r\n\t{\r\n\t\t\r\n\t\tvar eventConstructor:Class<Dynamic> = Type.getClass(event);\r\n\t\tvar payloadEventClass:Class<Dynamic>;\r\n\t\t//not pretty, but optimized to avoid duplicate checks and shortest paths\r\n\t\tif (eventConstructor == _eventClass || (_eventClass == null))\r\n\t\t{\r\n\t\t\tpayloadEventClass = eventConstructor;\r\n\t\t}\r\n\t\telse if (_eventClass == Event)\r\n\t\t{\r\n\t\t\tpayloadEventClass = _eventClass;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_executor.executeCommands(_mappings.getList(), new CommandPayload([event], [payloadEventClass]));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventDispatcher;\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.eventDispatcher.impl.LifecycleEventRelay;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\n\r\n/**\r\n * This extension maps an IEventDispatcher into a context's injector.\r\n */\r\n\r\n@:keepSub\r\nclass EventDispatcherExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\tprivate var _eventDispatcher:IEventDispatcher;\r\n\r\n\tprivate var _lifecycleRelay:LifecycleEventRelay;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates an Event Dispatcher Extension\r\n\t * @param eventDispatcher Optional IEventDispatcher instance to share\r\n\t */\r\n\tpublic function new(eventDispatcher:IEventDispatcher = null)\r\n\t{\r\n\t\tif (eventDispatcher != null) _eventDispatcher = eventDispatcher;\r\n\t\telse _eventDispatcher = new EventDispatcher();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\t_context = context;\r\n\t\t_context.injector.map(IEventDispatcher).toValue(_eventDispatcher);\r\n\t\t_context.beforeInitializing(configureLifecycleEventRelay);\r\n\t\t_context.afterDestroying(destroyLifecycleEventRelay);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function configureLifecycleEventRelay():Void\r\n\t{\r\n\t\t_lifecycleRelay = new LifecycleEventRelay(_context, _eventDispatcher);\r\n\t}\r\n\r\n\tprivate function destroyLifecycleEventRelay():Void\r\n\t{\r\n\t\t_lifecycleRelay.destroy();\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventDispatcher.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\n\r\n/**\r\n * Relays events from a source to a destination\r\n */\r\n\r\n@:keepSub\r\nclass EventRelay\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _source:IEventDispatcher;\r\n\r\n\tprivate var _destination:IEventDispatcher;\r\n\r\n\tprivate var _types:Array<Dynamic>;\r\n\r\n\tprivate var _active:Bool = false;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Relays events from the source to the destination\r\n\t * @param source Event Dispatcher\r\n\t * @param destination Event Dispatcher\r\n\t * @param types The list of event types to relay\r\n\t */\r\n\tpublic function new(source:IEventDispatcher, destination:IEventDispatcher, types:Array<Dynamic> = null)\r\n\t{\r\n\t\t_source = source;\r\n\t\t_destination = destination;\r\n\t\tif (types != null) _types = types;\r\n\t\telse _types = [];\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Start relaying events\r\n\t * @return Self\r\n\t */\r\n\tpublic function start():EventRelay\r\n\t{\r\n\t\tif (!_active)\r\n\t\t{\r\n\t\t\t_active = true;\r\n\t\t\taddListeners();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Stop relaying events\r\n\t * @return Self\r\n\t */\r\n\tpublic function stop():EventRelay\r\n\t{\r\n\t\tif (_active)\r\n\t\t{\r\n\t\t\t_active = false;\r\n\t\t\tremoveListeners();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new event type to relay\r\n\t * @param eventType\r\n\t */\r\n\tpublic function addType(eventType:String):Void\r\n\t{\r\n\t\t_types.push(eventType);\r\n\t\tif (_active) addListener(eventType);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a relay event type\r\n\t * @param eventType\r\n\t */\r\n\tpublic function removeType(eventType:String):Void\r\n\t{\r\n\t\tvar index:Int = _types.indexOf(eventType);\r\n\t\tif (index > -1)\r\n\t\t{\r\n\t\t\t_types.splice(index, 1);\r\n\t\t\tremoveListener(eventType);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function removeListener(type:String):Void\r\n\t{\r\n\t\t_source.removeEventListener(type, _destination.dispatchEvent);\r\n\t}\r\n\r\n\tprivate function addListener(type:String):Void\r\n\t{\r\n\t\t_source.addEventListener(type, _destination.dispatchEvent);\r\n\t}\r\n\r\n\tprivate function addListeners():Void\r\n\t{\r\n\t\tfor (type in _types)\r\n\t\t{\r\n\t\t\taddListener(type);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function removeListeners():Void\r\n\t{\r\n\t\tfor (type in _types)\r\n\t\t{\r\n\t\t\tremoveListener(type);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.api;\r\n\r\nimport openfl.errors.Error;\r\nimport openfl.events.Event;\r\n\r\n/**\r\n * Robotlegs object lifecycle event\r\n */\r\n@:keepSub\r\nclass LifecycleEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var ERROR:String = \"_error\";\r\n\r\n\tpublic static var STATE_CHANGE:String = \"stateChange\";\r\n\r\n\tpublic static var PRE_INITIALIZE:String = \"preInitialize\";\r\n\r\n\tpublic static var INITIALIZE:String = \"initialize\";\r\n\r\n\tpublic static var POST_INITIALIZE:String = \"postInitialize\";\r\n\r\n\tpublic static var PRE_SUSPEND:String = \"preSuspend\";\r\n\r\n\tpublic static var SUSPEND:String = \"suspend\";\r\n\r\n\tpublic static var POST_SUSPEND:String = \"postSuspend\";\r\n\r\n\tpublic static var PRE_RESUME:String = \"preResume\";\r\n\r\n\tpublic static var RESUME:String = \"resume\";\r\n\r\n\tpublic static var POST_RESUME:String = \"postResume\";\r\n\r\n\tpublic static var PRE_DESTROY:String = \"preDestroy\";\r\n\r\n\tpublic static var DESTROY:String = \"destroy\";\r\n\r\n\tpublic static var POST_DESTROY:String = \"postDestroy\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _error:Error;\r\n\tpublic var error(default, null):Error;\r\n\t/**\r\n\t * Associated lifecycle error\r\n\t */\r\n\t/*public function get_error():Error\r\n\t{\r\n\t\treturn _error;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Lifecycle Event\r\n\t * @param type The event type\r\n\t * @param error Optional error\r\n\t */\r\n\tpublic function new(type:String, error:Error = null)\r\n\t{\r\n\t\tsuper(type);\r\n\t\t_error = error;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new LifecycleEvent(type, error);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.eventDispatcher.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.framework.api.LifecycleEvent;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass LifecycleEventRelay\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Properties                                                  */\r\n\t/*============================================================================*/\r\n\r\n\tprivate static var TYPES:Array<Dynamic> = [\r\n\t\tLifecycleEvent.STATE_CHANGE,\r\n\t\tLifecycleEvent.PRE_INITIALIZE, LifecycleEvent.INITIALIZE, LifecycleEvent.POST_INITIALIZE,\r\n\t\tLifecycleEvent.PRE_SUSPEND, LifecycleEvent.SUSPEND, LifecycleEvent.POST_SUSPEND,\r\n\t\tLifecycleEvent.PRE_RESUME, LifecycleEvent.RESUME, LifecycleEvent.POST_RESUME,\r\n\t\tLifecycleEvent.PRE_DESTROY, LifecycleEvent.DESTROY, LifecycleEvent.POST_DESTROY];\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _relay:EventRelay;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(source:IEventDispatcher, destination:IEventDispatcher)\r\n\t{\r\n\t\t_relay = new EventRelay(source, destination, TYPES).start();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\t_relay.stop();\r\n\t\t_relay = null;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.localEventMap;\r\n\r\nimport robotlegs.bender.extensions.localEventMap.api.IEventMap;\r\nimport robotlegs.bender.extensions.localEventMap.impl.EventMap;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\n\r\n/**\r\n * An Event Map keeps track of listeners and provides the ability\r\n * to unregister all listeners with a single method call.\r\n */\r\n\r\n@:keepSub\r\nclass LocalEventMapExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.injector.map(IEventMap).toType(EventMap);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.localEventMap.impl;\r\n\r\nimport openfl.events.Event;\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.localEventMap.api.IEventMap;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass EventMap implements IEventMap\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _listeners = new Array<EventMapConfig>();\r\n\r\n\tprivate var _suspendedListeners:Array<EventMapConfig> = new Array<EventMapConfig>();\r\n\r\n\tprivate var _suspended:Bool = false;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function mapListener(dispatcher:IEventDispatcher, eventString:String, listener:Dynamic, eventClass:Class<Dynamic> = null, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = true):Void\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (eventClass == null) {\r\n\t\t\teventClass = Event;\r\n\t\t}\r\n\t\t//eventClass ||= Event;\r\n\r\n\t\tvar currentListeners:Array<EventMapConfig> = _suspended\r\n\t\t\t\t? _suspendedListeners\r\n\t\t\t\t: _listeners;\r\n\r\n\t\tvar config:EventMapConfig;\r\n\r\n\t\tvar i:Int = currentListeners.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tconfig = currentListeners[i];\r\n\t\t\tif (config.equalTo(dispatcher, eventString, listener, eventClass, useCapture))\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar callback:Dynamic = eventClass == Event\r\n\t\t\t? listener\r\n\t\t\t: function(event:Event):Void\r\n\t\t\t{\r\n\t\t\t\trouteEventToListener(event, listener, eventClass);\r\n\t\t\t};\r\n\r\n\t\tconfig = new EventMapConfig(dispatcher,\r\n\t\t\teventString,\r\n\t\t\tlistener,\r\n\t\t\teventClass,\r\n\t\t\tcallback,\r\n\t\t\tuseCapture);\r\n\r\n\t\tcurrentListeners.push(config);\r\n\r\n\t\tif (!_suspended)\r\n\t\t{\r\n\t\t\tdispatcher.addEventListener(eventString, callback, useCapture, priority, useWeakReference);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmapListener(dispatcher:IEventDispatcher,eventString:String,listener:Dynamic,eventClass:Class<Dynamic> = null,useCapture:Bool = false):Void\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (eventClass == null) {\r\n\t\t\teventClass = Event;\r\n\t\t}\r\n\t\t//eventClass ||= Event;\r\n\r\n\t\tvar currentListeners:Array<EventMapConfig> = _suspended\r\n\t\t\t? _suspendedListeners\r\n\t\t\t: _listeners;\r\n\r\n\t\tvar i:Int = currentListeners.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tvar config:EventMapConfig = currentListeners[i];\r\n\t\t\tif (config.equalTo(dispatcher, eventString, listener, eventClass, useCapture))\r\n\t\t\t{\r\n\t\t\t\tif (!_suspended)\r\n\t\t\t\t{\r\n\t\t\t\t\tdispatcher.removeEventListener(eventString, config.callback, useCapture);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentListeners.splice(i, 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmapListeners():Void\r\n\t{\r\n\t\tvar currentListeners:Array<EventMapConfig> = _suspended ? _suspendedListeners:_listeners;\r\n\r\n\t\tvar eventConfig:EventMapConfig;\r\n\t\tvar dispatcher:IEventDispatcher;\r\n\t\twhile ((eventConfig = currentListeners.pop()) != null)\r\n\t\t{\r\n\t\t\tif (!_suspended)\r\n\t\t\t{\r\n\t\t\t\tdispatcher = eventConfig.dispatcher;\r\n\t\t\t\tdispatcher.removeEventListener(eventConfig.eventString, eventConfig.callback, eventConfig.useCapture);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function suspend():Void\r\n\t{\r\n\t\tif (_suspended)\r\n\t\t\treturn;\r\n\r\n\t\t_suspended = true;\r\n\r\n\t\tvar eventConfig:EventMapConfig;\r\n\t\tvar dispatcher:IEventDispatcher;\r\n\t\twhile ((eventConfig = _listeners.pop()) != null)\r\n\t\t{\r\n\t\t\tdispatcher = eventConfig.dispatcher;\r\n\t\t\tdispatcher.removeEventListener(eventConfig.eventString, eventConfig.callback, eventConfig.useCapture);\r\n\t\t\t_suspendedListeners.push(eventConfig);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function resume():Void\r\n\t{\r\n\t\tif (!_suspended)\r\n\t\t\treturn;\r\n\r\n\t\t_suspended = false;\r\n\r\n\t\tvar eventConfig:EventMapConfig;\r\n\t\tvar dispatcher:IEventDispatcher;\r\n\t\twhile ((eventConfig = _suspendedListeners.pop()) != null)\r\n\t\t{\r\n\t\t\tdispatcher = eventConfig.dispatcher;\r\n\t\t\tdispatcher.addEventListener(eventConfig.eventString, eventConfig.callback, eventConfig.useCapture);\r\n\t\t\t_listeners.push(eventConfig);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* private Functions                                                        */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Event Handler\r\n\t *\r\n\t * @param event The <code>Event</code>\r\n\t * @param listener\r\n\t * @param originalEventClass\r\n\t */\r\n\tprivate function routeEventToListener(event:Event, listener:Dynamic, originalEventClass:Class<Dynamic>):Void\r\n\t{\r\n\t\tif (Std.is(event, originalEventClass))\r\n\t\t{\r\n\t\t\tlistener(event);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.localEventMap.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass EventMapConfig\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _dispatcher:IEventDispatcher;\r\n\tpublic var dispatcher(default, null):IEventDispatcher;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_dispatcher():IEventDispatcher\r\n\t{\r\n\t\treturn _dispatcher;\r\n\t}*/\r\n\r\n\tprivate var _eventString:String;\r\n\tpublic var eventString(default, null):String;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_eventString():String\r\n\t{\r\n\t\treturn _eventString;\r\n\t}*/\r\n\r\n\tprivate var _listener:Void->Void;\r\n\tpublic var listener(default, null):Void->Void;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_listener():Void->Void\r\n\t{\r\n\t\treturn _listener;\r\n\t}*/\r\n\r\n\tprivate var _eventClass:Class<Dynamic>;\r\n\tpublic var eventClass(default, null):Class<Dynamic>;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_eventClass():Class<Dynamic>\r\n\t{\r\n\t\treturn _eventClass;\r\n\t}*/\r\n\r\n\tprivate var _callback:Dynamic->Void;\r\n\tpublic var callback(default, null):Dynamic->Void;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_callback():Void->Void\r\n\t{\r\n\t\treturn _callback;\r\n\t}*/\r\n\r\n\tprivate var _useCapture:Bool = false;\r\n\tpublic var useCapture(default, null):Bool;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t/*public function get_useCapture():Bool\r\n\t{\r\n\t\treturn _useCapture;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(dispatcher:IEventDispatcher, eventString:String, listener:Void->Void, eventClass:Class<Dynamic>, callback:Dynamic->Void, useCapture:Bool)\r\n\t{\r\n\t\t_dispatcher = dispatcher;\r\n\t\t_eventString = eventString;\r\n\t\t_listener = listener;\r\n\t\t_eventClass = eventClass;\r\n\t\t_callback = callback;\r\n\t\t_useCapture = useCapture;\r\n\t}\r\n\r\n\tpublic function equalTo(dispatcher:IEventDispatcher, eventString:String, listener:Void->Void, eventClass:Class<Dynamic>, useCapture:Bool):Bool\r\n\t{\r\n\t\treturn _eventString == eventString\r\n\t\t\t&& _eventClass == eventClass\r\n\t\t\t&& _dispatcher == dispatcher\r\n\t\t\t&& _listener == listener\r\n\t\t\t&& _useCapture == useCapture;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.matching;\r\n\r\nimport robotlegs.bender.framework.api.IMatcher;\r\n\r\n@:keepSub\r\nclass InstanceOfType\r\n{\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a matcher that matches objects of the given type\r\n\t * @param type The type to match\r\n\t * @return A matcher\r\n\t */\r\n\tpublic static function call(type:Class<Dynamic>):IMatcher\r\n\t{\r\n\t\treturn new InstanceOfMatcher(type);\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass InstanceOfMatcher implements IMatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _type:Class<Dynamic>;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(type:Class<Dynamic>)\r\n\t{\r\n\t\t_type = type;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function matches(item:Dynamic):Bool\r\n\t{\r\n\t\treturn Std.is(item, _type);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.matching;\r\nimport openfl.errors.ArgumentError;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass TypeFilter implements ITypeFilter\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t//private var _allOfTypes:Array<Class<Dynamic>>;\r\n\tpublic var allOfTypes(get, null):Array<Class<Dynamic>>;\r\n\tpublic function get_allOfTypes():Array<Class<Dynamic>>\r\n\t{\r\n\t\treturn this.allOfTypes;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t//private var _anyOfTypes:Array<Class<Dynamic>>;\r\n\tpublic var anyOfTypes(get, null):Array<Class<Dynamic>>;\r\n\tpublic function get_anyOfTypes():Array<Class<Dynamic>>\r\n\t{\r\n\t\treturn this.anyOfTypes;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t//private var _noneOfTypes:Array<Class<Dynamic>>;\r\n\tpublic var noneOfTypes(get, null):Array<Class<Dynamic>>;\r\n\tpublic function get_noneOfTypes():Array<Class<Dynamic>>\r\n\t{\r\n\t\treturn this.noneOfTypes;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t//private var _descriptor:String;\r\n\tpublic var descriptor(get, null):String;\r\n\tpublic function get_descriptor():String\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (this.descriptor == null) this.descriptor = createDescriptor();\r\n\t\treturn this.descriptor;\r\n\t\t\r\n\t\t//return this.descriptor ||= createDescriptor();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(allOf:Array<Class<Dynamic>>, anyOf:Array<Class<Dynamic>>, noneOf:Array<Class<Dynamic>>)\r\n\t{\r\n\t\tif (allOf == null || anyOf == null || noneOf == null)\r\n\t\t\tthrow new ArgumentError('TypeFilter parameters can not be null');\r\n\t\tthis.allOfTypes = allOf;\r\n\t\tthis.anyOfTypes = anyOf;\r\n\t\tthis.noneOfTypes = noneOf;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function matches(item:Dynamic):Bool\r\n\t{\r\n\t\tvar i:UInt = this.allOfTypes.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tif (!(Std.is(item, this.allOfTypes[i])))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti = this.noneOfTypes.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tif (Std.is(item, this.noneOfTypes[i]))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.anyOfTypes.length == 0 && (this.allOfTypes.length > 0 || this.noneOfTypes.length > 0))\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\ti = this.anyOfTypes.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tif (Std.is(item, this.anyOfTypes[i]))\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* private Functions                                                        */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function alphabetiseCaseInsensitiveFCQNs(classVector:Array<Class<Dynamic>>):Array<String>\r\n\t{\r\n\t\tvar fqcn:String;\r\n\t\tvar allFCQNs = new Array<String>();\r\n\r\n\t\tvar iLength:UInt = classVector.length;\r\n\t\tfor (i in 0...iLength)\r\n\t\t{\r\n\t\t\tfqcn = CallProxy.replaceClassName(classVector[i]);\r\n\t\t\tallFCQNs[allFCQNs.length] = fqcn;\r\n\t\t}\r\n\r\n\t\tallFCQNs.sort(stringSort);\r\n\t\treturn allFCQNs;\r\n\t}\r\n\r\n\tprivate function createDescriptor():String\r\n\t{\r\n\t\tvar allOf_FCQNs = alphabetiseCaseInsensitiveFCQNs(allOfTypes);\r\n\t\tvar anyOf_FCQNs = alphabetiseCaseInsensitiveFCQNs(anyOfTypes);\r\n\t\tvar noneOf_FQCNs = alphabetiseCaseInsensitiveFCQNs(noneOfTypes);\r\n\t\treturn \"all of: \" + allOf_FCQNs.toString()\r\n\t\t\t+ \", any of: \" + anyOf_FCQNs.toString()\r\n\t\t\t+ \", none of: \" + noneOf_FQCNs.toString();\r\n\t}\r\n\r\n\tprivate function stringSort(item1:String, item2:String):Int\r\n\t{\r\n\t\tif (item1 < item2)\r\n\t\t{\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.matching;\r\n\r\n/**\r\n * A Type Matcher matches objects that satisfy type matching rules\r\n */\r\n\r\n@:keepSub\r\nclass TypeMatcher implements ITypeMatcher implements ITypeMatcherFactory\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* private Properties                                                       */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _allOfTypes = new Array<Class<Dynamic>>();\r\n\r\n\tprivate var _anyOfTypes = new Array<Class<Dynamic>>();\r\n\r\n\tprivate var _noneOfTypes = new Array<Class<Dynamic>>();\r\n\r\n\tprivate var _typeFilter:ITypeFilter;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * All types that an item must extend or implement\r\n\t */\r\n\t\r\n\tpublic function allOf(types:Array<Dynamic>):TypeMatcher\r\n\t{\r\n\t\tpushAddedTypesTo(types, _allOfTypes);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Any types that an item must extend or implement\r\n\t */\r\n\tpublic function anyOf(types:Array<Dynamic>):TypeMatcher\r\n\t{\r\n\t\tpushAddedTypesTo(types, _anyOfTypes);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Types that an item must not extend or implement\r\n\t */\r\n\tpublic function noneOf(types:Array<Dynamic>):TypeMatcher\r\n\t{\r\n\t\tpushAddedTypesTo(types, _noneOfTypes);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function createTypeFilter():ITypeFilter\r\n\t{\r\n\t\t// calling this seals the matcher\r\n\t\t// CHECK\r\n\t\tif (_typeFilter == null) {\r\n\t\t\t_typeFilter = buildTypeFilter();\r\n\t\t}\r\n\t\treturn _typeFilter;\r\n\t\t\r\n\t\t//return _typeFilter ||= buildTypeFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * Locks this type matcher\r\n\t * @return\r\n\t */\r\n\tpublic function lock():ITypeMatcherFactory\r\n\t{\r\n\t\tcreateTypeFilter();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function clone():TypeMatcher\r\n\t{\r\n\t\treturn new TypeMatcher().allOf(_allOfTypes).anyOf(_anyOfTypes).noneOf(_noneOfTypes);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* private Functions                                                        */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function buildTypeFilter():ITypeFilter\r\n\t{\r\n\t\tif ((_allOfTypes.length == 0) &&\r\n\t\t\t(_anyOfTypes.length == 0) &&\r\n\t\t\t(_noneOfTypes.length == 0))\r\n\t\t{\r\n\t\t\tthrow new TypeMatcherError(TypeMatcherError.EMPTY_MATCHER);\r\n\t\t}\r\n\t\treturn new TypeFilter(_allOfTypes, _anyOfTypes, _noneOfTypes);\r\n\t}\r\n\r\n\tprivate function pushAddedTypesTo(types:Array<Dynamic>, targetSet:Array<Class<Dynamic>>):Void\r\n\t{\r\n\t\tif (_typeFilter != null) throwSealedMatcherError();\r\n\r\n\t\tpushValuesToClassVector(types, targetSet);\r\n\t}\r\n\r\n\tprivate function throwSealedMatcherError():Void\r\n\t{\r\n\t\tthrow new TypeMatcherError(TypeMatcherError.SEALED_MATCHER);\r\n\t}\r\n\r\n\tprivate function pushValuesToClassVector(values:Array<Dynamic>, vector:Array<Class<Dynamic>>):Void\r\n\t{\r\n\t\tvar isArray = Std.is(values[0], Array);\r\n\t\t\r\n\t\t//var isClass = Std.is(values[0], Array<Class<Dynamic>>);\r\n\t\tif (values.length == 1 && (isArray))\r\n\t\t{\r\n\t\t\tvar array = cast(values[0], Array<Dynamic>);\r\n\t\t\tfor (type in array)\r\n\t\t\t{\r\n\t\t\t\tvector.push(type);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (type in values)\r\n\t\t\t{\r\n\t\t\t\tvector.push(type);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.matching;\r\n\r\nimport openfl.errors.Error;\r\n\r\n/**\r\n * Type Matcher Error\r\n */\r\n\r\n@:keepSub\r\nclass TypeMatcherError extends Error\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var EMPTY_MATCHER:String = \"An empty matcher will create a filter which matches nothing. You should specify at least one condition for the filter.\";\r\n\r\n\tpublic static var SEALED_MATCHER:String = \"This matcher has been sealed and can no longer be configured.\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Type Matcher Error\r\n\t * @param message The error message\r\n\t */\r\n\tpublic function new(message:String)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap;\r\n\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;\r\nimport robotlegs.bender.extensions.mediatorMap.impl.MediatorMap;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * This extension installs a shared IMediatorMap into the context\r\n */\r\n\r\n@:keepSub\r\nclass MediatorMapExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _mediatorMap:MediatorMap;\r\n\r\n\tprivate var _viewManager:IViewManager;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.beforeInitializing(beforeInitializing)\r\n\t\t\t.beforeDestroying(beforeDestroying)\r\n\t\t\t.whenDestroying(whenDestroying);\r\n\t\t_injector = context.injector;\r\n\t\t_injector.map(IMediatorMap).toSingleton(MediatorMap);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function beforeInitializing():Void\r\n\t{\r\n\t\t_mediatorMap = _injector.getInstance(IMediatorMap);\r\n\t\tif (_injector.satisfiesDirectly(IViewManager))\r\n\t\t{\r\n\t\t\t_viewManager = _injector.getInstance(IViewManager);\r\n\t\t\t_viewManager.addViewHandler(_mediatorMap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function beforeDestroying():Void\r\n\t{\r\n\t\t_mediatorMap.unmediateAll();\r\n\t\tif (_injector.satisfiesDirectly(IViewManager))\r\n\t\t{\r\n\t\t\t_viewManager = _injector.getInstance(IViewManager);\r\n\t\t\t_viewManager.removeViewHandler(_mediatorMap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function whenDestroying():Void\r\n\t{\r\n\t\tif (_injector.satisfiesDirectly(IMediatorMap))\r\n\t\t{\r\n\t\t\t_injector.unmap(IMediatorMap);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.impl.ApplyHooks;\r\nimport robotlegs.bender.framework.impl.GuardsApprove;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass MediatorFactory\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mediators = new Map<String,Dynamic>();\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _manager:MediatorManager;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(injector:IInjector, manager:MediatorManager = null)\r\n\t{\r\n\t\t_injector = injector;\r\n\t\tif (manager != null) _manager = manager;\r\n\t\telse _manager = new MediatorManager(this);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function getMediator(item:Dynamic, mapping:IMediatorMapping):Dynamic\r\n\t{\r\n\t\tvar id = UID.instanceID(item);\r\n\t\tvar _mediatorsItem:Map<IMediatorMapping,Dynamic>;\r\n\t\tif (_mediators[id] != null) {\r\n\t\t\t_mediators[id] = new Map<String,Dynamic>();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn _mediators[id];\r\n\t\t\r\n\t\t/////////////////////\r\n\t\t\r\n\t\tif (_mediators[id] != null) {\r\n\t\t\t_mediatorsItem = _mediators[id];\r\n\t\t\treturn _mediatorsItem[mapping];\r\n\t\t}\r\n\t\t/////////////////////\r\n\t\t\r\n\t\t/*if (_mediators[UID.classID(item)] != null) {\r\n\t\t\treturn _mediators[UID.classID(item)][mapping];\r\n\t\t}*/\r\n\t\treturn null;\r\n\t\t\r\n\t\t//return _mediators[UID.classID(item)] ? _mediators[UID.classID(item)][mapping]:null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function createMediators(item:Dynamic, type:Class<Dynamic>, mappings:Array<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\tvar createdMediators:Array<Dynamic> = [];\r\n\t\tvar mediator:Dynamic;\r\n\t\tfor (mapping in mappings)\r\n\t\t{\r\n\t\t\tmediator = getMediator(item, mapping);\r\n\t\t\tif (mediator == null)\r\n\t\t\t{\r\n\t\t\t\tmapTypeForFilterBinding(mapping.matcher, type, item);\r\n\t\t\t\tmediator = createMediator(item, mapping);\r\n\t\t\t\tunmapTypeForFilterBinding(mapping.matcher, type, item);\r\n\t\t\t}\r\n\r\n\t\t\tif (mediator) {\r\n\t\t\t\tcreatedMediators.push(mediator);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn createdMediators;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeMediators(item:Dynamic):Void\r\n\t{\r\n\t\tvar mediators:Map<String,Dynamic> = _mediators[UID.classID(item)];\r\n\t\tif (mediators == null)\r\n\t\t\treturn;\r\n\r\n\t\tfor (mapping in mediators)\r\n\t\t{\r\n\t\t\t_manager.removeMediator(mediators[mapping], item, cast(mapping, IMediatorMapping));\r\n\t\t}\r\n\r\n\t\t_mediators.remove(item);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeAllMediators():Void\r\n\t{\r\n\t\tfor (item in _mediators)\r\n\t\t{\r\n\t\t\tremoveMediators(item);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createMediator(item:Dynamic, mapping:IMediatorMapping):Dynamic\r\n\t{\r\n\t\tvar mediator:Dynamic = getMediator(item, mapping);\r\n\r\n\t\tif (mediator)\r\n\t\t\treturn mediator;\r\n\r\n\t\tif (mapping.guards.length == 0 || GuardsApprove.call(mapping.guards, _injector))\r\n\t\t{\r\n\t\t\tvar mediatorClass:Class<Dynamic> = mapping.mediatorClass;\r\n\t\t\tmediator = _injector.instantiateUnmapped(mediatorClass);\r\n\t\t\tif (mapping.hooks.length > 0)\r\n\t\t\t{\r\n\t\t\t\t_injector.map(mediatorClass).toValue(mediator);\r\n\t\t\t\tApplyHooks.call(mapping.hooks, _injector);\r\n\t\t\t\t_injector.unmap(mediatorClass);\r\n\t\t\t}\r\n\t\t\taddMediator(mediator, item, mapping);\r\n\t\t}\r\n\t\treturn mediator;\r\n\t}\r\n\r\n\tprivate function addMediator(mediator:Dynamic, item:Dynamic, mapping:IMediatorMapping):Void\r\n\t{\r\n\t\t// CHECK\r\n\t\t/*if (_mediators[UID.classID(item)] == null) _mediators[UID.classID(item)] = new Map<Dynamic,Dynamic>();\r\n\t\t\r\n\t\t//_mediators[UID.classID(item)] ||= new Map<Dynamic,Dynamic>();\r\n\t\t_mediators[UID.classID(item)][mapping] = mediator;\r\n\t\t_manager.addMediator(mediator, item, mapping);*/\r\n\t\t\r\n\t\tvar id = UID.instanceID(item);\r\n\t\tvar _mediatorsItem:Map<IMediatorMapping,Dynamic>;\r\n\t\tif (_mediators[id] == null) _mediatorsItem = new Map<IMediatorMapping,Dynamic>();\r\n\t\telse _mediatorsItem = _mediators[id];\r\n\t\t_mediatorsItem[mapping] = mediator;\r\n\t\t\r\n\t\t_mediators[id] = _mediatorsItem[mapping];\r\n\t\t\r\n\t\t_manager.addMediator(mediator, item, mapping);\r\n\t}\r\n\r\n\tprivate function mapTypeForFilterBinding(filter:ITypeFilter, type:Class<Dynamic>, item:Dynamic):Void\r\n\t{\r\n\t\tfor (requiredType in requiredTypesFor(filter, type))\r\n\t\t{\r\n\t\t\t_injector.map(requiredType).toValue(item);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function unmapTypeForFilterBinding(filter:ITypeFilter, type:Class<Dynamic>, item:Dynamic):Void\r\n\t{\r\n\t\tfor (requiredType in requiredTypesFor(filter, type))\r\n\t\t{\r\n\t\t\tif (_injector.satisfiesDirectly(requiredType))\r\n\t\t\t\t_injector.unmap(requiredType);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function requiredTypesFor(filter:ITypeFilter, type:Class<Dynamic>):Array<Class<Dynamic>>\r\n\t{\r\n\t\tvar requiredTypes:Array<Class<Dynamic>> = filter.allOfTypes.concat(filter.anyOfTypes);\r\n\r\n\t\tif (requiredTypes.indexOf(type) == -1)\r\n\t\t\trequiredTypes.push(type);\r\n\r\n\t\treturn requiredTypes;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.events.Event;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n//import flash.utils.getDefinitionByName;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;\r\n\r\n/**\r\n* @private\r\n*/\r\n\r\n@:keepSub\r\nclass MediatorManager\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Properties                                                  */\r\n\t/*============================================================================*/\r\n\r\n\tprivate static var UIComponentClass:Class<Dynamic>;\r\n\r\n\tprivate static var flexAvailable:Bool = false;// checkFlex();\r\n\r\n\tpublic static var CREATION_COMPLETE:String = \"creationComplete\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _factory:MediatorFactory;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(factory:MediatorFactory)\r\n\t{\r\n\t\t_factory = factory;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Functions                                                   */\r\n\t/*============================================================================*/\r\n\r\n\t/*private static function checkFlex():Bool\r\n\t{\r\n\t\ttry\r\n\t\t{\r\n\t\t\tUIComponentClass = cast(getDefinitionByName('mx.core::UIComponent'), Class<Dynamic>);\r\n\t\t}\r\n\t\tcatch (error:Error)\r\n\t\t{\r\n\t\t\t// Do nothing\r\n\t\t}\r\n\t\treturn UIComponentClass != null;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function addMediator(mediator:Dynamic, item:Dynamic, mapping:IMediatorMapping):Void\r\n\t{\r\n\t\tvar displayObject:DisplayObject = null;\r\n\t\tif (Std.is(item, DisplayObject)) {\r\n\t\t\tdisplayObject = cast(item, DisplayObject);\r\n\t\t}\r\n\t\t\r\n\t\t// Watch Display Dynamic for removal\r\n\t\tif (displayObject != null && mapping.autoRemoveEnabled)\r\n\t\t\tdisplayObject.addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\r\n\t\t// Synchronize with item life-cycle\r\n\t\tif (itemInitialized(item))\r\n\t\t{\r\n\t\t\tinitializeMediator(mediator, item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar mediatorManagerAddMediator:MediatorManagerAddMediator = new MediatorManagerAddMediator(initializeMediator, _factory, displayObject, mediator, item, mapping);\r\n\t\t\tdisplayObject.addEventListener(MediatorManager.CREATION_COMPLETE, mediatorManagerAddMediator.creationComplete);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeMediator(mediator:Dynamic, item:Dynamic, mapping:IMediatorMapping):Void\r\n\t{\r\n\t\tif (Std.is(item, DisplayObject))\r\n\t\t\tcast(item, DisplayObject).removeEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);\r\n\r\n\t\tif (itemInitialized(item))\r\n\t\t\tdestroyMediator(mediator);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function onRemovedFromStage(event:Event):Void\r\n\t{\r\n\t\t_factory.removeMediators(event.target);\r\n\t}\r\n\r\n\tprivate function itemInitialized(item:Dynamic):Bool\r\n\t{\r\n\t\tif (flexAvailable && (Std.is(item, UIComponentClass)) && !CallProxy.hasField(item, 'initialized'))\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate function initializeMediator(mediator:Dynamic, mediatedItem:Dynamic):Void\r\n\t{\r\n\t\tif (CallProxy.hasField(mediator, 'preInitialize'))\r\n\t\t\tmediator.preInitialize();\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'viewComponent'))\r\n\t\t\tmediator.viewComponent = mediatedItem;\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'initialize'))\r\n\t\t\tmediator.initialize();\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'postInitialize'))\r\n\t\t\tmediator.postInitialize();\r\n\t}\r\n\r\n\tprivate function destroyMediator(mediator:Dynamic):Void\r\n\t{\r\n\t\tif (CallProxy.hasField(mediator, 'preDestroy'))\r\n\t\t\tmediator.preDestroy();\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'destroy'))\r\n\t\t\tmediator.destroy();\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'viewComponent'))\r\n\t\t\tmediator.viewComponent = null;\r\n\r\n\t\tif (CallProxy.hasField(mediator, 'postDestroy'))\r\n\t\t\tmediator.postDestroy();\r\n\t}\r\n}\r\n\r\n@:keepSub\r\nclass MediatorManagerAddMediator\r\n{\r\n\tvar displayObject:DisplayObject;\r\n\tvar mediator:Dynamic;\r\n\tvar item:Dynamic;\r\n\tvar mapping:IMediatorMapping;\r\n\tvar _factory:MediatorFactory;\r\n\tvar initializeMediator:Dynamic;\r\n\t\r\n\tpublic function new(initializeMediator:Dynamic -> Dynamic -> Void, _factory:MediatorFactory, displayObject:DisplayObject, mediator:Dynamic, item:Dynamic, mapping:IMediatorMapping)\r\n\t{\r\n\t\tthis.initializeMediator = initializeMediator;\r\n\t\tthis._factory = _factory;\r\n\t\tthis.mapping = mapping;\r\n\t\tthis.item = item;\r\n\t\tthis.mediator = mediator;\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\t\r\n\tpublic function creationComplete(e:Event):Void \r\n\t{\r\n\t\tdisplayObject.removeEventListener(MediatorManager.CREATION_COMPLETE, creationComplete);\r\n\t\t// Ensure that we haven't been removed in the meantime\r\n\t\tif (_factory.getMediator(item, mapping) == mediator) {\r\n\t\t\tinitializeMediator(mediator, item);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\n\r\nimport robotlegs.bender.extensions.matching.ITypeMatcher;\r\nimport robotlegs.bender.extensions.matching.TypeMatcher;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMap;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorMapper;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorUnmapper;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\n@:rtti\r\nclass MediatorMap implements IMediatorMap implements IViewHandler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappers = new Map<String,Dynamic>();\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _factory:MediatorFactory;\r\n\r\n\tprivate var _viewHandler:MediatorViewHandler;\r\n\r\n\tprivate var NULL_UNMAPPER = new NullMediatorUnmapper();\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_factory = new MediatorFactory(context.injector);\r\n\t\t_viewHandler = new MediatorViewHandler(_factory);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function mapMatcher(matcher:ITypeMatcher):IMediatorMapper\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (_mappers[matcher.createTypeFilter().descriptor] == null) {\r\n\t\t\t_mappers[matcher.createTypeFilter().descriptor] = createMapper(matcher);\r\n\t\t}\r\n\t\treturn _mappers[matcher.createTypeFilter().descriptor];\r\n\t\t//return _mappers[matcher.createTypeFilter().descriptor] ||= createMapper(matcher);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function map(type:Class<Dynamic>):IMediatorMapper\r\n\t{\r\n\t\treturn mapMatcher(new TypeMatcher().allOf([type]));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmapMatcher(matcher:ITypeMatcher):IMediatorUnmapper\r\n\t{\r\n\t\tvar val = _mappers[matcher.createTypeFilter().descriptor];\r\n\t\tif (val != null) return val;\r\n\t\telse return NULL_UNMAPPER;\r\n\t\t//return _mappers[matcher.createTypeFilter().descriptor] || NULL_UNMAPPER;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmap(type:Class<Dynamic>):IMediatorUnmapper\r\n\t{\r\n\t\treturn unmapMatcher(new TypeMatcher().allOf([type]));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function handleView(view:DisplayObject, type:Class<Dynamic>):Void\r\n\t{\r\n\t\t_viewHandler.handleView(view, type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function mediate(item:Dynamic):Void\r\n\t{\r\n\t\t_viewHandler.handleItem(item, Type.getClass(item));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmediate(item:Dynamic):Void\r\n\t{\r\n\t\t_factory.removeMediators(item);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmediateAll():Void\r\n\t{\r\n\t\t_factory.removeAllMediators();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createMapper(matcher:ITypeMatcher):IMediatorMapper\r\n\t{\r\n\t\treturn new MediatorMapper(matcher.createTypeFilter(), _viewHandler, _logger);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorConfigurator;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorMapper;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorUnmapper;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass MediatorMapper implements IMediatorMapper implements IMediatorUnmapper\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings = new Map<String,Dynamic>();\r\n\r\n\tprivate var _typeFilter:ITypeFilter;\r\n\r\n\tprivate var _handler:MediatorViewHandler;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(typeFilter:ITypeFilter, handler:MediatorViewHandler, logger:ILogger = null)\r\n\t{\r\n\t\t_typeFilter = typeFilter;\r\n\t\t_handler = handler;\r\n\t\t_logger = logger;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function toMediator(mediatorClass:Class<Dynamic>):IMediatorConfigurator\r\n\t{\r\n\t\tvar mapping:IMediatorMapping = _mappings[UID.classID(mediatorClass)];\r\n\t\treturn (mapping != null)\r\n\t\t\t? overwriteMapping(mapping)\r\n\t\t\t: createMapping(mediatorClass);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromMediator(mediatorClass:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar mapping:IMediatorMapping = _mappings[UID.classID(mediatorClass)];\r\n\t\tif (mapping != null) deleteMapping(mapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromAll():Void\r\n\t{\r\n\t\tfor (mapping in _mappings)\r\n\t\t{\r\n\t\t\tdeleteMapping(mapping);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createMapping(mediatorClass:Class<Dynamic>):MediatorMapping\r\n\t{\r\n\t\tvar mapping:MediatorMapping = new MediatorMapping(_typeFilter, mediatorClass);\r\n\t\t_handler.addMapping(mapping);\r\n\t\t_mappings[UID.classID(mediatorClass)] = mapping;\r\n\t\tif (_logger != null) _logger.debug('{0} mapped to {1}', [_typeFilter, mapping]);\r\n\t\treturn mapping;\r\n\t}\r\n\r\n\tprivate function deleteMapping(mapping:IMediatorMapping):Void\r\n\t{\r\n\t\t_handler.removeMapping(mapping);\r\n\t\t_mappings.remove(UID.classID(mapping.mediatorClass));\r\n\t\tif (_logger != null) _logger.debug('{0} unmapped from {1}', [_typeFilter, mapping]);\r\n\t}\r\n\r\n\tprivate function overwriteMapping(mapping:IMediatorMapping):IMediatorConfigurator\r\n\t{\r\n\t\tif (_logger != null) _logger.warn('{0} already mapped to {1}\\n' +\r\n\t\t\t'If you have overridden this mapping intentionally you can use \"unmap()\" ' +\r\n\t\t\t'prior to your replacement mapping in order to avoid seeing this message.\\n',\r\n\t\t\t[_typeFilter, mapping]);\r\n\t\tdeleteMapping(mapping);\r\n\t\treturn createMapping(mapping.mediatorClass);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorConfigurator;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass MediatorMapping implements IMediatorMapping implements IMediatorConfigurator\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\tpublic var matcher(get, null):ITypeFilter;\r\n\tfunction get_matcher():ITypeFilter { \r\n\t   return matcher;\r\n\t}\r\n\t\r\n\tpublic var mediatorClass(get, null):Class<Dynamic>;\r\n\tfunction get_mediatorClass():Class<Dynamic>\r\n\t{\r\n\t\treturn mediatorClass;\r\n\t}\r\n\r\n\tpublic var guards(get, null):Array<Dynamic> = new Array<Dynamic>();\r\n\tfunction get_guards():Array<Dynamic>\r\n\t{\r\n\t\treturn guards;\r\n\t}\r\n\r\n\tpublic var hooks(get, null):Array<Dynamic> = new Array<Dynamic>();\r\n\tfunction get_hooks():Array<Dynamic>\r\n\t{\r\n\t\treturn hooks;\r\n\t}\r\n\r\n\tpublic var autoRemoveEnabled(get, null):Bool;\r\n\tfunction get_autoRemoveEnabled():Bool\r\n\t{\r\n\t\treturn autoRemoveEnabled;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(matcher:ITypeFilter, mediatorClass:Class<Dynamic>)\r\n\t{\r\n\t\tthis.matcher = matcher;\r\n\t\tthis.mediatorClass = mediatorClass;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withGuards(guards:Array<Dynamic>):IMediatorConfigurator\r\n\t{\r\n\t\tfor (i in 0...guards.length) \r\n\t\t{\r\n\t\t\tthis.guards.push(guards[i]);\r\n\t\t}\r\n\t\t//_guards = _guards.concat.apply(null, guards);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withHooks(hooks:Array<Dynamic>):IMediatorConfigurator\r\n\t{\r\n\t\tfor (i in 0...hooks.length) \r\n\t\t{\r\n\t\t\tthis.hooks.push(hooks[i]);\r\n\t\t}\r\n\t\t//_hooks = _hooks.concat.apply(null, hooks);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function autoRemove(value:Bool = true):IMediatorConfigurator\r\n\t{\r\n\t\tthis.autoRemoveEnabled = value;\r\n\t\treturn this;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport org.swiftsuspenders.utils.UID;\r\n\r\nimport robotlegs.bender.extensions.mediatorMap.api.IMediatorMapping;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass MediatorViewHandler implements IViewHandler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings:Array<Dynamic> = [];\r\n\r\n\tprivate var _knownMappings = new Map<String,Dynamic>();\r\n\r\n\tprivate var _factory:MediatorFactory;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(factory:MediatorFactory):Void\r\n\t{\r\n\t\t_factory = factory;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function addMapping(mapping:IMediatorMapping):Void\r\n\t{\r\n\t\tvar index:Int = _mappings.indexOf(mapping);\r\n\t\tif (index > -1)\r\n\t\t\treturn;\r\n\t\t_mappings.push(mapping);\r\n\t\tflushCache();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeMapping(mapping:IMediatorMapping):Void\r\n\t{\r\n\t\tvar index:Int = _mappings.indexOf(mapping);\r\n\t\tif (index == -1)\r\n\t\t\treturn;\r\n\t\t_mappings.splice(index, 1);\r\n\t\tflushCache();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function handleView(view:DisplayObject, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar interestedMappings:Array<Dynamic> = getInterestedMappingsFor(view, type);\r\n\t\tif (interestedMappings != null)\r\n\t\t\t_factory.createMediators(view, type, interestedMappings);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function handleItem(item:Dynamic, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar interestedMappings:Array<Dynamic> = getInterestedMappingsFor(item, type);\r\n\t\tif (interestedMappings != null)\r\n\t\t\t_factory.createMediators(item, type, interestedMappings);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function flushCache():Void\r\n\t{\r\n\t\t_knownMappings = new Map<String,Dynamic>();\r\n\t}\r\n\r\n\tprivate function getInterestedMappingsFor(item:Dynamic, type:Class<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\tvar mapping:IMediatorMapping;\r\n\t\tvar typeID = UID.classID(type);\r\n\t\t\r\n\t\t// we've seen this type before and nobody was interested\r\n\t\tif (_knownMappings[typeID] == false)\r\n\t\t\treturn null;\r\n\r\n\t\t// we haven't seen this type before\r\n\t\tif (_knownMappings[typeID] == null)\r\n\t\t{\r\n\t\t\t_knownMappings[typeID] = false;\r\n\t\t\tfor (i in 0..._mappings.length)\r\n\t\t\t{\r\n\t\t\t\tmapping = _mappings[i];\r\n\t\t\t\tif (mapping.matcher.matches(item))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (_knownMappings[typeID] == false) {\r\n\t\t\t\t\t\t_knownMappings[typeID] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_knownMappings[typeID].push(mapping);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// nobody cares, let's get out of here\r\n\t\t\tif (_knownMappings[typeID] == false)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// these mappings really do care\r\n\t\treturn cast(_knownMappings[typeID], Array<Dynamic>);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.mediatorMap.impl;\r\n\r\nimport robotlegs.bender.extensions.mediatorMap.dsl.IMediatorUnmapper;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass NullMediatorUnmapper implements IMediatorUnmapper\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromMediator(mediatorClass:Class<Dynamic>):Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromAll():Void\r\n\t{\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.Event;\r\nimport robotlegs.bender.extensions.contextView.ContextView;\r\nimport robotlegs.bender.extensions.matching.InstanceOfType;\r\nimport robotlegs.bender.extensions.modularity.api.IModuleConnector;\r\nimport robotlegs.bender.extensions.modularity.impl.ContextViewBasedExistenceWatcher;\r\nimport robotlegs.bender.extensions.modularity.impl.ModularContextEvent;\r\nimport robotlegs.bender.extensions.modularity.impl.ModuleConnector;\r\nimport robotlegs.bender.extensions.modularity.impl.ViewManagerBasedExistenceWatcher;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * This extension allows a context to inherit dependencies from a parent context,\r\n * and/or expose its dependencies to child contexts.\r\n *\r\n * <p>It must be installed before context initialization.</p>\r\n */\r\n\r\n@:keepSub\r\nclass ModularityExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _inherit:Bool = false;\r\n\r\n\tprivate var _expose:Bool = false;\r\n\r\n\tprivate var _contextView:DisplayObjectContainer;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Modularity\r\n\t *\r\n\t * @param inherit Should this context inherit dependencies from a parent context?\r\n\t * @param expose Should this context expose its dependencies to child contexts?\r\n\t */\r\n\tpublic function new(inherit:Bool = true, expose:Bool = true)\r\n\t{\r\n\t\t_inherit = inherit;\r\n\t\t_expose = expose;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.beforeInitializing(beforeInitializing);\r\n\t\t_context = context;\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_context.addConfigHandler(InstanceOfType.call(ContextView), handleContextView);\r\n\t\t_injector.map(IModuleConnector).toSingleton(ModuleConnector);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function beforeInitializing():Void\r\n\t{\r\n\t\tif (_contextView == null) _logger.error(\"Context has no ContextView, and ModularityExtension doesn't allow this.\");\r\n\t}\r\n\r\n\tprivate function handleContextView(contextView:ContextView):Void\r\n\t{\r\n\t\t_contextView = contextView.view;\r\n\t\tif (_expose) configureExistenceWatcher();\r\n\t\tif (_inherit) configureExistenceBroadcaster();\r\n\t}\r\n\r\n\tprivate function configureExistenceWatcher():Void\r\n\t{\r\n\t\tif (_injector.hasDirectMapping(IViewManager))\r\n\t\t{\r\n\t\t\t_logger.debug(\"Context has a ViewManager. Configuring view manager based context existence watcher...\");\r\n\t\t\tvar viewManager = _injector.getInstance(IViewManager);\r\n\t\t\tnew ViewManagerBasedExistenceWatcher(_context, viewManager);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Context has a ContextView. Configuring context view based context existence watcher...\");\r\n\t\t\tnew ContextViewBasedExistenceWatcher(_context, _contextView);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function configureExistenceBroadcaster():Void\r\n\t{\r\n\t\tif (_contextView.stage != null)\r\n\t\t{\r\n\t\t\tbroadcastContextExistence();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Context view is not yet on stage. Waiting...\");\r\n\t\t\t_contextView.addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onAddedToStage(event:Event):Void\r\n\t{\r\n\t\t_logger.debug(\"Context view is now on stage. Continuing...\");\r\n\t\t_contextView.removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);\r\n\t\tbroadcastContextExistence();\r\n\t}\r\n\r\n\tprivate function broadcastContextExistence():Void\r\n\t{\r\n\t\t_logger.debug(\"Context configured to inherit. Broadcasting existence event...\");\r\n\t\t_contextView.dispatchEvent(new ModularContextEvent(ModularContextEvent.CONTEXT_ADD, _context));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity.impl;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ContextViewBasedExistenceWatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _contextView:DisplayObjectContainer;\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext, contextView:DisplayObjectContainer)\r\n\t{\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_contextView = contextView;\r\n\t\t_context = context;\r\n\t\t_context.whenDestroying(destroy);\r\n\t\tinit();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function init():Void\r\n\t{\r\n\t\t_logger.debug(\"Listening for context existence events on contextView {0}\", [_contextView]);\r\n\t\t_contextView.addEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t}\r\n\r\n\tprivate function destroy():Void\r\n\t{\r\n\t\t_logger.debug(\"Removing modular context existence event listener from contextView {0}\", [_contextView]);\r\n\t\t_contextView.removeEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t}\r\n\r\n\tprivate function onContextAdd(event:ModularContextEvent):Void\r\n\t{\r\n\t\t// We might catch out own existence event, so ignore that\r\n\t\tif (event.context != _context)\r\n\t\t{\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t_logger.debug(\"Context existence event caught. Configuring child context {0}\", [event.context]);\r\n\t\t\t_context.addChild(event.context);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity.impl;\r\n\r\nimport openfl.events.Event;\r\nimport robotlegs.bender.framework.api.IContext;\r\n\r\n/**\r\n * Module Context Event\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ModularContextEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var CONTEXT_ADD:String = \"contextAdd\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _context:IContext;\r\n\tpublic var context(default, null):IContext;\r\n\t\r\n\t/**\r\n\t * The context associated with this event\r\n\t */\r\n\t/*public function get_context():IContext\r\n\t{\r\n\t\treturn _context;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Module Context Event\r\n\t * @param type The event type\r\n\t * @param context The associated context\r\n\t */\r\n\tpublic function new(type:String, context:IContext)\r\n\t{\r\n\t\tsuper(type, true, true);\r\n\t\t_context = context;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new ModularContextEvent(type, context);\r\n\t}\r\n\r\n\toverride public function toString():String\r\n\t{\r\n\t\treturn \"[ModularContextEvent, context]\";\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.extensions.eventDispatcher.impl.EventRelay;\r\nimport robotlegs.bender.extensions.modularity.dsl.IModuleConnectionAction;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ModuleConnectionConfigurator implements IModuleConnectionAction\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _channelToLocalRelay:EventRelay;\r\n\r\n\tprivate var _localToChannelRelay:EventRelay;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(localDispatcher:IEventDispatcher, channelDispatcher:IEventDispatcher)\r\n\t{\r\n\t\t_localToChannelRelay = new EventRelay(localDispatcher, channelDispatcher).start();\r\n\t\t_channelToLocalRelay = new EventRelay(channelDispatcher, localDispatcher).start();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function relayEvent(eventType:String):IModuleConnectionAction\r\n\t{\r\n\t\t_localToChannelRelay.addType(eventType);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function receiveEvent(eventType:String):IModuleConnectionAction\r\n\t{\r\n\t\t_channelToLocalRelay.addType(eventType);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function suspend():Void\r\n\t{\r\n\t\t_channelToLocalRelay.stop();\r\n\t\t_localToChannelRelay.stop();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function resume():Void\r\n\t{\r\n\t\t_channelToLocalRelay.start();\r\n\t\t_localToChannelRelay.start();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\t_localToChannelRelay.stop();\r\n\t\t_localToChannelRelay = null;\r\n\t\t_channelToLocalRelay.stop();\r\n\t\t_channelToLocalRelay = null;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity.impl;\r\n\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.IEventDispatcher;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport robotlegs.bender.extensions.modularity.api.IModuleConnector;\r\nimport robotlegs.bender.extensions.modularity.dsl.IModuleConnectionAction;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ModuleConnector implements IModuleConnector\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _rootInjector:IInjector;\r\n\r\n\tprivate var _localDispatcher:IEventDispatcher;\r\n\r\n\tprivate var _configuratorsByChannel:Map<String, ModuleConnectionConfigurator>;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\tvar injector:IInjector = context.injector;\r\n\t\t_rootInjector = getRootInjector(injector);\r\n\t\t_localDispatcher = injector.getInstance(IEventDispatcher);\r\n\t\tcontext.whenDestroying(destroy);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function onChannel(channelId:String):IModuleConnectionAction\r\n\t{\r\n\t\treturn getOrCreateConfigurator(channelId);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function onDefaultChannel():IModuleConnectionAction\r\n\t{\r\n\t\treturn getOrCreateConfigurator('global');\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function destroy():Void\r\n\t{\r\n\t\tfor (channelId in _configuratorsByChannel)\r\n\t\t{\r\n\t\t\tvar id = cast(channelId, String);\r\n\t\t\tvar configurator:ModuleConnectionConfigurator = _configuratorsByChannel[id];\r\n\t\t\tconfigurator.destroy();\r\n\t\t\t_configuratorsByChannel[id] = null;\r\n\t\t}\r\n\r\n\t\t_configuratorsByChannel = null;\r\n\t\t_localDispatcher = null;\r\n\t\t_rootInjector = null;\r\n\t}\r\n\r\n\tprivate function getOrCreateConfigurator(channelId:String):ModuleConnectionConfigurator\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (!CallProxy.hasField(_configuratorsByChannel, channelId)) {\r\n\t\t//if (_configuratorsByChannel[channelId] == null) {\r\n\t\t\tReflect.setField(_configuratorsByChannel, channelId, createConfigurator(channelId));\r\n\t\t\t//_configuratorsByChannel[channelId] = createConfigurator(channelId);\r\n\t\t}\r\n\t\treturn Reflect.getProperty(_configuratorsByChannel, channelId);\r\n\t\t//return _configuratorsByChannel[channelId];\r\n\t\t//return _configuratorsByChannel[channelId] ||= createConfigurator(channelId);\r\n\t}\r\n\r\n\tprivate function createConfigurator(channelId:String):ModuleConnectionConfigurator\r\n\t{\r\n\t\tif (_rootInjector.hasMapping(IEventDispatcher, channelId))\r\n\t\t{\r\n\t\t\t_rootInjector.map(IEventDispatcher, channelId)\r\n\t\t\t\t.toValue(new EventDispatcher());\r\n\t\t}\r\n\t\treturn new ModuleConnectionConfigurator(_localDispatcher, _rootInjector.getInstance(IEventDispatcher, channelId));\r\n\t}\r\n\r\n\tprivate function getRootInjector(injector:IInjector):IInjector\r\n\t{\r\n\t\twhile (injector.parent != null)\r\n\t\t{\r\n\t\t\tinjector = injector.parent;\r\n\t\t}\r\n\t\treturn injector;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.modularity.impl;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.extensions.viewManager.impl.ViewManagerEvent;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ViewManagerBasedExistenceWatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _viewManager:IViewManager;\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext, viewManager:IViewManager)\r\n\t{\r\n\t\t_logger = context.getLogger(this);\r\n\t\t_viewManager = viewManager;\r\n\t\t_context = context;\r\n\t\t_context.whenDestroying(destroy);\r\n\t\tinit();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function init():Void\r\n\t{\r\n\t\tfor (container in _viewManager.containers)\r\n\t\t{\r\n\t\t\t_logger.debug(\"Adding context existence event listener to container {0}\", [container]);\r\n\t\t\tcontainer.addEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t\t}\r\n\t\t_viewManager.addEventListener(ViewManagerEvent.CONTAINER_ADD, onContainerAdd);\r\n\t\t_viewManager.addEventListener(ViewManagerEvent.CONTAINER_REMOVE, onContainerRemove);\r\n\t}\r\n\r\n\tprivate function destroy():Void\r\n\t{\r\n\t\tfor (container in _viewManager.containers)\r\n\t\t{\r\n\t\t\t_logger.debug(\"Removing context existence event listener from container {0}\", [container]);\r\n\t\t\tcontainer.removeEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t\t}\r\n\t\t_viewManager.removeEventListener(ViewManagerEvent.CONTAINER_ADD, onContainerAdd);\r\n\t\t_viewManager.removeEventListener(ViewManagerEvent.CONTAINER_REMOVE, onContainerRemove);\r\n\t}\r\n\r\n\tprivate function onContainerAdd(event:ViewManagerEvent):Void\r\n\t{\r\n\t\t_logger.debug(\"Adding context existence event listener to container {0}\", [event.container]);\r\n\t\tevent.container.addEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t}\r\n\r\n\tprivate function onContainerRemove(event:ViewManagerEvent):Void\r\n\t{\r\n\t\t_logger.debug(\"Removing context existence event listener from container {0}\", [event.container]);\r\n\t\tevent.container.removeEventListener(ModularContextEvent.CONTEXT_ADD, onContextAdd);\r\n\t}\r\n\r\n\tprivate function onContextAdd(event:ModularContextEvent):Void\r\n\t{\r\n\t\t// We might catch out own existence event, so ignore that\r\n\t\tif (event.context != _context)\r\n\t\t{\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t_logger.debug(\"Context existence event caught. Configuring child context {0}\", [event.context]);\r\n\t\t\t_context.addChild(event.context);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport robotlegs.bender.extensions.contextView.ContextView;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.extensions.viewManager.impl.ContainerBinding;\r\nimport robotlegs.bender.extensions.viewManager.impl.ContainerRegistry;\r\nimport robotlegs.bender.extensions.viewManager.impl.StageCrawler;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * View Handlers (like the MediatorMap) handle views as they land on stage.\r\n *\r\n * This extension checks for views that might already be on the stage\r\n * after context initialization and ensures that those views are handled.\r\n */\r\n\r\n@:keepSub\r\nclass StageCrawlerExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _containerRegistry:ContainerRegistry;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t\tcontext.afterInitializing(afterInitializing);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function afterInitializing():Void\r\n\t{\r\n\t\t_containerRegistry = _injector.getInstance(ContainerRegistry);\r\n\t\t_injector.hasDirectMapping(IViewManager)\r\n\t\t\t? scanViewManagedContainers()\r\n\t\t\t: scanContextView();\r\n\t}\r\n\r\n\tprivate function scanViewManagedContainers():Void\r\n\t{\r\n\t\t_logger.debug(\"ViewManager is installed. Checking for managed containers...\");\r\n\t\tvar viewManager:IViewManager = _injector.getInstance(IViewManager);\r\n\t\tfor (container in viewManager.containers)\r\n\t\t{\r\n\t\t\tif (container.stage != null) scanContainer(container);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function scanContextView():Void\r\n\t{\r\n\t\t_logger.debug(\"ViewManager is not installed. Checking the ContextView...\");\r\n\t\tvar contextView:ContextView = _injector.getInstance(ContextView);\r\n\t\tif (contextView.view.stage != null) scanContainer(contextView.view);\r\n\t}\r\n\r\n\tprivate function scanContainer(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\tvar binding:ContainerBinding = _containerRegistry.getBinding(container);\r\n\t\t_logger.debug(\"StageCrawler scanning container {0} ...\", [container]);\r\n\t\tnew StageCrawler(binding).scan(container);\r\n\t\t_logger.debug(\"StageCrawler finished scanning {0}\", [container]);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager;\r\n\r\nimport robotlegs.bender.extensions.viewManager.impl.ContainerRegistry;\r\nimport robotlegs.bender.extensions.viewManager.impl.StageObserver;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * This extension install an automatic Stage Observer\r\n */\r\n\r\n@:keepSub\r\nclass StageObserverExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Properties                                                  */\r\n\t/*============================================================================*/\r\n\r\n\t// Really? Yes, there can be only one.\r\n\tprivate static var _stageObserver:StageObserver;\r\n\r\n\tprivate static var _installCount:UInt;\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.whenInitializing(whenInitializing);\r\n\t\tcontext.whenDestroying(whenDestroying);\r\n\t\t_installCount++;\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function whenInitializing():Void\r\n\t{\r\n\t\t// Hark, an actual Singleton!\r\n\t\tif (_stageObserver == null)\r\n\t\t{\r\n\t\t\tvar containerRegistry:ContainerRegistry = _injector.getInstance(ContainerRegistry);\r\n\t\t\t_logger.debug(\"Creating genuine StageObserver Singleton\");\r\n\t\t\t_stageObserver = new StageObserver(containerRegistry);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function whenDestroying():Void\r\n\t{\r\n\t\t_installCount--;\r\n\t\tif (_installCount == 0)\r\n\t\t{\r\n\t\t\t_logger.debug(\"Destroying genuine StageObserver Singleton\");\r\n\t\t\t_stageObserver.destroy();\r\n\t\t\t_stageObserver = null;\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager;\r\n\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.extensions.viewManager.impl.ContainerRegistry;\r\nimport robotlegs.bender.extensions.viewManager.impl.ViewManager;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * This extension install a View Manager into the context\r\n */\r\n\r\n@:keepSub\r\nclass ViewManagerExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Static Properties                                                  */\r\n\t/*============================================================================*/\r\n\r\n\t// Really? Yes, there can be only one.\r\n\tprivate static var _containerRegistry:ContainerRegistry;\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _viewManager:IViewManager;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.whenInitializing(whenInitializing);\r\n\t\tcontext.whenDestroying(whenDestroying);\r\n\r\n\t\t_injector = context.injector;\r\n\r\n\t\t\r\n\t\t// Just one Container Registry\r\n\t\t\r\n\t\tif (_containerRegistry == null) {\r\n\t\t\t_containerRegistry = new ContainerRegistry();\r\n\t\t}\r\n\t\t//_containerRegistry ||= new ContainerRegistry();\r\n\t\t\r\n\t\t_injector.map(ContainerRegistry).toValue(_containerRegistry);\r\n\t\t\r\n\t\t// But you get your own View Manager\r\n\t\t_injector.map(IViewManager).toSingleton(ViewManager);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function whenInitializing():Void\r\n\t{\r\n\t\t_viewManager = _injector.getInstance(IViewManager);\r\n\t}\r\n\r\n\tprivate function whenDestroying():Void\r\n\t{\r\n\t\t_viewManager.removeAllHandlers();\r\n\t\t_injector.unmap(IViewManager);\r\n\t\t_injector.unmap(ContainerRegistry);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.EventDispatcher;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\n\r\n@:meta(Event(name=\"bindingEmpty\", type=\"robotlegs.bender.extensions.viewManager.impl.ContainerBindingEvent\"))\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ContainerBinding extends EventDispatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _parent:ContainerBinding;\r\n\tpublic var parent(get, set):ContainerBinding;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function get_parent():ContainerBinding\r\n\t{\r\n\t\treturn _parent;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function set_parent(value:ContainerBinding):ContainerBinding\r\n\t{\r\n\t\t_parent = value;\r\n\t\treturn _parent;\r\n\t}\r\n\r\n\tprivate var _container:DisplayObjectContainer;\r\n\tpublic var container(get, null):DisplayObjectContainer;\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function get_container():DisplayObjectContainer\r\n\t{\r\n\t\treturn _container;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _handlers = new Array<IViewHandler>();\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(container:DisplayObjectContainer)\r\n\t{\r\n\t\t_container = container;\r\n\t\tsuper(null);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function addHandler(handler:IViewHandler):Void\r\n\t{\r\n\t\tif (_handlers.indexOf(handler) > -1)\r\n\t\t\treturn;\r\n\t\t_handlers.push(handler);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeHandler(handler:IViewHandler):Void\r\n\t{\r\n\t\tvar index:Int = _handlers.indexOf(handler);\r\n\t\tif (index > -1)\r\n\t\t{\r\n\t\t\t_handlers.splice(index, 1);\r\n\t\t\tif (_handlers.length == 0)\r\n\t\t\t{\r\n\t\t\t\tdispatchEvent(new ContainerBindingEvent(ContainerBindingEvent.BINDING_EMPTY));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function handleView(view:DisplayObject, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar length:UInt = _handlers.length;\r\n\t\tfor (i in 0...length)\r\n\t\t{\r\n\t\t\tvar handler:IViewHandler = cast(_handlers[i], IViewHandler);\r\n\t\t\thandler.handleView(view, type);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.events.Event;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ContainerBindingEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var BINDING_EMPTY:String = 'bindingEmpty';\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(type:String)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new ContainerBindingEvent(type);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.EventDispatcher;\r\n\r\n\r\n@:meta(Event(name=\"containerAdd\", type=\"robotlegs.bender.extensions.viewManager.impl.ContainerRegistryEvent\"))\r\n@:meta(Event(name=\"containerRemove\", type=\"robotlegs.bender.extensions.viewManager.impl.ContainerRegistryEvent\"))\r\n@:meta(Event(name=\"rootContainerAdd\", type=\"robotlegs.bender.extensions.viewManager.impl.ContainerRegistryEvent\"))\r\n@:meta(Event(name=\"rootContainerRemove\", type=\"robotlegs.bender.extensions.viewManager.impl.ContainerRegistryEvent\"))\r\n/**\r\n * @private\r\n */\r\n@:rtti\r\n@:keepSub\r\nclass ContainerRegistry extends EventDispatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t//public var bindings = new Array<ContainerBinding>();\r\n\tpublic var bindings(get, null):Array<ContainerBinding> = new Array<ContainerBinding>();\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function get_bindings():Array<ContainerBinding>\r\n\t{\r\n\t\treturn this.bindings;\r\n\t}\r\n\r\n\t//public var rootBindings = new Array<ContainerBinding>();\r\n\tpublic var rootBindings(get, null):Array<ContainerBinding> = new Array<ContainerBinding>();\r\n\t/**\r\n\t * @private\r\n\t */\r\n\t\r\n\tpublic function get_rootBindings():Array<ContainerBinding>\r\n\t{\r\n\t\treturn this.rootBindings;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _bindingByContainer = new Map<DisplayObject,Dynamic>();\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function addContainer(container:DisplayObjectContainer):ContainerBinding\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (_bindingByContainer[container] == null) {\r\n\t\t\t_bindingByContainer[container] = createBinding(container);\r\n\t\t}\r\n\t\treturn _bindingByContainer[container];\r\n\t\t//return _bindingByContainer[container] ||= createBinding(container);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function removeContainer(container:DisplayObjectContainer):ContainerBinding\r\n\t{\r\n\t\tvar binding:ContainerBinding = _bindingByContainer[container];\r\n\t\tif (binding != null) removeBinding(binding);\r\n\t\treturn binding;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds the closest parent binding for a given display object\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic function findParentBinding(target:DisplayObject):ContainerBinding\r\n\t{\r\n\t\tvar parent:DisplayObjectContainer = target.parent;\r\n\t\twhile (parent != null)\r\n\t\t{\r\n\t\t\tvar binding:ContainerBinding = _bindingByContainer[parent];\r\n\t\t\tif (binding != null)\r\n\t\t\t{\r\n\t\t\t\treturn binding;\r\n\t\t\t}\r\n\t\t\tparent = parent.parent;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function getBinding(container:DisplayObjectContainer):ContainerBinding\r\n\t{\r\n\t\treturn _bindingByContainer[container];\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createBinding(container:DisplayObjectContainer):ContainerBinding\r\n\t{\r\n\t\tvar binding:ContainerBinding = new ContainerBinding(container);\r\n\t\tthis.bindings.push(binding);\r\n\r\n\t\t// Add a listener so that we can remove this binding when it has no handlers\r\n\t\tbinding.addEventListener(ContainerBindingEvent.BINDING_EMPTY, onBindingEmpty);\r\n\r\n\t\t// If the new binding doesn't have a parent it is a Root\r\n\t\tbinding.parent = findParentBinding(container);\r\n\t\tif (binding.parent == null)\r\n\t\t{\r\n\t\t\taddRootBinding(binding);\r\n\t\t}\r\n\r\n\t\t// Reparent any bindings which are contained within the new binding AND\r\n\t\t// A. Don't have a parent, OR\r\n\t\t// B. Have a parent that is not contained within the new binding\r\n\t\tfor (childBinding in _bindingByContainer)\r\n\t\t{\r\n\t\t\tif (container.contains(childBinding.container))\r\n\t\t\t{\r\n\t\t\t\tif (childBinding.parent == null)\r\n\t\t\t\t{\r\n\t\t\t\t\t// CHECK\r\n\t\t\t\t\tremoveRootBinding(cast(childBinding, ContainerBinding));\r\n\t\t\t\t\tchildBinding.parent = binding;\r\n\t\t\t\t}\r\n\t\t\t\telse if (container.contains(childBinding.parent.container))\r\n\t\t\t\t{\r\n\t\t\t\t\tchildBinding.parent = binding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatchEvent(new ContainerRegistryEvent(ContainerRegistryEvent.CONTAINER_ADD, binding.container));\r\n\t\treturn binding;\r\n\t}\r\n\r\n\tprivate function removeBinding(binding:ContainerBinding):Void\r\n\t{\r\n\t\t// Remove the binding itself\r\n\t\t_bindingByContainer.remove(binding.container);\r\n\t\tvar index:Int = this.bindings.indexOf(binding);\r\n\t\tthis.bindings.splice(index, 1);\r\n\r\n\t\t// Drop the empty binding listener\r\n\t\tbinding.removeEventListener(ContainerBindingEvent.BINDING_EMPTY, onBindingEmpty);\r\n\r\n\t\tif (binding.parent == null)\r\n\t\t{\r\n\t\t\t// This binding didn't have a parent, so it was a Root\r\n\t\t\tremoveRootBinding(binding);\r\n\t\t}\r\n\r\n\t\t// Re-parent the bindings\r\n\t\tfor (childBinding in _bindingByContainer)\r\n\t\t{\r\n\t\t\tif (childBinding.parent == binding)\r\n\t\t\t{\r\n\t\t\t\tchildBinding.parent = binding.parent;\r\n\t\t\t\tif (childBinding.parent == null)\r\n\t\t\t\t{\r\n\t\t\t\t\t// This binding used to have a parent,\r\n\t\t\t\t\t// but no longer does, so it is now a Root\r\n\t\t\t\t\t// CHECK\r\n\t\t\t\t\taddRootBinding(cast(childBinding, ContainerBinding));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdispatchEvent(new ContainerRegistryEvent(ContainerRegistryEvent.CONTAINER_REMOVE, binding.container));\r\n\t}\r\n\r\n\tprivate function addRootBinding(binding:ContainerBinding):Void\r\n\t{\r\n\t\tthis.rootBindings.push(binding);\r\n\t\tdispatchEvent(new ContainerRegistryEvent(ContainerRegistryEvent.ROOT_CONTAINER_ADD, binding.container));\r\n\t}\r\n\r\n\tprivate function removeRootBinding(binding:ContainerBinding):Void\r\n\t{\r\n\t\tvar index:Int = this.rootBindings.indexOf(binding);\r\n\t\tthis.rootBindings.splice(index, 1);\r\n\t\tdispatchEvent(new ContainerRegistryEvent(ContainerRegistryEvent.ROOT_CONTAINER_REMOVE, binding.container));\r\n\t}\r\n\r\n\tprivate function onBindingEmpty(event:ContainerBindingEvent):Void\r\n\t{\r\n\t\tremoveBinding(cast(event.target, ContainerBinding));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.Event;\r\n\r\n/**\r\n * Container existence event\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass ContainerRegistryEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var CONTAINER_ADD:String = 'containerAdd';\r\n\r\n\tpublic static var CONTAINER_REMOVE:String = 'containerRemove';\r\n\r\n\tpublic static var ROOT_CONTAINER_ADD:String = 'rootContainerAdd';\r\n\r\n\tpublic static var ROOT_CONTAINER_REMOVE:String = 'rootContainerRemove';\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tpublic var container:DisplayObjectContainer;\r\n\t//public var container(default, null):DisplayObjectContainer;\r\n\t/**\r\n\t * The container associated with this event\r\n\t */\r\n\t/*public function get_container():DisplayObjectContainer\r\n\t{\r\n\t\treturn _container;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a new container existence event\r\n\t * @param type The event type\r\n\t * @param container The container associated with this event\r\n\t */\r\n\tpublic function new(type:String, container:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.container = container;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new ContainerRegistryEvent(type, container);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.DisplayObjectContainer;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass StageCrawler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _binding:ContainerBinding;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(containerBinding:ContainerBinding)\r\n\t{\r\n\t\t_binding = containerBinding;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function scan(view:DisplayObjectContainer):Void\r\n\t{\r\n\t\tscanContainer(view);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function scanContainer(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\tprocessView(container);\r\n\t\tvar numChildren:Int = container.numChildren;\r\n\t\tfor (i in 0...numChildren)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = container.getChildAt(i);\r\n\t\t\tStd.is(child, DisplayObjectContainer)\r\n\t\t\t\t? scanContainer(cast(child, DisplayObjectContainer))\r\n\t\t\t\t: processView(child);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function processView(view:DisplayObject):Void\r\n\t{\r\n\t\t_binding.handleView(view, Type.getClass(view));\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.Event;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\n\r\n/**\r\n * @private\r\n */\r\n\r\n@:keepSub\r\nclass StageObserver\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _filter = ~/^mx\\.|^spark\\.|^flash\\./;\r\n\t\r\n\tprivate var _registry:ContainerRegistry;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(containerRegistry:ContainerRegistry)\r\n\t{\r\n\t\t_registry = containerRegistry;\r\n\t\t// We only care about roots\r\n\t\t_registry.addEventListener(ContainerRegistryEvent.ROOT_CONTAINER_ADD, onRootContainerAdd);\r\n\t\t_registry.addEventListener(ContainerRegistryEvent.ROOT_CONTAINER_REMOVE, onRootContainerRemove);\r\n\t\t// We might have arrived late on the scene\r\n\t\tfor (binding in _registry.rootBindings)\r\n\t\t{\r\n\t\t\taddRootListener(binding.container);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\t_registry.removeEventListener(ContainerRegistryEvent.ROOT_CONTAINER_ADD, onRootContainerAdd);\r\n\t\t_registry.removeEventListener(ContainerRegistryEvent.ROOT_CONTAINER_REMOVE, onRootContainerRemove);\r\n\t\tfor (binding in _registry.rootBindings)\r\n\t\t{\r\n\t\t\tremoveRootListener(binding.container);\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function onRootContainerAdd(event:ContainerRegistryEvent):Void\r\n\t{\r\n\t\taddRootListener(event.container);\r\n\t}\r\n\r\n\tprivate function onRootContainerRemove(event:ContainerRegistryEvent):Void\r\n\t{\r\n\t\tremoveRootListener(event.container);\r\n\t}\r\n\r\n\tprivate function addRootListener(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\t// The magical, but extremely expensive, capture-phase ADDED_TO_STAGE listener\r\n\t\tcontainer.addEventListener(Event.ADDED_TO_STAGE, onViewAddedToStage, true);\r\n\t\t// Watch the root container itself - nobody else is going to pick it up!\r\n\t\tcontainer.addEventListener(Event.ADDED_TO_STAGE, onContainerRootAddedToStage);\r\n\t}\r\n\r\n\tprivate function removeRootListener(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\tcontainer.removeEventListener(Event.ADDED_TO_STAGE, onViewAddedToStage, true);\r\n\t\tcontainer.removeEventListener(Event.ADDED_TO_STAGE, onContainerRootAddedToStage);\r\n\t}\r\n\r\n\tprivate function onViewAddedToStage(event:Event):Void\r\n\t{\r\n\t\tvar view:DisplayObject = cast(event.target, DisplayObject);\r\n\t\t\r\n\t\t// Question: would it be worth caching QCNs by view in a weak Map<Dynamic,Dynamic>,\r\n\t\t// to avoid CallProxy.replaceClassName() cost?\r\n\t\tvar qcn:String = CallProxy.replaceClassName(Type.getClass(view));\r\n\t\t// CHECK\r\n\t\t//var filtered:Bool = _filter.test(qcn);\r\n\t\tvar filtered:Bool = _filter.match(qcn);\r\n\t\tif (filtered)\r\n\t\t\treturn;\r\n\t\tvar type:Class<Dynamic> = Type.getClass(view);\r\n\t\t// Walk upwards from the nearest binding\r\n\t\tvar binding:ContainerBinding = _registry.findParentBinding(view);\r\n\t\twhile (binding != null)\r\n\t\t{\r\n\t\t\tbinding.handleView(view, type);\r\n\t\t\tbinding = binding.parent;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onContainerRootAddedToStage(event:Event):Void\r\n\t{\r\n\t\tvar container:DisplayObjectContainer = cast(event.target, DisplayObjectContainer);\r\n\t\tcontainer.removeEventListener(Event.ADDED_TO_STAGE, onContainerRootAddedToStage);\r\n\t\tvar type:Class<Dynamic> = Type.getClass(container);\r\n\t\tvar binding:ContainerBinding = _registry.getBinding(container);\r\n\t\tbinding.handleView(container, type);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.errors.Error;\r\nimport openfl.events.EventDispatcher;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\n\r\n@:meta(Event(name=\"containerAdd\", type=\"robotlegs.bender.extensions.viewManager.impl.ViewManagerEvent\"))\r\n@:meta(Event(name=\"containerRemove\", type=\"robotlegs.bender.extensions.viewManager.impl.ViewManagerEvent\"))\r\n@:meta(Event(name=\"handlerAdd\", type=\"robotlegs.bender.extensions.viewManager.impl.ViewManagerEvent\"))\r\n@:meta(Event(name=\"handlerRemove\", type=\"robotlegs.bender.extensions.viewManager.impl.ViewManagerEvent\"))\r\n/**\r\n * @private\r\n */\r\n@:rtti\r\n@:keepSub\r\nclass ViewManager extends EventDispatcher implements IViewManager\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t//private var _containers = new Array<DisplayObjectContainer>();\r\n\tpublic var containers(get, null):Array<DisplayObjectContainer> = new Array<DisplayObjectContainer>();\r\n\tpublic function get_containers():Array<DisplayObjectContainer>\r\n\t{\r\n\t\treturn this.containers;\r\n\t}\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t/*public function get_containers():Array<DisplayObjectContainer>\r\n\t{\r\n\t\treturn _containers;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _handlers = new Array<IViewHandler>();\r\n\r\n\tprivate var _registry:ContainerRegistry;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(containerRegistry:ContainerRegistry)\r\n\t{\r\n\t\t_registry = containerRegistry;\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addContainer(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\tif (validContainer(container) == false)\r\n\t\t\treturn;\r\n\r\n\t\tthis.containers.push(container);\r\n\r\n\t\tfor (handler in _handlers)\r\n\t\t{\r\n\t\t\t_registry.addContainer(container).addHandler(handler);\r\n\t\t}\r\n\t\tdispatchEvent(new ViewManagerEvent(ViewManagerEvent.CONTAINER_ADD, container));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeContainer(container:DisplayObjectContainer):Void\r\n\t{\r\n\t\tvar index:Int = this.containers.indexOf(container);\r\n\t\tif (index == -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis.containers.splice(index, 1);\r\n\r\n\t\tvar binding:ContainerBinding = _registry.getBinding(container);\r\n\t\tfor (handler in _handlers)\r\n\t\t{\r\n\t\t\tbinding.removeHandler(handler);\r\n\t\t}\r\n\t\tdispatchEvent(new ViewManagerEvent(ViewManagerEvent.CONTAINER_REMOVE, container));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addViewHandler(handler:IViewHandler):Void\r\n\t{\r\n\t\tif (_handlers.indexOf(handler) != -1)\r\n\t\t\treturn;\r\n\r\n\t\t_handlers.push(handler);\r\n\r\n\t\tfor (container in this.containers)\r\n\t\t{\r\n\t\t\t_registry.addContainer(container).addHandler(handler);\r\n\t\t}\r\n\t\tdispatchEvent(new ViewManagerEvent(ViewManagerEvent.HANDLER_ADD, null, handler));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeViewHandler(handler:IViewHandler):Void\r\n\t{\r\n\t\tvar index:Int = _handlers.indexOf(handler);\r\n\t\tif (index == -1)\r\n\t\t\treturn;\r\n\r\n\t\t_handlers.splice(index, 1);\r\n\r\n\t\tfor (container in this.containers)\r\n\t\t{\r\n\t\t\t_registry.getBinding(container).removeHandler(handler);\r\n\t\t}\r\n\t\tdispatchEvent(new ViewManagerEvent(ViewManagerEvent.HANDLER_REMOVE, null, handler));\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeAllHandlers():Void\r\n\t{\r\n\t\tfor (container in this.containers)\r\n\t\t{\r\n\t\t\tvar binding:ContainerBinding = _registry.getBinding(container);\r\n\t\t\tfor (handler in _handlers)\r\n\t\t\t{\r\n\t\t\t\tbinding.removeHandler(handler);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function validContainer(container:DisplayObjectContainer):Bool\r\n\t{\r\n\t\tfor (registeredContainer in this.containers)\r\n\t\t{\r\n\t\t\tif (container == registeredContainer)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (registeredContainer.contains(container) || container.contains(registeredContainer))\r\n\t\t\t\tthrow new Error(\"Containers can not be nested\");\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewManager.impl;\r\n\r\nimport openfl.display.DisplayObjectContainer;\r\nimport openfl.events.Event;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\n\r\n/**\r\n * Container existence event\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewManagerEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var CONTAINER_ADD:String = 'containerAdd';\r\n\r\n\tpublic static var CONTAINER_REMOVE:String = 'containerRemove';\r\n\r\n\tpublic static var HANDLER_ADD:String = 'handlerAdd';\r\n\r\n\tpublic static var HANDLER_REMOVE:String = 'handlerRemove';\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tpublic var container:DisplayObjectContainer;\r\n\t//public var container(default, null):DisplayObjectContainer;\r\n\t/**\r\n\t * The container associated with this event\r\n\t */\r\n\t/*public function get_container():DisplayObjectContainer\r\n\t{\r\n\t\treturn _container;\r\n\t}*/\r\n\r\n\tpublic var handler:IViewHandler;\r\n\t//public var handler(default, null):IViewHandler;\r\n\t/**\r\n\t * The view handler associated with this event\r\n\t */\r\n\t/*public function get_handler():IViewHandler\r\n\t{\r\n\t\treturn _handler;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a view manager event\r\n\t * @param type The event type\r\n\t * @param container The container associated with this event\r\n\t * @param handler The view handler associated with this event\r\n\t */\r\n\tpublic function new(type:String, container:DisplayObjectContainer = null, handler:IViewHandler = null)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.container = container;\r\n\t\tthis.handler = handler;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new ViewManagerEvent(type, container, handler);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap;\r\n\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewManager;\r\nimport robotlegs.bender.extensions.viewProcessorMap.api.IViewProcessorMap;\r\nimport robotlegs.bender.extensions.viewProcessorMap.impl.IViewProcessorFactory;\r\nimport robotlegs.bender.extensions.viewProcessorMap.impl.ViewProcessorFactory;\r\nimport robotlegs.bender.extensions.viewProcessorMap.impl.ViewProcessorMap;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * This extension install a View Processor Map into a context\r\n */\r\n@:keepSub\r\nclass ViewProcessorMapExtension implements IExtension\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _viewProcessorMap:IViewProcessorMap;\r\n\r\n\tprivate var _viewManager:IViewManager;\r\n\r\n\tprivate var _viewProcessorFactory:IViewProcessorFactory;\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.beforeInitializing(beforeInitializing);\r\n\t\tcontext.beforeDestroying(beforeDestroying);\r\n\t\tcontext.whenDestroying(whenDestroying);\r\n\t\t_injector = context.injector;\r\n\t\t_injector.map(IViewProcessorFactory).toValue(new ViewProcessorFactory(_injector.createChild()));\r\n\t\t_injector.map(IViewProcessorMap).toSingleton(ViewProcessorMap);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function beforeInitializing():Void\r\n\t{\r\n\t\t_viewProcessorMap = _injector.getInstance(IViewProcessorMap);\r\n\t\t_viewProcessorFactory = _injector.getInstance(IViewProcessorFactory);\r\n\t\tif (_injector.satisfiesDirectly(IViewManager))\r\n\t\t{\r\n\t\t\t_viewManager = _injector.getInstance(IViewManager);\r\n\t\t\t_viewManager.addViewHandler(cast(_viewProcessorMap, IViewHandler));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function beforeDestroying():Void\r\n\t{\r\n\t\t_viewProcessorFactory.runAllUnprocessors();\r\n\r\n\t\tif (_injector.satisfiesDirectly(IViewManager))\r\n\t\t{\r\n\t\t\t_viewManager = _injector.getInstance(IViewManager);\r\n\t\t\t_viewManager.removeViewHandler(cast(_viewProcessorMap, IViewHandler));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function whenDestroying():Void\r\n\t{\r\n\t\tif (_injector.satisfiesDirectly(IViewProcessorMap))\r\n\t\t{\r\n\t\t\t_injector.unmap(IViewProcessorMap);\r\n\t\t}\r\n\t\tif (_injector.satisfiesDirectly(IViewProcessorFactory))\r\n\t\t{\r\n\t\t\t_injector.unmap(IViewProcessorFactory);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.api;\r\nimport openfl.errors.Error;\r\n\r\n/**\r\n * View Processor Map Error\r\n */\r\n@:keepSub\r\nclass ViewProcessorMapError extends Error\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a View Processor Map Error\r\n\t * @param message The error message\r\n\t */\r\n\tpublic function new(message:String)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass NullProcessor\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function process(view:Dynamic, type:Class<Dynamic>, injector:Dynamic):Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function unprocess(view:Dynamic, type:Class<Dynamic>, injector:Dynamic):Void\r\n\t{\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorUnmapper;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass NullViewProcessorUnmapper implements IViewProcessorUnmapper\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromProcess(processorClassOrInstance:Dynamic):Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromAll():Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromNoProcess():Void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function fromInjection():Void\r\n\t{\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * Default View Injection Processor implementation\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewInjectionProcessor\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injectedObjects = new Map<String,Dynamic>();\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function process(view:Dynamic, type:Class<Dynamic>, injector:IInjector):Void\r\n\t{\r\n\t\tif (!_injectedObjects[UID.instanceID(view)]) injectAndRemember(view, injector);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function unprocess(view:Dynamic, type:Class<Dynamic>, injector:IInjector):Void\r\n\t{\r\n\t\t// assumption is that teardown is not wanted.\r\n\t\t// if you *do* want teardown, copy this class\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function injectAndRemember(view:Dynamic, injector:IInjector):Void\r\n\t{\r\n\t\tinjector.injectInto(view);\r\n\t\t_injectedObjects[UID.instanceID(view)] = view;\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\nimport openfl.events.Event;\r\nimport org.swiftsuspenders.errors.InjectorInterfaceConstructionError;\r\nimport org.swiftsuspenders.utils.UID;\r\n\r\n//import org.swiftsuspenders.errors.InjectorInterfaceConstructionError;\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.viewProcessorMap.api.ViewProcessorMapError;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapping;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.impl.ApplyHooks;\r\nimport robotlegs.bender.framework.impl.GuardsApprove;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewProcessorFactory implements IViewProcessorFactory\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _listenersByView = new Map<String,Dynamic>();\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(injector:IInjector)\r\n\t{\r\n\t\t_injector = injector;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function runProcessors(view:Dynamic, type:Class<Dynamic>, processorMappings:Array<Dynamic>):Void\r\n\t{\r\n\t\tcreateRemovedListener(view, type, processorMappings);\r\n\r\n\t\tvar filter:ITypeFilter;\r\n\r\n\t\tfor (mapping in processorMappings)\r\n\t\t{\r\n\t\t\tfilter = mapping.matcher;\r\n\t\t\tmapTypeForFilterBinding(filter, type, view);\r\n\t\t\trunProcess(view, type, mapping);\r\n\t\t\tunmapTypeForFilterBinding(filter, type, view);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function runUnprocessors(view:Dynamic, type:Class<Dynamic>, processorMappings:Array<Dynamic>):Void\r\n\t{\r\n\t\tfor (mapping in processorMappings)\r\n\t\t{\r\n\t\t\t// ?? Is this correct - will assume that people are implementing something sensible in their processors.\r\n\t\t\t// CHECK\r\n\t\t\tif (mapping.processor == null) {\r\n\t\t\t\tmapping.processor = createProcessor(mapping.processorClass);\r\n\t\t\t}\r\n\t\t\t//mapping.processor ||= createProcessor(mapping.processorClass);\r\n\t\t\tmapping.processor.unprocess(view, type, _injector);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function runAllUnprocessors():Void\r\n\t{\r\n\t\tfor (removalHandlers in _listenersByView)\r\n\t\t{\r\n\t\t\tvar removalHandlers2 = cast(removalHandlers, Array<Dynamic>);\r\n\t\t\tvar iLength:UInt = removalHandlers2.length;\r\n\t\t\tfor (i in 0...iLength)\r\n\t\t\t{\r\n\t\t\t\tif (Reflect.isFunction(removalHandlers2[i])){\r\n\t\t\t\t\tvar removalHandler = removalHandlers2[i];\r\n\t\t\t\t\tremovalHandler(null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function runProcess(view:Dynamic, type:Class<Dynamic>, mapping:IViewProcessorMapping):Void\r\n\t{\r\n\t\tif (GuardsApprove.call(mapping.guards, _injector))\r\n\t\t{\r\n\t\t\t// CHECK\r\n\t\t\tif (mapping.processor == null) {\r\n\t\t\t\tmapping.processor = createProcessor(mapping.processorClass);\r\n\t\t\t}\r\n\t\t\t//mapping.processor ||= createProcessor(mapping.processorClass);\r\n\t\t\tApplyHooks.call(mapping.hooks, _injector);\r\n\t\t\tmapping.processor.process(view, type, _injector);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function createProcessor(processorClass:Class<Dynamic>):Dynamic\r\n\t{\r\n\t\tif (_injector.hasMapping(processorClass))\r\n\t\t{\r\n\t\t\t_injector.map(processorClass).asSingleton();\r\n\t\t}\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn _injector.getInstance(processorClass);\r\n\t\t}\r\n\t\tcatch (error:InjectorInterfaceConstructionError)\r\n\t\t{\r\n\t\t\tvar errorMsg:String = \"The view processor \" + processorClass + \" has not been mapped in the injector, \" + \"and it is not possible to instantiate an interface. \" + \"Please map a concrete type against this interface.\";\r\n\t\t\tthrow(new ViewProcessorMapError(errorMsg));\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate function mapTypeForFilterBinding(filter:ITypeFilter, type:Class<Dynamic>, view:Dynamic):Void\r\n\t{\r\n\t\tvar requiredType:Class<Dynamic>;\r\n\t\tvar requiredTypes:Array<Class<Dynamic>> = requiredTypesFor(filter, type);\r\n\r\n\t\tfor (requiredType in requiredTypes)\r\n\t\t{\r\n\t\t\t_injector.map(requiredType).toValue(view);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function unmapTypeForFilterBinding(filter:ITypeFilter, type:Class<Dynamic>, view:Dynamic):Void\r\n\t{\r\n\t\tvar requiredType:Class<Dynamic>;\r\n\t\tvar requiredTypes:Array<Class<Dynamic>> = requiredTypesFor(filter, type);\r\n\r\n\t\tfor (requiredType in requiredTypes)\r\n\t\t{\r\n\t\t\tif (_injector.hasDirectMapping(requiredType))\r\n\t\t\t\t_injector.unmap(requiredType);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function requiredTypesFor(filter:ITypeFilter, type:Class<Dynamic>):Array<Class<Dynamic>>\r\n\t{\r\n\t\tvar requiredTypes:Array<Class<Dynamic>> = filter.allOfTypes.concat(filter.anyOfTypes);\r\n\r\n\t\tif (requiredTypes.indexOf(type) == -1)\r\n\t\t\trequiredTypes.push(type);\r\n\r\n\t\treturn requiredTypes;\r\n\t}\r\n\r\n\tprivate function createRemovedListener(view:Dynamic, type:Class<Dynamic>, processorMappings:Array<Dynamic>):Void\r\n\t{\r\n\t\tvar viewProcessorFactoryCreateRemovedListener:ViewProcessorFactoryCreateRemovedListener = new ViewProcessorFactoryCreateRemovedListener();\r\n\t\tviewProcessorFactoryCreateRemovedListener.init(_listenersByView, runUnprocessors, removeHandlerFromView, view, type, processorMappings);\r\n\t}\r\n\r\n\tprivate function removeHandlerFromView(view:Dynamic, handler:Void->Void):Void\r\n\t{\r\n\t\tif (_listenersByView[UID.instanceID(view)] && (_listenersByView[UID.instanceID(view)].length > 0))\r\n\t\t{\r\n\t\t\tvar handlerIndex:UInt = _listenersByView[UID.instanceID(view)].indexOf(handler);\r\n\t\t\t_listenersByView[UID.instanceID(view)].splice(handlerIndex, 1);\r\n\t\t\tif (_listenersByView[UID.instanceID(view)].length == 0)\r\n\t\t\t{\r\n\t\t\t\t_listenersByView.remove(UID.instanceID(view));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@:keepSub\r\nclass ViewProcessorFactoryCreateRemovedListener\r\n{\r\n\tvar _listenersByView:Map<String, Dynamic>;\r\n\tvar view:Dynamic;\r\n\tvar type:Class<Dynamic>;\r\n\tvar processorMappings:Array<Dynamic>;\r\n\tvar runUnprocessors:Dynamic -> Class<Dynamic> -> Array<Dynamic> -> Void;\r\n\tvar removeHandlerFromView:Dynamic->Dynamic->Void;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function init(_listenersByView:Map<String,Dynamic>, runUnprocessors:Dynamic -> Class<Dynamic> -> Array<Dynamic> -> Void, removeHandlerFromView:Dynamic -> Dynamic -> Void, view:Dynamic, type:Class<Dynamic>, processorMappings:Array<Dynamic>) \r\n\t{\r\n\t\tthis.removeHandlerFromView = removeHandlerFromView;\r\n\t\tthis.runUnprocessors = runUnprocessors;\r\n\t\tthis.processorMappings = processorMappings;\r\n\t\tthis.type = type;\r\n\t\tthis.view = view;\r\n\t\tthis._listenersByView = _listenersByView;\r\n\t\t\r\n\t\tif (Std.is(view, DisplayObject))\r\n\t\t{\r\n\t\t\t// CHECK\r\n\t\t\tif (_listenersByView[UID.instanceID(view)] == null) _listenersByView[UID.instanceID(view)] = [];\r\n\t\t\t//_listenersByView[view] ||= [];\r\n\t\t\t\r\n\t\t\t_listenersByView[UID.instanceID(view)].push(handler);\r\n\t\t\tcast(view, DisplayObject).addEventListener(Event.REMOVED_FROM_STAGE, handler, false, 0, true);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function handler(e:Event):Void\r\n\t{\r\n\t\trunUnprocessors(view, type, processorMappings);\r\n\t\tcast(view, DisplayObject).removeEventListener(Event.REMOVED_FROM_STAGE, handler);\r\n\t\tremoveHandlerFromView(view, handler);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\nimport openfl.display.DisplayObject;\r\n\r\nimport robotlegs.bender.extensions.matching.ITypeMatcher;\r\nimport robotlegs.bender.extensions.matching.TypeMatcher;\r\nimport robotlegs.bender.extensions.viewManager.api.IViewHandler;\r\nimport robotlegs.bender.extensions.viewProcessorMap.api.IViewProcessorMap;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapper;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorUnmapper;\r\n\r\n/**\r\n * View Processor Map implementation\r\n * @private\r\n */\r\n@:rtti\r\n@:keepSub\r\nclass ViewProcessorMap implements IViewProcessorMap implements IViewHandler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappers = new Map<String,Dynamic>();\r\n\r\n\tprivate var _handler:IViewProcessorViewHandler;\r\n\r\n\tprivate var NULL_UNMAPPER = new NullViewProcessorUnmapper();\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(factory:IViewProcessorFactory, handler:IViewProcessorViewHandler = null)\r\n\t{\r\n\t\tif (handler != null) _handler = handler;\r\n\t\telse _handler = new ViewProcessorViewHandler(factory);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function mapMatcher(matcher:ITypeMatcher):IViewProcessorMapper\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (_mappers[matcher.createTypeFilter().descriptor] == null) _mappers[matcher.createTypeFilter().descriptor] = createMapper(matcher);\r\n\t\treturn _mappers[matcher.createTypeFilter().descriptor];\r\n\t\t\r\n\t\t//return _mappers[matcher.createTypeFilter().descriptor] ||= createMapper(matcher);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function map(type:Class<Dynamic>):IViewProcessorMapper\r\n\t{\r\n\t\tvar matcher:ITypeMatcher = new TypeMatcher().allOf([type]);\r\n\t\treturn mapMatcher(matcher);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmapMatcher(matcher:ITypeMatcher):IViewProcessorUnmapper\r\n\t{\r\n\t\tif (_mappers[matcher.createTypeFilter().descriptor] != null) return _mappers[matcher.createTypeFilter().descriptor];\r\n\t\telse return NULL_UNMAPPER;\r\n\t\t//return _mappers[matcher.createTypeFilter().descriptor] || NULL_UNMAPPER;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unmap(type:Class<Dynamic>):IViewProcessorUnmapper\r\n\t{\r\n\t\tvar matcher:ITypeMatcher = new TypeMatcher().allOf([type]);\r\n\t\treturn unmapMatcher(matcher);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function process(item:Dynamic):Void\r\n\t{\r\n\t\tvar type:Class<Dynamic> = Type.getClass(item);\r\n\t\t_handler.processItem(item, type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unprocess(item:Dynamic):Void\r\n\t{\r\n\t\tvar type:Class<Dynamic> = Type.getClass(item);\r\n\t\t_handler.unprocessItem(item, type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function handleView(view:DisplayObject, type:Class<Dynamic>):Void\r\n\t{\r\n\t\t_handler.processItem(view, type);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createMapper(matcher:ITypeMatcher):IViewProcessorMapper\r\n\t{\r\n\t\treturn new ViewProcessorMapper(matcher.createTypeFilter(), _handler);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\n\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapper;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapping;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMappingConfig;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorUnmapper;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewProcessorMapper implements IViewProcessorMapper implements IViewProcessorUnmapper\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings = new Map<String,Dynamic>();\r\n\r\n\tprivate var _handler:IViewProcessorViewHandler;\r\n\r\n\tprivate var _matcher:ITypeFilter;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(matcher:ITypeFilter, handler:IViewProcessorViewHandler, logger:ILogger = null)\r\n\t{\r\n\t\t_handler = handler;\r\n\t\t_matcher = matcher;\r\n\t\t_logger = logger;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function toProcess(processClassOrInstance:Dynamic):IViewProcessorMappingConfig\r\n\t{\r\n\t\tvar mapping:IViewProcessorMapping = _mappings[processClassOrInstance];\r\n\t\treturn (mapping != null)\r\n\t\t\t? overwriteMapping(mapping, processClassOrInstance)\r\n\t\t\t: createMapping(processClassOrInstance);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function toInjection():IViewProcessorMappingConfig\r\n\t{\r\n\t\treturn toProcess(ViewInjectionProcessor);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function toNoProcess():IViewProcessorMappingConfig\r\n\t{\r\n\t\treturn toProcess(NullProcessor);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromProcess(processorClassOrInstance:Dynamic):Void\r\n\t{\r\n\t\tvar mapping:IViewProcessorMapping = _mappings[processorClassOrInstance];\r\n\t\tif (mapping != null) deleteMapping(mapping);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromAll():Void\r\n\t{\r\n\t\tfor (processor in _mappings)\r\n\t\t{\r\n\t\t\tfromProcess(processor);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromNoProcess():Void\r\n\t{\r\n\t\tfromProcess(NullProcessor);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fromInjection():Void\r\n\t{\r\n\t\tfromProcess(ViewInjectionProcessor);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function createMapping(processor:Dynamic):ViewProcessorMapping\r\n\t{\r\n\t\tvar mapping:ViewProcessorMapping = new ViewProcessorMapping(_matcher, processor);\r\n\t\t_handler.addMapping(mapping);\r\n\t\t_mappings[processor] = mapping;\r\n\t\tif (_logger != null) {\r\n\t\t\t_logger.debug('{0} mapped to {1}', [_matcher, mapping]);\r\n\t\t}\r\n\t\treturn mapping;\r\n\t}\r\n\r\n\tprivate function deleteMapping(mapping:IViewProcessorMapping):Void\r\n\t{\r\n\t\t_handler.removeMapping(mapping);\r\n\t\t_mappings.remove(mapping.processor);\r\n\t\tif (_logger != null) {\r\n\t\t\t_logger.debug('{0} unmapped from {1}', [_matcher, mapping]);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function overwriteMapping(mapping:IViewProcessorMapping, processClassOrInstance:Dynamic):IViewProcessorMappingConfig\r\n\t{\r\n\t\tif (_logger != null) {\r\n\t\t\t_logger.warn('{0} is already mapped to {1}.\\n' + 'If you have overridden this mapping intentionally you can use \"unmap()\" ' + 'prior to your replacement mapping in order to avoid seeing this message.\\n', [_matcher, mapping]);\r\n\t\t}\r\n\t\tdeleteMapping(mapping);\r\n\t\treturn createMapping(processClassOrInstance);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\nimport robotlegs.bender.extensions.matching.ITypeFilter;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapping;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMappingConfig;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewProcessorMapping implements IViewProcessorMapping implements IViewProcessorMappingConfig\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _matcher:ITypeFilter;\r\n\tpublic var matcher(get, null):ITypeFilter;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_matcher():ITypeFilter\r\n\t{\r\n\t\treturn _matcher;\r\n\t}\r\n\r\n\tprivate var _processor:Dynamic;\r\n\tpublic var processor(get, set):Dynamic;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_processor():Dynamic\r\n\t{\r\n\t\treturn _processor;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function set_processor(value:Dynamic):Dynamic\r\n\t{\r\n\t\t_processor = value;\r\n\t\treturn _processor;\r\n\t}\r\n\r\n\tprivate var _processorClass:Class<Dynamic>;\r\n\tpublic var processorClass(get, null):Class<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_processorClass():Class<Dynamic>\r\n\t{\r\n\t\treturn _processorClass;\r\n\t}\r\n\r\n\tprivate var _guards:Array<Dynamic> = [];\r\n\tpublic var guards(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_guards():Array<Dynamic>\r\n\t{\r\n\t\treturn _guards;\r\n\t}\r\n\r\n\tprivate var _hooks:Array<Dynamic> = [];\r\n\tpublic var hooks(get, null):Array<Dynamic>;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_hooks():Array<Dynamic>\r\n\t{\r\n\t\treturn _hooks;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(matcher:ITypeFilter, processor:Dynamic)\r\n\t{\r\n\t\t_matcher = matcher;\r\n\r\n\t\tsetProcessor(processor);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withGuards(guards:Array<Dynamic>):IViewProcessorMappingConfig\r\n\t{\r\n\t\t// CHECK\r\n\t\tfor (i in 0...guards.length) \r\n\t\t{\r\n\t\t\t_guards.push(guards[i]);\r\n\t\t}\r\n\t\t//_guards = _guards.concat.apply(null, guards);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function withHooks(hooks:Array<Dynamic>):IViewProcessorMappingConfig\r\n\t{\r\n\t\t// CHECK\r\n\t\tfor (i in 0...hooks.length) \r\n\t\t{\r\n\t\t\t_hooks.push(hooks[i]);\r\n\t\t}\r\n\t\t//_hooks = _hooks.concat.apply(null, hooks);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn 'Processor ' + _processor;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function setProcessor(processor:Dynamic):Void\r\n\t{\r\n\t\tif (Std.is(processor, Class))\r\n\t\t{\r\n\t\t\t_processorClass = cast(processor, Class<Dynamic>);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_processor = processor;\r\n\t\t\t_processorClass = Type.getClass(_processor);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.viewProcessorMap.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.extensions.viewProcessorMap.dsl.IViewProcessorMapping;\r\n\r\n/**\r\n * @private\r\n */\r\n@:keepSub\r\nclass ViewProcessorViewHandler implements IViewProcessorViewHandler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _mappings:Array<Dynamic> = [];\r\n\r\n\tprivate var _knownMappings = new Map<String,Dynamic>();\r\n\r\n\tprivate var _factory:IViewProcessorFactory;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(factory:IViewProcessorFactory):Void\r\n\t{\r\n\t\t_factory = factory;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addMapping(mapping:IViewProcessorMapping):Void\r\n\t{\r\n\t\tvar index:Int = _mappings.indexOf(mapping);\r\n\t\tif (index > -1)\r\n\t\t\treturn;\r\n\t\t_mappings.push(mapping);\r\n\t\tflushCache();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeMapping(mapping:IViewProcessorMapping):Void\r\n\t{\r\n\t\tvar index:Int = _mappings.indexOf(mapping);\r\n\t\tif (index == -1)\r\n\t\t\treturn;\r\n\t\t_mappings.splice(index, 1);\r\n\t\tflushCache();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function processItem(item:Dynamic, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar interestedMappings:Array<Dynamic> = getInterestedMappingsFor(item, type);\r\n\t\tif (interestedMappings != null)\r\n\t\t\t_factory.runProcessors(item, type, interestedMappings);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function unprocessItem(item:Dynamic, type:Class<Dynamic>):Void\r\n\t{\r\n\t\tvar interestedMappings:Array<Dynamic> = getInterestedMappingsFor(item, type);\r\n\t\tif (interestedMappings != null)\r\n\t\t\t_factory.runUnprocessors(item, type, interestedMappings);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function flushCache():Void\r\n\t{\r\n\t\t_knownMappings = new Map<String,Dynamic>();\r\n\t}\r\n\r\n\tprivate function getInterestedMappingsFor(view:Dynamic, type:Class<Dynamic>):Array<Dynamic>\r\n\t{\r\n\t\tvar mapping:IViewProcessorMapping;\r\n\t\t\r\n\t\tvar id = UID.classID(type);\r\n\t\t// we've seen this type before and nobody was interested\r\n\t\tif (_knownMappings[id] == false)\r\n\t\t\treturn null;\r\n\r\n\t\t// we haven't seen this type before\r\n\t\t// CHECK\r\n\t\t//if (_knownMappings[id] == undefined)\r\n\t\tif (_knownMappings[id] == null)\r\n\t\t{\r\n\t\t\t_knownMappings[id] = false;\r\n\t\t\tfor (mapping in _mappings)\r\n\t\t\t{\r\n\t\t\t\tif (mapping.matcher.matches(view))\r\n\t\t\t\t{\r\n\t\t\t\t\t// CHECK\r\n\t\t\t\t\tif (_knownMappings[id] == null) _knownMappings[id] = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\t//_knownMappings[id] ||= [];\r\n\t\t\t\t\t_knownMappings[id].push(mapping);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// nobody cares, let's get out of here\r\n\t\t\tif (_knownMappings[id] == false)\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// these mappings really do care\r\n\t\treturn cast(_knownMappings[id], Array<Dynamic>);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.vigilance;\r\n\r\nimport org.swiftsuspenders.errors.InjectorError;\r\nimport org.swiftsuspenders.mapping.MappingEvent;\r\nimport robotlegs.bender.extensions.enhancedLogging.impl.LogMessageParser;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IExtension;\r\nimport robotlegs.bender.framework.api.ILogTarget;\r\nimport robotlegs.bender.framework.api.LogLevel;\r\n\r\nimport robotlegs.bender.extensions.vigilance.VigilantError;\r\n\r\n/**\r\n * The Vigilance Extension throws Errors when warnings are logged.\r\n */\r\n@:keepSub\r\nclass VigilanceExtension implements IExtension implements ILogTarget\r\n{\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _messageParser:LogMessageParser = new LogMessageParser();\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function extend(context:IContext):Void\r\n\t{\r\n\t\tcontext.injector.instantiateUnmapped(MetadataChecker).check();\r\n\t\tcontext.addLogTarget(this);\r\n\t\tcontext.injector.addEventListener(MappingEvent.MAPPING_OVERRIDE, mappingOverrideHandler);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function log(source:Dynamic, level:UInt, timestamp:Int, message:String, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\tif (level <= LogLevel.WARN)\r\n\t\t{\r\n\t\t\tthrow new VigilantError(_messageParser.parseMessage(message, params));\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function mappingOverrideHandler(event:MappingEvent):Void\r\n\t{\r\n\t\tthrow new InjectorError(\"Injector mapping override for type \" +\r\n\t\t\tevent.mappedType + \" with name \" + event.mappedName);\r\n\t}\r\n}\r\n@:keepSub\r\n@:rtti\r\nclass MetadataChecker\r\n{\r\n\t//[Inject(optional=true)]\r\n\t@inject(\"optional=true\") public var context:IContext;\r\n\t//@inject public var context:IContext;\r\n\t\r\n\tpublic function check():Void\r\n\t{\r\n\t\tif (context == null)\r\n\t\t{\r\n\t\t\tthrow new VigilantError(\r\n\t\t\t\t\"It looks like custom metadata is being ignored by your compiler. \" +\r\n\t\t\t\t\"If you're compiling with the Flash IDE you need to open your \" +\r\n\t\t\t\t'\"Publish Settings\" and select \"Publish SWC\". ' +\r\n\t\t\t\t\"See: https://github.com/robotlegs/robotlegs-framework/wiki/Common-Problems\");\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.extensions.vigilance;\r\nimport openfl.errors.Error;\r\n\r\n/**\r\n * Vigilant Error\r\n */\r\n@:keepSub\r\nclass VigilantError extends Error\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Vigilant Error\r\n\t * @param message The error message\r\n\t */\r\n\tpublic function new(message:String)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.api;\r\nimport openfl.errors.Error;\r\n\r\n/**\r\n * Lifecycle Error\r\n */\r\n@:keepSub\r\nclass LifecycleError extends Error\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var SYNC_HANDLER_ARG_MISMATCH:String = \"When and After handlers must accept 0 or 1 arguments\";\r\n\r\n\tpublic static var LATE_HANDLER_ERROR_MESSAGE:String = \"Handler added late and will never fire\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a Lifecycle Error\r\n\t * @param message The error message\r\n\t */\r\n\tpublic function new(message:String)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.api;\r\n\r\nimport openfl.events.Event;\r\n\r\n/**\r\n * Detain/release pin Event\r\n */\r\n@:keepSub\r\nclass PinEvent extends Event\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var DETAIN:String = \"detain\";\r\n\r\n\tpublic static var RELEASE:String = \"release\";\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _instance:Dynamic;\r\n\tpublic var instance(default, null):Dynamic;\r\n\t/**\r\n\t * The instance being detained or released\r\n\t */\r\n\t/*public function get_instance():Dynamic\r\n\t{\r\n\t\treturn _instance;\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Create a Pin Event\r\n\t * @param type The event type\r\n\t * @param instance The associated instance\r\n\t */\r\n\tpublic function new(type:String, instance:Dynamic)\r\n\t{\r\n\t\tsuper(type);\r\n\t\t_instance = instance;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function clone():Event\r\n\t{\r\n\t\treturn new PinEvent(type, _instance);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n@:keepSub\r\nclass ApplyHooks\r\n{\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * <p>A hook can be a function, object or class.</p>\r\n\t *\r\n\t * <p>When an object is passed it is expected to expose a \"hook\" method.</p>\r\n\t *\r\n\t * <p>When a class is passed, an instance of that class will be instantiated and called.\r\n\t * If an injector is provided the instance will be created using that injector,\r\n\t * otherwise the instance will be created manually.</p>\r\n\t *\r\n\t * @param hooks An array of hooks\r\n\t * @param injector An optional Injector\r\n\t */\r\n\tpublic static function call(hooks:Array<Dynamic>, injector:IInjector = null):Void\r\n\t{\r\n\t\tfor (hook in hooks)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tif (Reflect.isFunction(hook))\r\n\t\t\t{\r\n\t\t\t\thook();\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (Std.is(hook, Class))\r\n\t\t\t{\r\n\t\t\t\thook = (injector != null)\r\n\t\t\t\t\t? injector.instantiateUnmapped(cast(hook, Class<Dynamic>))\r\n\t\t\t\t\t/*: Type.createInstance(hook, []);*/\r\n\t\t\t\t\t: CallProxy.createInstance(hook, []);\r\n\t\t\t}\r\n\t\t\thook.hook();\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n","package robotlegs.bender.framework.impl;\r\n\r\nimport robotlegs.bender.framework.api.IMatcher;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n@:keepSub\r\nclass ClassMatcher implements IMatcher\r\n{\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\r\n\t}\r\n\t\r\n\tpublic function matches(item:Dynamic):Bool\r\n\t{\r\n\t\treturn Std.is(item, Class);\r\n\t}\r\n\t\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.errors.Error;\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.framework.api.IConfig;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogger;\r\nimport robotlegs.bender.framework.api.IMatcher;\r\nimport robotlegs.bender.framework.api.LifecycleEvent;\r\n\r\n/**\r\n * The config manager handles configuration files and\r\n * allows the installation of custom configuration handlers.\r\n *\r\n * <p>It is pre-configured to handle plain objects and classes</p>\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass ConfigManager\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _objectProcessor:ObjectProcessor = new ObjectProcessor();\r\n\r\n\tprivate var _configs = new Map<String,Bool>();\r\n\r\n\tprivate var _queue:Array<Dynamic> = [];\r\n\r\n\tprivate var _injector:IInjector;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\tprivate var _initialized:Bool = false;\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_context = context;\r\n\t\t\r\n\t\t_injector = context.injector;\r\n\t\t_logger = context.getLogger(this);\r\n\t\taddConfigHandler(new ClassMatcher(), handleClass);\r\n\t\taddConfigHandler(new ObjectMatcher(), handleObject);\r\n\t\t// The ConfigManager should process the config queue\r\n\t\t// at the end of the INITIALIZE phase,\r\n\t\t// but *before* POST_INITIALIZE, so use low event priority\r\n\t\tcontext.addEventListener(LifecycleEvent.INITIALIZE, initialize, false, -100);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Process a given configuration object by running it through registered handlers.\r\n\t * <p>If the manager is not initialized the configuration will be queued.</p>\r\n\t * @param config The configuration object or class\r\n\t */\r\n\tpublic function addConfig(config:Dynamic):Void\r\n\t{\r\n\t\tvar id = UID.instanceID(config);\r\n\t\tif (_configs[id] == null)\r\n\t\t{\r\n\t\t\t_configs[id] = true;\r\n\t\t\t_objectProcessor.processObject(config);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a custom configuration handlers\r\n\t * @param matcher Pattern to match configuration objects\r\n\t * @param handler Handler to process matching configurations\r\n\t */\r\n\tpublic function addConfigHandler(matcher:IMatcher, handler:Dynamic):Void\r\n\t{\r\n\t\t_objectProcessor.addObjectHandler(matcher, handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\t_context.removeEventListener(LifecycleEvent.INITIALIZE, initialize);\r\n\t\t_objectProcessor.removeAllHandlers();\r\n\t\t_queue = [];\r\n\t\tfor (config in _configs)\r\n\t\t{\r\n\t\t\t_configs.remove(UID.clearInstanceID(config));\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function initialize(event:LifecycleEvent):Void\r\n\t{\r\n\t\tif (_initialized == false)\r\n\t\t{\r\n\t\t\t_initialized = true;\r\n\t\t\tprocessQueue();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function handleClass(type:Class<Dynamic>):Void\r\n\t{\r\n\t\tif (_initialized)\r\n\t\t{\r\n\t\t\t_logger.debug(\"Already initialized. Instantiating config class {0}\", [type]);\r\n\t\t\tprocessClass(type);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Not yet initialized. Queuing config class {0}\", [type]);\r\n\t\t\t_queue.push(type);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function handleObject(object:Dynamic):Void\r\n\t{\r\n\t\tif (_initialized)\r\n\t\t{\r\n\t\t\t_logger.debug(\"Already initialized. Injecting into config object {0}\", [object]);\r\n\t\t\tprocessObject(object);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.debug(\"Not yet initialized. Queuing config object {0}\", [object]);\r\n\t\t\t_queue.push(object);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function processQueue():Void\r\n\t{\r\n\t\tfor (config in _queue)\r\n\t\t{\r\n\t\t\tif (Std.is(config, Class))\r\n\t\t\t{\r\n\t\t\t\t#if js\r\n\t\t\t\t\t_logger.debug(\"Now initializing. Instantiating config class {0}\", [CallProxy.getClassName(config)]);\r\n\t\t\t\t#else \r\n\t\t\t\t\t_logger.debug(\"Now initializing. Instantiating config class {0}\", [config]);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tprocessClass(cast(config, Class<Dynamic>));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t#if js\r\n\t\t\t\t\t_logger.debug(\"Now initializing. Injecting into config object {0}\", [CallProxy.getClassName(Type.getClass(config))]);\r\n\t\t\t\t#else \r\n\t\t\t\t\t_logger.debug(\"Now initializing. Injecting into config object {0}\", [config]);\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tprocessObject(config);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_queue = [];\r\n\t}\r\n\r\n\tprivate function processClass(type:Class<Dynamic>):Void\r\n\t{\r\n\t\t//var config = cast(_injector.getOrCreateNewInstance(type), IConfig);\r\n\t\t// CHECK\r\n\t\t//config && config.configure();\r\n\t\t//if (config != null) config.configure();\r\n\t\t\r\n\t\tvar object;\r\n\t\ttry {\r\n\t\t\tobject = cast(_injector.getOrCreateNewInstance(type), IConfig);\r\n\t\t}\r\n\t\tcatch (e:Error) {\r\n\t\t\tthrow new Error(\"Can't cast to IConfig, check you are using the @:keepSub meta tag\");\r\n\t\t}\r\n\t\t\r\n\t\tif (object != null) {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar className = CallProxy.getClassName(type);\r\n\t\t\tvar hasFeild = CallProxy.hasField(object, \"configure\");\r\n\t\t\tif (hasFeild) {\r\n\t\t\t\t#if js\r\n\t\t\t\t\tuntyped __js__(\"object['configure']();\");\r\n\t\t\t\t#else \r\n\t\t\t\t\tvar func = Reflect.getProperty(object, \"configure\");\r\n\t\t\t\t\tif (func != null) func();\r\n\t\t\t\t#end\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function processObject(object:Dynamic):Void\r\n\t{\r\n\t\t_injector.injectInto(object);\r\n\t\t//var config = cast(object, IConfig);\r\n\t\t\r\n\t\t//config && config.configure();\r\n\t\t//if (config != null) config.configure();\r\n\t\t// CHECK\r\n\t\tvar hasFeild = CallProxy.hasField(object, \"configure\");\r\n\t\tif (hasFeild) {\r\n\t\t\t#if js\r\n\t\t\t\t\r\n\t\t\t\tuntyped __js__(\"object['configure']();\");\r\n\t\t\t#else \r\n\t\t\t\tvar func = Reflect.getProperty(object, \"configure\");\r\n\t\t\t\tif (func != null) func();\r\n\t\t\t#end\r\n\t\t}\r\n\t\t\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport haxe.io.Error;\r\nimport openfl.events.EventDispatcher;\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.IInjector;\r\nimport robotlegs.bender.framework.api.ILogTarget;\r\nimport robotlegs.bender.framework.api.ILogger;\r\nimport robotlegs.bender.framework.api.IMatcher;\r\nimport robotlegs.bender.framework.api.LifecycleEvent;\r\n\r\n@:meta(Event(name=\"destroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"detain\", type=\"robotlegs.bender.framework.api.PinEvent\"))\r\n@:meta(Event(name=\"initialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postDestroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postInitialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postResume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postSuspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preDestroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preInitialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preResume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preSuspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"release\", type=\"robotlegs.bender.framework.api.PinEvent\"))\r\n@:meta(Event(name=\"resume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"stateChange\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"suspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n/**\r\n * The core Robotlegs Context implementation\r\n */\r\n@:keepSub\r\nclass Context extends EventDispatcher implements IContext\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _injector:IInjector = new RobotlegsInjector();\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var injector (get, null):IInjector;\r\n\tpublic function get_injector():IInjector\r\n\t{\r\n\t\treturn _injector;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var logLevel (get, set):UInt;\r\n\tpublic function get_logLevel():UInt\r\n\t{\r\n\t\treturn _logManager.logLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function set_logLevel(value:UInt):UInt\r\n\t{\r\n\t\t_logManager.logLevel = value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic var state(get, null):String;\r\n\t//[Bindable(\"stateChange\")]\r\n\t@:meta(Bindable('stateChange'))\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_state():String\r\n\t{\r\n\t\treturn _lifecycle.state;\r\n\t}\r\n\r\n\tpublic var uninitialized(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_uninitialized():Bool\r\n\t{\r\n\t\treturn _lifecycle.uninitialized;\r\n\t}\r\n\r\n\tpublic var initialized(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_initialized():Bool\r\n\t{\r\n\t\treturn _lifecycle.initialized;\r\n\t}\r\n\r\n\tpublic var active(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_active():Bool\r\n\t{\r\n\t\treturn _lifecycle.active;\r\n\t}\r\n\t\r\n\tpublic var suspended(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_suspended():Bool\r\n\t{\r\n\t\treturn _lifecycle.suspended;\r\n\t}\r\n\r\n\tpublic var destroyed(get, null):Bool;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_destroyed():Bool\r\n\t{\r\n\t\treturn _lifecycle.destroyed;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _uid:String = UID.create(Context);\r\n\r\n\tprivate var _logManager:LogManager = new LogManager();\r\n\r\n\tprivate var _children:Array<Dynamic> = [];\r\n\r\n\tprivate var _pin:Pin;\r\n\r\n\tprivate var _lifecycle:Lifecycle;\r\n\r\n\tprivate var _configManager:ConfigManager;\r\n\r\n\tprivate var _extensionInstaller:ExtensionInstaller;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a new Context\r\n\t */\r\n\tpublic function new()\r\n\t{\r\n\t\tsetup();\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function initialize(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_lifecycle.initialize(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function suspend(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_lifecycle.suspend(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function resume(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_lifecycle.resume(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function destroy(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_lifecycle.destroy(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeInitializing(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.beforeInitializing(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenInitializing(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.whenInitializing(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterInitializing(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.afterInitializing(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeSuspending(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.beforeSuspending(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenSuspending(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.whenSuspending(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterSuspending(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.afterSuspending(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeResuming(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.beforeResuming(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenResuming(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.whenResuming(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterResuming(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.afterResuming(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeDestroying(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.beforeDestroying(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenDestroying(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.whenDestroying(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterDestroying(handler:Void->Void):IContext\r\n\t{\r\n\t\t_lifecycle.afterDestroying(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\t\r\n\tpublic function install(extensions:Dynamic):IContext\r\n\t{\r\n\t\tif (Std.is(extensions, Array)) {\r\n\t\t\tvar extensionsArray:Array<Dynamic> = cast(extensions);\r\n\t\t\tfor (extension in extensionsArray)\r\n\t\t\t{\r\n\t\t\t\t_extensionInstaller.install(extension);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar extension = extensions;\r\n\t\t\t_extensionInstaller.install(extension);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function configure(configs:Dynamic):IContext\r\n\t{\r\n\t\tif (Std.is(configs, Array)) {\r\n\t\t\tvar configsArray:Array<Dynamic> = cast(configs);\r\n\t\t\tfor (config in configsArray)\r\n\t\t\t{\r\n\t\t\t\t#if js\r\n\t\t\t\t\tif (!Std.is(config, Class)) {\r\n\t\t\t\t\t\tReflect.setProperty(config, \"constructor\", Type.getClass(config));\r\n\t\t\t\t\t}\r\n\t\t\t\t#end\r\n\t\t\t\t_configManager.addConfig(config);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar config = configs;\r\n\t\t\t#if js\r\n\t\t\t\tif (!Std.is(config, Class)) {\r\n\t\t\t\t\tReflect.setProperty(config, \"constructor\", Type.getClass(config));\r\n\t\t\t\t}\r\n\t\t\t#end\r\n\t\t\t_configManager.addConfig(config);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addChild(child:IContext):IContext\r\n\t{\r\n\t\tif (_children.indexOf(child) == -1)\r\n\t\t{\r\n\t\t\t_logger.info(\"Adding child context {0}\", [child]);\r\n\t\t\tif (child.uninitialized)\r\n\t\t\t{\r\n\t\t\t\t_logger.warn(\"Child context {0} must be uninitialized\", [child]);\r\n\t\t\t}\r\n\t\t\tif (child.injector.parent != null)\r\n\t\t\t{\r\n\t\t\t\t_logger.warn(\"Child context {0} must not have a parent Injector\", [child]);\r\n\t\t\t}\r\n\t\t\t_children.push(child);\r\n\t\t\tchild.injector.parent = injector;\r\n\t\t\tchild.addEventListener(LifecycleEvent.POST_DESTROY, onChildDestroy);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeChild(child:IContext):IContext\r\n\t{\r\n\t\tvar childIndex:Int = _children.indexOf(child);\r\n\t\tif (childIndex > -1)\r\n\t\t{\r\n\t\t\t_logger.info(\"Removing child context {0}\", [child]);\r\n\t\t\t_children.splice(childIndex, 1);\r\n\t\t\tchild.injector.parent = null;\r\n\t\t\tchild.removeEventListener(LifecycleEvent.POST_DESTROY, onChildDestroy);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_logger.warn(\"Child context {0} must be a child of {1}\", [child, this]);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addConfigHandler(matcher:IMatcher, handler:Void->Void):IContext\r\n\t{\r\n\t\t_configManager.addConfigHandler(matcher, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function getLogger(source:Dynamic):ILogger\r\n\t{\r\n\t\tvar returnVal:ILogger = _logManager.getLogger(source);\r\n\t\treturn returnVal;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addLogTarget(target:ILogTarget):IContext\r\n\t{\r\n\t\t_logManager.addLogTarget(target);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function detain(instance:Dynamic):IContext\r\n\t{\r\n\t\t//for each (var instance:Dynamic in instances)\r\n\t\t//{\r\n\t\t\t_pin.detain(instance);\r\n\t\t//}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function release(instance:Dynamic):IContext\r\n\t{\r\n\t\t//for each (var instance:Dynamic in instances)\r\n\t\t//{\r\n\t\t\t_pin.release(instance);\r\n\t\t//}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\toverride public function toString():String\r\n\t{\r\n\t\treturn _uid;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Configures mandatory context dependencies\r\n\t */\r\n\tprivate function setup():Void\r\n\t{\r\n\t\t_injector.map(IInjector).toValue(_injector);\r\n\t\t_injector.map(IContext).toValue(this);\r\n\t\t_logger = _logManager.getLogger(this);\r\n\t\t_pin = new Pin(this);\r\n\t\t_lifecycle = new Lifecycle(this);\r\n\t\t_configManager = new ConfigManager(this);\r\n\t\t_extensionInstaller = new ExtensionInstaller(this);\r\n\t\tbeforeInitializing(beforeInitializingCallback);\r\n\t\tafterInitializing(afterInitializingCallback);\r\n\t\tbeforeDestroying(beforeDestroyingCallback);\r\n\t\tafterDestroying(afterDestroyingCallback);\r\n\t}\r\n\r\n\tprivate function beforeInitializingCallback():Void\r\n\t{\r\n\t\t_logger.info(\"Initializing...\");\r\n\t}\r\n\r\n\tprivate function afterInitializingCallback():Void\r\n\t{\r\n\t\t_logger.info(\"Initialize complete\");\r\n\t}\r\n\r\n\tprivate function beforeDestroyingCallback():Void\r\n\t{\r\n\t\t_logger.info(\"Destroying...\");\r\n\t}\r\n\r\n\tprivate function afterDestroyingCallback():Void\r\n\t{\r\n\t\t_extensionInstaller.destroy();\r\n\t\t_configManager.destroy();\r\n\t\t_pin.releaseAll();\r\n\t\t_injector.teardown();\r\n\t\tremoveChildren();\r\n\t\t_logger.info(\"Destroy complete\");\r\n\t\t_logManager.removeAllTargets();\r\n\t}\r\n\r\n\tprivate function onChildDestroy(event:LifecycleEvent):Void\r\n\t{\r\n\t\tremoveChild(cast(event.target, IContext));\r\n\t}\r\n\r\n\tprivate function removeChildren():Void\r\n\t{\r\n\t\t// CHECK\r\n\t\tfor (child in _children)\r\n\t\t{\r\n\t\t\tremoveChild(child);\r\n\t\t}\r\n\t\t_children = [];\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\n\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport org.swiftsuspenders.utils.UID;\r\nimport robotlegs.bender.framework.api.IBundle;\r\nimport robotlegs.bender.framework.api.IContext;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * Installs custom extensions into a given context\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass ExtensionInstaller\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _classes = new Map<String,Bool>();\r\n\r\n\tprivate var _context:IContext;\r\n\r\n\tprivate var _logger:ILogger;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(context:IContext)\r\n\t{\r\n\t\t_context = context;\r\n\t\t_logger = _context.getLogger(this);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Installs the supplied extension\r\n\t * @param extension An object or class implementing IExtension\r\n\t */\r\n\tpublic function install(extension:Dynamic):Void\r\n\t{\r\n\t\tif (Std.is(extension, Class))\r\n\t\t{\r\n\t\t\t//var extensionInstance = Type.createInstance(extension, []);\r\n\t\t\tvar extensionInstance = CallProxy.createInstance(extension, []);\r\n\t\t\tinstall(extensionInstance);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar id = UID.instanceID(extension);\r\n\t\t\tvar extensionClass:Class<Dynamic> = Type.getClass(extension);\r\n\t\t\tif (_classes[id] == true){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_logger.debug(\"Installing extension {0}\", [id]);\r\n\t\t\t_classes[id] = true;\r\n\t\t\t\r\n\t\t\tvar hasExtendField = CallProxy.hasField(extension, \"extend\");\r\n\t\t\tif (hasExtendField == true) {\r\n\t\t\t\t\r\n\t\t\t\textension.extend(_context);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy\r\n\t */\r\n\tpublic function destroy():Void\r\n\t{\r\n\t\tvar fields = Reflect.fields (_classes);\r\n\t\tfor (propertyName in fields) {\r\n\t\t\t_classes.remove(propertyName);\r\n\t\t}\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved.\r\n//\r\n//  NOTICE: You are permitted to use, modify, and distribute this file\r\n//  in accordance with the terms of the license agreement accompanying it.\r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport org.swiftsuspenders.utils.CallProxy;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n@:keepSub\r\nclass GuardsApprove\r\n{\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * <p>A guard can be a function, object or class.</p>\r\n\t *\r\n\t * <p>When a function is provided it is expected to return a Bool when called.</p>\r\n\t *\r\n\t * <p>When an object is provided it is expected to expose an \"approve\" method\r\n\t * that returns a Bool.</p>\r\n\t *\r\n\t * <p>When a class is provided, an instance of that class will be instantiated and tested.\r\n\t * If an injector is provided the instance will be created using that injector,\r\n\t * otherwise the instance will be created manually.</p>\r\n\t *\r\n\t * @param guards An array of guards\r\n\t * @param injector An optional Injector\r\n\t *\r\n\t * @return A Bool value of false if any guard returns false\r\n\t */\r\n\tpublic static function call(guards:Array<Dynamic>, injector:IInjector = null):Bool\r\n\t{\r\n\t\tfor (guard in guards)\r\n\t\t{\r\n\t\t\tif (Reflect.isFunction(guard))\r\n\t\t\t{\r\n\t\t\t\tif (guard())\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (Std.is(guard, Class))\r\n\t\t\t{\r\n\t\t\t\tguard = (injector != null)\r\n\t\t\t\t\t? injector.instantiateUnmapped(cast(guard, Class<Dynamic>))\r\n\t\t\t\t\t//: Type.createInstance(guard, []);\r\n\t\t\t\t\t: CallProxy.createInstance(guard, []);\r\n\t\t\t}\r\n\t\t\tif (guard.approve() == false)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.events.Event;\r\nimport openfl.events.EventDispatcher;\r\nimport openfl.events.IEventDispatcher;\r\n\r\nimport robotlegs.bender.framework.api.ILifecycle;\r\nimport robotlegs.bender.framework.api.LifecycleError;\r\nimport robotlegs.bender.framework.api.LifecycleEvent;\r\nimport robotlegs.bender.framework.api.LifecycleState;\r\n\r\n@:meta(Event(name=\"destroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"error\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"initialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postDestroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postInitialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postResume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"postSuspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preDestroy\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preInitialize\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preResume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"preSuspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"resume\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"stateChange\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n@:meta(Event(name=\"suspend\", type=\"robotlegs.bender.framework.api.LifecycleEvent\"))\r\n/**\r\n * Default object lifecycle\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass Lifecycle implements ILifecycle\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _state:String = LifecycleState.UNINITIALIZED;\r\n\t\r\n\t//[Bindable(\"stateChange\")]\r\n\t@:meta(Bindable('stateChange'))\r\n\tpublic var state(get, null):String;\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_state():String\r\n\t{\r\n\t\treturn _state;\r\n\t}\r\n\r\n\tprivate var _target:Dynamic;\r\n\tpublic var target(get, null):Dynamic;\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_target():Dynamic\r\n\t{\r\n\t\treturn _target;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var uninitialized(get_uninitialized, null):Bool;\r\n\tpublic function get_uninitialized():Bool\r\n\t{\r\n\t\treturn _state == LifecycleState.UNINITIALIZED;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var initialized(get_initialized, null):Bool;\r\n\tpublic function get_initialized():Bool\r\n\t{\r\n\t\treturn _state != LifecycleState.UNINITIALIZED\r\n\t\t\t&& _state != LifecycleState.INITIALIZING;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var active(get_active, null):Bool;\r\n\tpublic function get_active():Bool\r\n\t{\r\n\t\treturn _state == LifecycleState.ACTIVE;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var suspended(get_suspended, null):Bool;\r\n\tpublic function get_suspended():Bool\r\n\t{\r\n\t\treturn _state == LifecycleState.SUSPENDED;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var destroyed(get_destroyed, null):Bool;\r\n\tpublic function get_destroyed():Bool\r\n\t{\r\n\t\treturn _state == LifecycleState.DESTROYED;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _reversedEventTypes = new Map<String,Dynamic>();\r\n\r\n\tprivate var _reversePriority:Int;\r\n\r\n\tprivate var _initialize:LifecycleTransition;\r\n\r\n\tprivate var _suspend:LifecycleTransition;\r\n\r\n\tprivate var _resume:LifecycleTransition;\r\n\r\n\tprivate var _destroy:LifecycleTransition;\r\n\r\n\tprivate var _dispatcher:IEventDispatcher;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a lifecycle for a given target object\r\n\t * @param target The target object\r\n\t */\r\n\tpublic function new(target:Dynamic)\r\n\t{\r\n\t\t_target = target;\r\n\t\tif (cast(target, IEventDispatcher) != null) _dispatcher = cast(target, IEventDispatcher);\r\n\t\telse _dispatcher = new EventDispatcher(this);\r\n\t\tconfigureTransitions();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function initialize(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_initialize.enter(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function suspend(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_suspend.enter(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function resume(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_resume.enter(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function destroy(callback:Void->Void = null):Void\r\n\t{\r\n\t\t_destroy.enter(callback);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeInitializing(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (!uninitialized) reportError(LifecycleError.LATE_HANDLER_ERROR_MESSAGE);\r\n\t\t_initialize.addBeforeHandler(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenInitializing(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (initialized) reportError(LifecycleError.LATE_HANDLER_ERROR_MESSAGE);\r\n\t\taddEventListener(LifecycleEvent.INITIALIZE, createSyncLifecycleListener(handler, true));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterInitializing(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t// CHECK\r\n\t\tif (initialized) reportError(LifecycleError.LATE_HANDLER_ERROR_MESSAGE);\r\n\t\taddEventListener(LifecycleEvent.POST_INITIALIZE, createSyncLifecycleListener(handler, true));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeSuspending(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t_suspend.addBeforeHandler(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenSuspending(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.SUSPEND, createSyncLifecycleListener(handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterSuspending(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.POST_SUSPEND, createSyncLifecycleListener(handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeResuming(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t_resume.addBeforeHandler(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenResuming(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.RESUME, createSyncLifecycleListener(handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterResuming(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.POST_RESUME, createSyncLifecycleListener(handler));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function beforeDestroying(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\t_destroy.addBeforeHandler(handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function whenDestroying(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.DESTROY, createSyncLifecycleListener(handler, true));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function afterDestroying(handler:Dynamic):ILifecycle\r\n\t{\r\n\t\taddEventListener(LifecycleEvent.POST_DESTROY, createSyncLifecycleListener(handler, true));\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function addEventListener(type:String, listener:Dynamic, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void\r\n\t{\r\n\t\tpriority = flipPriority(type, priority);\r\n\t\t_dispatcher.addEventListener(type, listener, useCapture, priority, useWeakReference);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function removeEventListener(type:String, listener:Dynamic, useCapture:Bool = false):Void\r\n\t{\r\n\t\t_dispatcher.removeEventListener(type, listener, useCapture);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function dispatchEvent(event:Event):Bool\r\n\t{\r\n\t\treturn _dispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function hasEventListener(type:String):Bool\r\n\t{\r\n\t\treturn _dispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function willTrigger(type:String):Bool\r\n\t{\r\n\t\treturn _dispatcher.willTrigger(type);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Internal Functions                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tpublic function setCurrentState(state:String):Void\r\n\t{\r\n\t\tif (_state == state)\r\n\t\t\treturn;\r\n\t\t_state = state;\r\n\t\tdispatchEvent(new LifecycleEvent(LifecycleEvent.STATE_CHANGE));\r\n\t}\r\n\t\r\n\t//public function addReversedEventTypes(type:String/*... types*/):Void\r\n\tpublic function addReversedEventTypes(types:Array<String>):Void\r\n\t{\r\n\t\tfor (i in 0...types.length)\r\n\t\t{\r\n\t\t\t_reversedEventTypes[types[i]] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function configureTransitions():Void\r\n\t{\r\n\t\t_initialize = new LifecycleTransition(LifecycleEvent.PRE_INITIALIZE, this)\r\n\t\t\t.fromStates([LifecycleState.UNINITIALIZED])\r\n\t\t\t.toStates(LifecycleState.INITIALIZING, LifecycleState.ACTIVE)\r\n\t\t\t.withEvents(LifecycleEvent.PRE_INITIALIZE, LifecycleEvent.INITIALIZE, LifecycleEvent.POST_INITIALIZE);\r\n\r\n\t\t_suspend = new LifecycleTransition(LifecycleEvent.PRE_SUSPEND, this)\r\n\t\t\t.fromStates([LifecycleState.ACTIVE])\r\n\t\t\t.toStates(LifecycleState.SUSPENDING, LifecycleState.SUSPENDED)\r\n\t\t\t.withEvents(LifecycleEvent.PRE_SUSPEND, LifecycleEvent.SUSPEND, LifecycleEvent.POST_SUSPEND)\r\n\t\t\t.inReverse();\r\n\t\t\r\n\t\t_resume = new LifecycleTransition(LifecycleEvent.PRE_RESUME, this)\r\n\t\t\t.fromStates([LifecycleState.SUSPENDED])\r\n\t\t\t.toStates(LifecycleState.RESUMING, LifecycleState.ACTIVE)\r\n\t\t\t.withEvents(LifecycleEvent.PRE_RESUME, LifecycleEvent.RESUME, LifecycleEvent.POST_RESUME);\r\n\t\t\t\r\n\t\t_destroy = new LifecycleTransition(LifecycleEvent.PRE_DESTROY, this)\r\n\t\t\t.fromStates([LifecycleState.SUSPENDED, LifecycleState.ACTIVE])\r\n\t\t\t.toStates(LifecycleState.DESTROYING, LifecycleState.DESTROYED)\r\n\t\t\t.withEvents(LifecycleEvent.PRE_DESTROY, LifecycleEvent.DESTROY, LifecycleEvent.POST_DESTROY)\r\n\t\t\t.inReverse();\r\n\t}\r\n\r\n\tprivate function flipPriority(type:String, priority:Int):Int\r\n\t{\r\n\t\treturn (priority == 0 && _reversedEventTypes[type])\r\n\t\t\t? _reversePriority++\r\n\t\t\t: priority;\r\n\t}\r\n\r\n\tprivate function createSyncLifecycleListener(handler:Dynamic, once:Bool = false):Dynamic\r\n\t{\r\n\t\t// When and After handlers can not be asynchronous\r\n\t\tif (handler.length > 1)\r\n\t\t{\r\n\t\t\tthrow new LifecycleError(LifecycleError.SYNC_HANDLER_ARG_MISMATCH);\r\n\t\t}\r\n\t\t\r\n\t\t// CHECK\r\n\t\tvar syncLifecycleListener:SyncLifecycleListener = new SyncLifecycleListener();\r\n\t\treturn syncLifecycleListener.init(handler, once, handler.length);\r\n\t\t\r\n\t\t// A handler that accepts 1 argument is provided with the event type\r\n\t\t/*if (handler.length == 1)\r\n\t\t{\r\n\t\t\treturn function(event:LifecycleEvent):Void {\r\n\t\t\t\t//once && IEventDispatcher(event.target).removeEventListener(event.type, arguments.callee);\r\n\t\t\t\tif (once) cast(event.target, IEventDispatcher).removeEventListener(event.type, arguments.callee);\r\n\t\t\t\thandler(event.type);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Or, just call the handler\r\n\t\treturn function(event:LifecycleEvent):Void {\r\n\t\t\t//once && IEventDispatcher(event.target).removeEventListener(event.type, arguments.callee);\r\n\t\t\tif (once) cast(event.target, IEventDispatcher).removeEventListener(event.type, arguments.callee);\r\n\t\t\thandler();\r\n\t\t};*/\r\n\t}\r\n\t\r\n\tprivate function reportError(message:String):Void\r\n\t{\r\n\t\tvar error:LifecycleError = new LifecycleError(message);\r\n\t\tif (hasEventListener(LifecycleEvent.ERROR))\r\n\t\t{\r\n\t\t\tvar event:LifecycleEvent = new LifecycleEvent(LifecycleEvent.ERROR, error);\r\n\t\t\tdispatchEvent(event);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@:keepSub\r\nclass SyncLifecycleListener\r\n{\r\n\tprivate var once:Bool;\r\n\tprivate var handler:Dynamic;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function init(handler:Dynamic, once:Bool, handlerLength:Int) \r\n\t{\r\n\t\tthis.handler = handler;\r\n\t\tthis.once = once;\r\n\t\tif (handlerLength == 1) return createSyncLifecycleListenerFunction;\r\n\t\treturn createSyncLifecycleListenerFunction2;\r\n\t}\r\n\t\r\n\tprivate function createSyncLifecycleListenerFunction(event:LifecycleEvent):Void\r\n\t{\r\n\t\tif (once) cast(event.target, IEventDispatcher).removeEventListener(event.type, createSyncLifecycleListenerFunction);\r\n\t\thandler(event.type);\r\n\t}\r\n\r\n\tprivate function createSyncLifecycleListenerFunction2(event:LifecycleEvent):Void\r\n\t{\r\n\t\tif (once) cast(event.target, IEventDispatcher).removeEventListener(event.type, createSyncLifecycleListenerFunction2);\r\n\t\thandler();\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.errors.Error;\r\nimport robotlegs.bender.framework.api.LifecycleEvent;\r\n\r\n/**\r\n * Handles a lifecycle transition\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass LifecycleTransition\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _fromStates:Array<String> = [];\r\n\r\n\tprivate var _dispatcher:MessageDispatcher = new MessageDispatcher();\r\n\r\n\tprivate var _callbacks:Array<Dynamic> = [];\r\n\r\n\tprivate var _name:String;\r\n\r\n\tprivate var _lifecycle:Lifecycle;\r\n\r\n\tprivate var _transitionState:String;\r\n\r\n\tprivate var _finalState:String;\r\n\r\n\tprivate var _preTransitionEvent:String;\r\n\r\n\tprivate var _transitionEvent:String;\r\n\r\n\tprivate var _postTransitionEvent:String;\r\n\r\n\tprivate var _reverse:Bool = false;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a lifecycle transition\r\n\t * @param name The name of the transition\r\n\t * @param lifecycle The associated lifecycle instance\r\n\t */\r\n\tpublic function new(name:String, lifecycle:Lifecycle)\r\n\t{\r\n\t\t_name = name;\r\n\t\t_lifecycle = lifecycle;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * States that this transition is allowed to enter from\r\n\t * @param states Allowed states\r\n\t * @return Self\r\n\t */\r\n\t\r\n\tpublic function fromStates(states:Array<String>):LifecycleTransition\r\n\t{\r\n\t\tfor (state in states){\r\n\t\t\t_fromStates.push(state);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * The states that this transition applies\r\n\t * @param transitionState The state that the target is put into during the transition\r\n\t * @param finalState The state that the target is put into after the transition\r\n\t * @return\r\n\t */\r\n\tpublic function toStates(transitionState:String, finalState:String):LifecycleTransition\r\n\t{\r\n\t\t_transitionState = transitionState;\r\n\t\t_finalState = finalState;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * The events that the lifecycle will dispatch\r\n\t * @param preTransitionEvent\r\n\t * @param transitionEvent\r\n\t * @param postTransitionEvent\r\n\t * @return Self\r\n\t */\r\n\tpublic function withEvents(preTransitionEvent:String, transitionEvent:String, postTransitionEvent:String):LifecycleTransition\r\n\t{\r\n\t\t_preTransitionEvent = preTransitionEvent;\r\n\t\t_transitionEvent = transitionEvent;\r\n\t\t_postTransitionEvent = postTransitionEvent;\r\n\t\t\r\n\t\tif (_reverse) {\r\n\t\t\t_lifecycle.addReversedEventTypes([preTransitionEvent, transitionEvent, postTransitionEvent]);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse the dispatch order of this transition\r\n\t * @return Self\r\n\t */\r\n\tpublic function inReverse():LifecycleTransition\r\n\t{\r\n\t\t_reverse = true;\r\n\t\t_lifecycle.addReversedEventTypes([_preTransitionEvent, _transitionEvent, _postTransitionEvent]);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * A handler to run before the transition runs\r\n\t * @param handler Possibly asynchronous before handler\r\n\t * @return Self\r\n\t */\r\n\tpublic function addBeforeHandler(handler:Void->Void):LifecycleTransition\r\n\t{\r\n\t\t_dispatcher.addMessageHandler(_name, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to enter the transition\r\n\t * @param callback Completion callback\r\n\t */\r\n\tpublic function enter(callback:Dynamic = null):Void\r\n\t{\r\n\t\t// immediately call back if we have already transitioned, and exit\r\n\t\t// CHECK\r\n\t\tif (_lifecycle.state == _finalState)\r\n\t\t{\r\n\t\t\tif (callback != null) SafelyCallBack.call(callback, null, _name);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// queue this callback if we are mid transition, and exit\r\n\t\tif (_lifecycle.state == _transitionState)\r\n\t\t{\r\n\t\t\tif (callback != null) _callbacks.push(callback);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// report invalid transition, and exit\r\n\t\tif (invalidTransition())\r\n\t\t{\r\n\t\t\treportError(\"Invalid transition\", [callback]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// store the initial lifecycle state in case we need to roll back\r\n\t\tvar initialState:String = _lifecycle.state;\r\n\r\n\t\t// queue the first callback\r\n\t\tif (callback != null) _callbacks.push(callback);\r\n\r\n\t\t// put lifecycle into transition state\r\n\t\tsetState(_transitionState);\r\n\r\n\t\t// run before handlers\r\n\t\t_dispatcher.dispatchMessage(_name, function(error:Dynamic):Void\r\n\t\t{\r\n\t\t\t// revert state, report error, and exit\r\n\t\t\tif (error)\r\n\t\t\t{\r\n\t\t\t\tsetState(initialState);\r\n\t\t\t\treportError(error, _callbacks);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// dispatch pre transition and transition events\r\n\t\t\tdispatch(_preTransitionEvent);\r\n\t\t\tdispatch(_transitionEvent);\r\n\r\n\t\t\t// put lifecycle into final state\r\n\t\t\tsetState(_finalState);\r\n\r\n\t\t\t// process callback queue (dup and trash for safety)\r\n\t\t\t\r\n\t\t\tvar callbacks:Array<Dynamic> = _callbacks.concat([]);\r\n\t\t\t_callbacks = [];\r\n\t\t\tfor (callback in callbacks)\r\n\t\t\t\tSafelyCallBack.call(callback, null, _name);\r\n\r\n\t\t\t// dispatch post transition event\r\n\t\t\tdispatch(_postTransitionEvent);\r\n\r\n\t\t}, _reverse);\r\n\t}\r\n\t\r\n\t/*private function dispatchMessageFunction(error:Dynamic):Void\r\n\t{\r\n\t\t\r\n\t}*/\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function invalidTransition():Bool\r\n\t{\r\n\t\treturn _fromStates.length > 0\r\n\t\t\t&& _fromStates.indexOf(_lifecycle.state) == -1;\r\n\t}\r\n\r\n\tprivate function setState(state:String):Void\r\n\t{\r\n\t\tif (state != null && state != \"\") _lifecycle.setCurrentState(state);\r\n\t}\r\n\r\n\tprivate function dispatch(type:String):Void\r\n\t{\r\n\t\tif (type != null && type != \"\" && _lifecycle.hasEventListener(type)) {\t\r\n\t\t\t_lifecycle.dispatchEvent(new LifecycleEvent(type));\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tprivate function reportError(message:Dynamic, callbacks:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t// turn message into Error\r\n\t\tvar error:Error = Std.is(message, Error)\r\n\t\t\t? cast(message, Error)\r\n\t\t\t: new Error(message);\r\n\r\n\t\t// dispatch error event if a listener exists, or throw\r\n\t\tif (_lifecycle.hasEventListener(LifecycleEvent.ERROR))\r\n\t\t{\r\n\t\t\tvar event:LifecycleEvent = new LifecycleEvent(LifecycleEvent.ERROR, error);\r\n\t\t\t_lifecycle.dispatchEvent(event);\r\n\t\t\t// process callback queue\r\n\t\t\t// CHECK\r\n\t\t\tif (callbacks != null)\r\n\t\t\t{\r\n\t\t\t\tfor (callback in callbacks)\r\n\t\t\t\t\tif (callback != null) SafelyCallBack.call(callback, error, _name);\r\n\t\t\t\tcallbacks = [];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// explode!\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport robotlegs.bender.framework.api.ILogTarget;\r\nimport robotlegs.bender.framework.api.ILogger;\r\nimport robotlegs.bender.framework.api.LogLevel;\r\n\r\n/**\r\n * The log manager creates loggers and is itself a log target\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass LogManager implements ILogTarget\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _logLevel:UInt = LogLevel.INFO;\r\n\r\n\t/**\r\n\t * The current log level\r\n\t */\r\n\tpublic var logLevel(get, set):UInt;\r\n\tfunction get_logLevel():UInt\r\n\t{\r\n\t\treturn _logLevel;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current log level\r\n\t */\r\n\tfunction set_logLevel(value:UInt):UInt\r\n\t{\r\n\t\t_logLevel = value;\r\n\t\treturn _logLevel;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _targets:Array<ILogTarget> = [];\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Retrieves a logger for a given source\r\n\t * @param source Logging source\r\n\t * @return Logger\r\n\t */\r\n\tpublic function getLogger(source:Dynamic):ILogger\r\n\t{\r\n\t\treturn new Logger(source, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a custom log target\r\n\t * @param target Log target\r\n\t * @return this\r\n\t */\r\n\tpublic function addLogTarget(target:ILogTarget):Void\r\n\t{\r\n\t\t_targets.push(target);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function log(source:Dynamic, level:UInt, timestamp:Int, message:String, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\tif (level > _logLevel)\r\n\t\t\treturn;\r\n\r\n\t\tfor (target in _targets)\r\n\t\t{\r\n\t\t\ttarget.log(source, level, timestamp, message, params);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function removeAllTargets():Void\r\n\t{\r\n\t\t_targets = [];\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.Lib;\r\nimport robotlegs.bender.framework.api.ILogTarget;\r\nimport robotlegs.bender.framework.api.ILogger;\r\n\r\n/**\r\n * Default Robotlegs logger\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass Logger implements ILogger\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _source:Dynamic;\r\n\r\n\tprivate var _target:ILogTarget;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Creates a new logger\r\n\t * @param source The log source object\r\n\t * @param target The log target\r\n\t */\r\n\tpublic function new(source:Dynamic, target:ILogTarget)\r\n\t{\r\n\t\t_source = source;\r\n\t\t_target = target;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function debug(message:Dynamic, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t_target.log(_source, 32, Lib.getTimer(), message, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function info(message:Dynamic, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t_target.log(_source, 16, Lib.getTimer(), message, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function warn(message:Dynamic, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t_target.log(_source, 8, Lib.getTimer(), message, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function error(message:Dynamic, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t_target.log(_source, 4, Lib.getTimer(), message, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function fatal(message:Dynamic, params:Array<Dynamic> = null):Void\r\n\t{\r\n\t\t_target.log(_source, 2, Lib.getTimer(), message, params);\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\n\r\nimport openfl.errors.Error;\r\nimport robotlegs.bender.framework.impl.SafelyCallBack;\r\n\r\n/**\r\n * Message Dispatcher implementation.\r\n */\r\n@:keepSub\r\nclass MessageDispatcher\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _handlers = new Map<String,Dynamic>();\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Registers a message handler with a MessageDispatcher.\r\n\t * @param message The interesting message\r\n\t * @param handler The handler function\r\n\t */\r\n\tpublic function addMessageHandler(message:Dynamic, handler:Void->Void):Void\r\n\t{\r\n\t\tvar messageHandlers:Array<Dynamic> = _handlers[message];\r\n\t\tif (messageHandlers != null)\r\n\t\t{\r\n\t\t\tif (messageHandlers.indexOf(handler) == -1)\r\n\t\t\t\tmessageHandlers.push(handler);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t_handlers[message] = [handler];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether the MessageDispatcher has any handlers registered for a specific message.\r\n\t * @param message The interesting message\r\n\t * @return A value of true if a handler of the specified message is registered; false otherwise.\r\n\t */\r\n\tpublic function hasMessageHandler(message:Dynamic):Bool\r\n\t{\r\n\t\treturn _handlers[message];\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a message handler from a MessageDispatcher\r\n\t * @param message The interesting message\r\n\t * @param handler The handler function\r\n\t */\r\n\tpublic function removeMessageHandler(message:Dynamic, handler:Void->Void):Void\r\n\t{\r\n\t\tvar messageHandlers:Array<Dynamic> = _handlers[message];\r\n\t\tvar index:Int = (messageHandlers != null) ? messageHandlers.indexOf(handler):-1;\r\n\t\tif (index != -1)\r\n\t\t{\r\n\t\t\tmessageHandlers.splice(index, 1);\r\n\t\t\tif (messageHandlers.length == 0)\r\n\t\t\t\t_handlers.remove(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches a message into the message flow.\r\n\t * @param message The interesting message\r\n\t * @param callback The completion callback function\r\n\t * @param reverse Should handlers be called in reverse order\r\n\t */\r\n\tpublic function dispatchMessage(message:Dynamic, callback:Dynamic = null, reverse:Bool = false):Void\r\n\t{\r\n\t\tvar handlers:Array<Dynamic> = _handlers[message];\r\n\t\t// CHECK\r\n\t\tif (handlers.length > 0)\r\n\t\t{\r\n\t\t\thandlers = handlers.concat([]);\r\n\t\t\tif (!reverse) handlers.reverse();\r\n\t\t\tnew MessageRunner(message, handlers, callback).run();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (callback != null) SafelyCallBack.call(callback);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@:keepSub\r\nclass MessageRunner\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _message:Dynamic;\r\n\r\n\tprivate var _handlers:Array<Dynamic>;\r\n\r\n\tprivate var _callback:Void->Void;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(message:Dynamic, handlers:Array<Dynamic>, callback:Void->Void)\r\n\t{\r\n\t\t_message = message;\r\n\t\t_handlers = handlers;\r\n\t\t_callback = callback;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function run():Void\r\n\t{\r\n\t\tnext();\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Functions                                                          */\r\n\t/*============================================================================*/\r\n\r\n\tprivate function next():Void\r\n\t{\r\n\t\t// Try to keep things synchronous with a simple loop,\r\n\t\t// forcefully breaking out for async handlers and recursing.\r\n\t\t// We do this to avoid increasing the stack depth unnecessarily.\r\n\t\tvar handler:Dynamic;\r\n\t\t// CHECK\r\n\t\twhile ((handler = _handlers.pop()) != null)\r\n\t\t{\r\n\t\t\tif (handler.length == 0) // sync handler: ()\r\n\t\t\t{\r\n\t\t\t\thandler();\r\n\t\t\t}\r\n\t\t\telse if (handler.length == 1) // sync handler: (message)\r\n\t\t\t{\r\n\t\t\t\thandler(_message);\r\n\t\t\t}\r\n\t\t\telse if (handler.length == 2) // sync or async handler: (message, callback)\r\n\t\t\t{\r\n\t\t\t\tvar handled:Bool = false;\r\n\t\t\t\thandler(_message, function(error:Dynamic = null, msg:Dynamic = null):Void\r\n\t\t\t\t{\r\n\t\t\t\t\t// handler must not invoke the callback more than once\r\n\t\t\t\t\tif (handled) return;\r\n\r\n\t\t\t\t\thandled = true;\r\n\t\t\t\t\tif (error != null || _handlers.length == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (_callback != null) SafelyCallBack.call(_callback, error, _message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnext();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// IMPORTANT: MUST break this loop with a RETURN. See top.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse // ERROR: this should NEVER happen\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(\"Bad handler signature\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If we got here then this loop finished synchronously.\r\n\t\t// Nobody broke out, so we are done.\r\n\t\t// This relies on the various return statements above. Be careful.\r\n\t\tif (_callback != null) SafelyCallBack.call(_callback, null, _message);\r\n\t}\r\n}\r\n","package robotlegs.bender.framework.impl;\r\n\r\nimport robotlegs.bender.framework.api.IMatcher;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n@:keepSub\r\nclass ObjectMatcher implements IMatcher\r\n{\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\r\n\t}\r\n\t\r\n\tpublic function matches(item:Dynamic):Bool\r\n\t{\r\n\t\treturn Std.is(item, Class) == false;\r\n\t}\r\n\t\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport robotlegs.bender.framework.api.IMatcher;\r\n\r\n/**\r\n * Robotlegs object processor\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass ObjectProcessor\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _handlers:Array<Dynamic> = [];\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Add a handler to process objects that match a given matcher.\r\n\t * @param matcher The matcher\r\n\t * @param handler The handler function\r\n\t */\r\n\tpublic function addObjectHandler(matcher:IMatcher, handler:Void->Void):Void\r\n\t{\r\n\t\t_handlers.push(new ObjectHandler(matcher, handler));\r\n\t}\r\n\r\n\t/**\r\n\t * Process an object by running it through all registered handlers\r\n\t * @param object The object instance to process.\r\n\t */\r\n\tpublic function processObject(object:Dynamic):Void\r\n\t{\r\n\t\tfor (handler in _handlers)\r\n\t\t{\r\n\t\t\thandler.handle(object);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all handlers\r\n\t */\r\n\tpublic function removeAllHandlers():Void\r\n\t{\r\n\t\t_handlers = [];\r\n\t}\r\n}\r\n\r\n\r\n@:keepSub\r\nclass ObjectHandler\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _matcher:IMatcher;\r\n\r\n\tprivate var _handler:Dynamic;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(matcher:IMatcher, handler:Dynamic)\r\n\t{\r\n\t\t_matcher = matcher;\r\n\t\t_handler = handler;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function handle(object:Dynamic):Void\r\n\t{\r\n\t\tif (_matcher.matches(object)) {\r\n\t\t\t_handler(object);\r\n\t\t}\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.events.IEventDispatcher;\r\nimport robotlegs.bender.framework.api.PinEvent;\r\n\r\n/**\r\n * Pins objects in memory\r\n *\r\n * @private\r\n */\r\n@:keepSub\r\nclass Pin\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Private Properties                                                         */\r\n\t/*============================================================================*/\r\n\r\n\tprivate var _instances = new Map<String, Dynamic>();\r\n\r\n\tprivate var _dispatcher:IEventDispatcher;\r\n\r\n\t/*============================================================================*/\r\n\t/* Constructor                                                                */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic function new(dispatcher:IEventDispatcher)\r\n\t{\r\n\t\t_dispatcher = dispatcher;\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * Pin an object in memory\r\n\t * @param instance Instance to pin\r\n\t */\r\n\tpublic function detain(instance:Dynamic):Void\r\n\t{\r\n\t\tif (_instances[instance] == null)\r\n\t\t{\r\n\t\t\t_instances[instance] = true;\r\n\t\t\t_dispatcher.dispatchEvent(new PinEvent(PinEvent.DETAIN, instance));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unpins an object\r\n\t * @param instance Instance to unpin\r\n\t */\r\n\tpublic function release(instance:Dynamic):Void\r\n\t{\r\n\t\tif (_instances[instance])\r\n\t\t{\r\n\t\t\t_instances.remove(instance);\r\n\t\t\t_dispatcher.dispatchEvent(new PinEvent(PinEvent.RELEASE, instance));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all pins\r\n\t */\r\n\tpublic function releaseAll():Void\r\n\t{\r\n\t\tfor (instance in _instances)\r\n\t\t{\r\n\t\t\trelease(instance);\r\n\t\t}\r\n\t}\r\n}","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\n\r\nimport openfl.system.ApplicationDomain;\r\nimport org.swiftsuspenders.Injector;\r\nimport robotlegs.bender.framework.api.IInjector;\r\n\r\n/**\r\n * Robotlegs IInjector Adapter\r\n */\r\n@:keepSub\r\nclass RobotlegsInjector extends Injector implements IInjector\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Properties                                                          */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic var parent(get, set):IInjector;\r\n\t\r\n\tpublic function set_parent(parentInjector:IInjector):IInjector\r\n\t{\r\n\t\tthis.parentInjector = cast(parentInjector, RobotlegsInjector);\r\n\t\treturn cast(parentInjector, IInjector);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic function get_parent():IInjector\r\n\t{\r\n\t\treturn cast(this.parentInjector, RobotlegsInjector);\r\n\t}\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t* @inheritDoc\r\n\t*/\r\n\tpublic function createChild(applicationDomain:ApplicationDomain = null):IInjector\r\n\t{\r\n\t\tvar childInjector:IInjector = new RobotlegsInjector();\r\n\t\tif (applicationDomain != null) childInjector.applicationDomain = applicationDomain;\r\n\t\telse childInjector.applicationDomain = this.applicationDomain;\r\n\t\tchildInjector.parent = this;\r\n\t\treturn childInjector;\r\n\t}\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.impl;\r\nimport openfl.errors.Error;\r\n\r\n@:keepSub\r\nclass SafelyCallBack \r\n{\r\n\t/*============================================================================*/\r\n\t/* Public Functions                                                           */\r\n\t/*============================================================================*/\r\n\r\n\t/**\r\n\t * <p>Helper function to call any of the 3 forms of eventual callback:</p>\r\n\t *\r\n\t * <code>(), (error) and (error, message)</code>\r\n\t *\r\n\t * <p>NOTE: This helper will not handle null callbacks. You should check\r\n\t * if the callback is null from the calling location:</p>\r\n\t *\r\n\t * <code>callback &amp;&amp; SafelyCallBack(callback, error, message);</code>\r\n\t *\r\n\t * <p>This prevents the overhead of calling SafelyCallBack()\r\n\t * when there is no callback to call. Likewise it reduces the overhead\r\n\t * of a null check in SafelyCallBack().</p>\r\n\t *\r\n\t * <p>QUESTION: Is this too harsh? Should we protect from null?</p>\r\n\t *\r\n\t * @param callback The actual callback\r\n\t * @param error An optional error\r\n\t * @param message An optional message\r\n\t */\r\n\r\n\tpublic static function call(callback:Dynamic, errorMsg:Dynamic = null, message:Dynamic = null)\r\n\t{\r\n\t\t#if js\r\n\t\t\tcallback(errorMsg, message);\r\n\t\t#else \r\n\t\t\tif (message != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcallback(errorMsg, message);\r\n\t\t\t\t}\r\n\t\t\t\tcatch( error : Error ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tcallback(errorMsg);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch( error2 : Error ) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch( error3 : Error ) {\r\n\t\t\t\t\t\t\ttrace(\"Error calling CallBack : \" + error3 );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (errorMsg != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcallback(errorMsg);\r\n\t\t\t\t}\r\n\t\t\t\tcatch( error2 : Error ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch( error3 : Error ) {\r\n\t\t\t\t\t\ttrace(\"Error calling CallBack : \" + error3 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tcallback(errorMsg, message);\r\n\t\t\t}\r\n\t\t\tcatch( error : Error ) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcallback(errorMsg);\r\n\t\t\t\t}\r\n\t\t\t\tcatch( error2 : Error ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch( error3 : Error ) {\r\n\t\t\t\t\t\ttrace(\"Error calling CallBack : \" + error3 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t#end\r\n\t}\r\n}\r\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class defines mathematical functions and constants.\n**/\n#if cpp @:include(\"hxMath\") #end\nextern class Math\n{\n\t/**\n\t\tRepresents the ratio of the circumference of a circle to its diameter, \n\t\tspecified by the constant, π. `PI` is approximately 3.141592653589793.\n\t**/\n\tstatic var PI(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of -1.0 / 0.0.\n\n\t\tOperations with NEGATIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var NEGATIVE_INFINITY(default, null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes negative infinity.\n\n\t\tFor example, this is the result of 1.0 / 0.0.\n\n\t\tOperations with POSITIVE_INFINITY as an operand may result in\n\t\tNEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. \n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\t**/\n\tstatic var POSITIVE_INFINITY(default,null) : Float;\n\n\t/**\n\t\tA special Float constant which denotes an invalid number.\n\n\t\tNaN stands for \"Not a Number\". It occurs when a mathematically incorrect\n\t\toperation is executed, such as taking the square root of a negative\n\t\tnumber: Math.sqrt(-1).\n\n\t\tAll further operations with NaN as an operand will result in NaN.\n\n\t\tIf this constant is converted to an Int, e.g. through Std.int(), the\n\t\tresult is unspecified.\n\n\t\tIn order to test if a value is NaN, you should use Math.isNaN() function.\n\n\t\t@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected\n\t\tresults when performing arithmetic operations with NaN on Windows, \n\t\tsee [https://bugs.php.net/bug.php?id=42143]\n\t**/\n\tstatic var NaN(default, null) : Float;\n\n\t/**\n\t\tReturns the absolute value of `v`.\n\n\t\tIf `v` is positive or 0, the result is unchanged. Otherwise the result \n\t\tis -`v`.\n\t\t\n\t\tIf `v` is NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is \n\t\tPOSITIVE_INFINITY.\n\t\t\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function abs(v:Float):Float;\n\n\t/**\n\t\tReturns the smaller of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t\tIf `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t**/\n\tstatic function min(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the greater of values `a` and `b`.\n\n\t\tIf `a` or `b` are NaN, the result is NaN.\n\t\tIf `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function max(a:Float, b:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric sine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function sin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric cosine of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function cos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric tangent of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function tan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc of the specified angle `v`, in radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function asin(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc cosine of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function acos(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent of the specified angle `v`, \n\t\tin radians.\n\t\t\n\t\tIf `v` is NaN or infinite, the result is NaN.\n\t**/\n\tstatic function atan(v:Float):Float;\n\n\t/**\n\t\tReturns the trigonometric arc tangent whose tangent is the quotient of \n\t\ttwo specified numbers, in radians.\n\t\t\n\t\tIf parameter `x` or `y`  is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is NaN.\n\t**/\n\tstatic function atan2(y:Float, x:Float):Float;\n\n\t/**\n\t\tReturns Euler's number, raised to the power of `v`.\n\t\t\n\t\texp(1.0) is approximately 2.718281828459.\n\t\t\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is NEGATIVE_INFINITY, the result is 0.0.\n\t\tIf `v` is NaN, the result is NaN.\n\t**/\n\tstatic function exp(v:Float):Float;\n\n\t/**\n\t\tReturns the natural logarithm of `v`.\n\t\t\n\t\tThis is the mathematical inverse operation of exp, \n\t\ti.e. `log(exp(v)) == v` always holds.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is NEGATIVE_INFINITY.\n\t**/\n\tstatic function log(v:Float):Float;\n\n\t/**\n\t\tReturns a specified base `v` raised to the specified power `exp`.\n\t**/\n\tstatic function pow(v:Float, exp:Float):Float;\n\n\t/**\n\t\tReturns the square root of `v`.\n\t\t\n\t\tIf `v` is negative (including NEGATIVE_INFINITY) or NaN, the result \n\t\tis NaN.\n\t\tIf `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.\n\t\tIf `v` is 0.0, the result is 0.0.\n\t**/\n\tstatic function sqrt(v:Float):Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value.\n\t\t\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function round(v:Float):Int;\n\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function floor(v:Float):Int;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`.\n\n\t\tIf `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY \n\t\tor POSITIVE_INFINITY, the result is unspecified.\n\t**/\n\tstatic function ceil(v:Float):Int;\n\n\t/**\n\t\tReturns a pseudo-random number which is greater than or equal to 0.0, \n\t\tand less than 1.0.\n\t**/\n\tstatic function random() : Float;\n\n\t#if ((flash9 && !as3) || cpp)\n\t/**\n\t\tReturns the largest integer value that is not greater than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function ffloor( v : Float ) : Float;\n\n\t/**\n\t\tReturns the smallest integer value that is not less than `v`, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fceil( v : Float ) : Float;\n\n\t/**\n\t\tRounds `v` to the nearest integer value, as a Float.\n\n\t\tIf `v` is is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, \n\t\tthe result is unspecified.\n\t**/\n\tstatic function fround( v : Float ) : Float;\n\n\t#else\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t#end\n\n\n\t/**\n\t\tTells if `f` is a finite number.\n\n\t\tIf `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result \n\t\tis false, otherwise the result is true.\n\t**/\n\tstatic function isFinite( f : Float ) : Bool;\n\n\t/**\n\t\tTells if `f` is not a valid number.\n\n\t\tIf `f` is NaN, the result is true, otherwise the result is false. \n\t\tIn particular, both POSITIVE_INFINITY and NEGATIVE_INFINITY are\n\t\tnot considered NaN.\n\t**/\n\tstatic function isNaN( f : Float ) : Bool;\n\n\tprivate static function __init__() : Void untyped {\n\t#if flash9\n\t\tNaN = __global__[\"Number\"].NaN;\n\t\tNEGATIVE_INFINITY = __global__[\"Number\"].NEGATIVE_INFINITY;\n\t\tPOSITIVE_INFINITY = __global__[\"Number\"].POSITIVE_INFINITY;\n\t#else\n\t\t#if !js // genjs.ml will insert this only if necessary.\n\t\t\tMath.__name__ = [\"Math\"];\n\t\t#end\n\t\tMath.NaN = Number[\"NaN\"];\n\t\tMath.NEGATIVE_INFINITY = Number[\"NEGATIVE_INFINITY\"];\n\t\tMath.POSITIVE_INFINITY = Number[\"POSITIVE_INFINITY\"];\n\t#end\n\t#if js\n\t\t__feature__(\"Type.resolveClass\",$hxClasses['Math'] = Math);\n\t#end\n\t\tMath.isFinite = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isFinite\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isFinite\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isFinite\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t\tMath.isNaN = function(i) {\n\t\t\treturn\n\t\t\t#if flash9\n\t\t\t__global__[\"isNaN\"](i);\n\t\t\t#elseif flash\n\t\t\t_global[\"isNaN\"](i);\n\t\t\t#elseif js\n\t\t\t__js__(\"isNaN\")(i);\n\t\t\t#else\n\t\t\tfalse;\n\t\t\t#end\n\t\t};\n\t}\n\n}\n\n\n","package com.imagination.robotlegs.basic.events;\r\n\r\nimport openfl.events.Event;\r\n\r\n/**\r\n * ...\r\n * @author P.J.Shand\r\n */\r\n\r\nclass AppEvent extends Event\r\n{\r\n\tstatic public var INIT:String = \"init\";\r\n\tstatic public var SETUP_COMPLETE:String = \"setup_complete\";\r\n\r\n\tpublic function new(type:String, bubbles:Bool=false, cancelable:Bool=false) \r\n\t{\r\n\t\tsuper(type, bubbles, cancelable);\r\n\t\t\r\n\t}\r\n\t\r\n}","package openfl.net; #if !flash #if !lime_legacy\n\n\n/**\n * The URLRequestMethod class provides values that specify whether the\n * URLRequest object should use the <code>POST</code> method or the\n * <code>GET</code> method when sending data to a server.\n */\nclass URLRequestMethod {\n\t\n\t/**\n\t * Specifies that the URLRequest object is a <code>DELETE</code>.\n\t */\n\tpublic static var DELETE:String = \"DELETE\";\n\t\n\t/**\n\t * Specifies that the URLRequest object is a <code>GET</code>.\n\t */\n\tpublic static var GET:String = \"GET\";\n\t\n\t/**\n\t * Specifies that the URLRequest object is a <code>HEAD</code>.\n\t */\n\tpublic static var HEAD:String = \"HEAD\";\n\t\n\t/**\n\t * Specifies that the URLRequest object is <code>OPTIONS</code>.\n\t */\n\tpublic static var OPTIONS:String = \"OPTIONS\";\n\t\n\t/**\n\t * Specifies that the URLRequest object is a <code>POST</code>.\n\t *\n\t * <p><i>Note:</i> For content running in Adobe AIR, when using the\n\t * <code>navigateToURL()</code> function, the runtime treats a URLRequest\n\t * that uses the POST method(one that has its <code>method</code> property\n\t * set to <code>URLRequestMethod.POST</code>) as using the GET method.</p>\n\t */\n\tpublic static var POST:String = \"POST\";\n\t\n\t/**\n\t * Specifies that the URLRequest object is a <code>PUT</code>.\n\t */\n\tpublic static var PUT:String = \"PUT\";\n\t\n}\n\n\n#else\ntypedef URLRequestMethod = openfl._v2.net.URLRequestMethod;\n#end\n#else\ntypedef URLRequestMethod = flash.net.URLRequestMethod;\n#end","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.api;\r\n\r\n/**\r\n * Robotlegs object lifecycle state\r\n */\r\n@:keepSub\r\nclass LifecycleState\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var UNINITIALIZED:String = \"uninitialized\";\r\n\r\n\tpublic static var INITIALIZING:String = \"initializing\";\r\n\r\n\tpublic static var ACTIVE:String = \"active\";\r\n\r\n\tpublic static var SUSPENDING:String = \"suspending\";\r\n\r\n\tpublic static var SUSPENDED:String = \"suspended\";\r\n\r\n\tpublic static var RESUMING:String = \"resuming\";\r\n\r\n\tpublic static var DESTROYING:String = \"destroying\";\r\n\r\n\tpublic static var DESTROYED:String = \"destroyed\";\r\n}\r\n","//------------------------------------------------------------------------------\r\n//  Copyright (c) 2009-2013 the original author or authors. All Rights Reserved. \r\n// \r\n//  NOTICE: You are permitted to use, modify, and distribute this file \r\n//  in accordance with the terms of the license agreement accompanying it. \r\n//------------------------------------------------------------------------------\r\n\r\npackage robotlegs.bender.framework.api;\r\n\r\n/**\r\n * Robotlegs log level\r\n */\r\n@:keepSub\r\nclass LogLevel\r\n{\r\n\r\n\t/*============================================================================*/\r\n\t/* Public Static Properties                                                   */\r\n\t/*============================================================================*/\r\n\r\n\tpublic static var FATAL:UInt = 2;\r\n\r\n\tpublic static var ERROR:UInt = 4;\r\n\r\n\tpublic static var WARN:UInt = 8;\r\n\r\n\tpublic static var INFO:UInt = 16;\r\n\r\n\tpublic static var DEBUG:UInt = 32;\r\n\r\n\tpublic static var NAME:Array<Dynamic> = [\r\n\t\t0, 0, 'FATAL', // 2\r\n\t\t0, 'ERROR', // 4\r\n\t\t0, 0, 0, 'WARN', // 8\r\n\t\t0, 0, 0, 0, 0, 0, 0, 'INFO', // 16\r\n\t\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'DEBUG']; // 32\r\n}\r\n"],
"names":[],
"mappings":"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"
}